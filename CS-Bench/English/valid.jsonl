{"ID": 2184, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Do two different data structures necessarily have different logical and physical structures?", "A": "Certainly different", "B": "May be the same, such as binary tree and binary search tree.", "C": "The logical structure is always the same, while the physical structure varies.", "D": "The logical structure is always different, while the physical structure remains the same.", "Answer": "B"}
{"ID": 2185, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What factors affect the time complexity of an algorithm?", "A": "Determined solely by the number of algorithm executions", "B": "Related to the programming language used by the algorithm", "C": "Not only depends on the size of the problem n, but also on the nature of the data to be input.", "D": "Only related to the logical structure of the algorithm.", "Answer": "C"}
{"ID": 2186, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What does it mean for an algorithm to work in place?", "A": "The algorithm requires no additional space.", "B": "The auxiliary space of the algorithm is proportional to the input size.", "C": "The auxiliary space required by the algorithm is constant, that is, O(1).", "D": "The execution time of the algorithm is constant.", "Answer": "C"}
{"ID": 2187, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "How does the execution efficiency of the same algorithm vary across different implementation languages?", "A": "The higher the level of the implementation language, the higher the execution efficiency.", "B": "Execution efficiency is independent of the level of the implementation language.", "C": "The higher the level of the implementation language for the same algorithm, the lower the execution efficiency.", "D": "The execution efficiency depends solely on the algorithm itself, irrespective of the implementation language.", "Answer": "C"}
{"ID": 2188, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Which of the following descriptions is correct after deleting an element from the middle position in the ListDelete function of a sequential list?", "A": "The length of the sequential list remains unchanged.", "B": "Only the positions of elements before the deleted element are changed.", "C": "Only the positions of elements after the deleted element are changed.", "D": "All elements' positions have changed.", "Answer": "C"}
{"ID": 2189, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "How does the InsertNextNode function of a singly linked list correctly insert a new element e after a given node p?", "A": "Create a new node and link it after node p.", "B": "First, delete the nodes following the p node, then insert a new node.", "C": "Insert the new element e at the beginning of the linked list.", "D": "Insert the new element e before the node p.", "Answer": "A"}
{"ID": 2190, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "How does the DeleteNode function correctly delete a specified node p in a singly linked list?", "A": "Swap the data of node p with its successor node, then delete the successor node.", "B": "Directly delete node p", "C": "Delete the node preceding p", "D": "Replace the p-node with its successor node.", "Answer": "A"}
{"ID": 2191, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The sequential storage structure of a linear list is a kind of ().", "A": "Random Access Storage Structure", "B": "Sequential access storage structure", "C": "Index-based storage structure", "D": "Hash-based storage structure", "Answer": "A"}
{"ID": 2192, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "Given a one-dimensional array with n elements, the minimum time complexity to create a sorted singly linked list is ( ).", "A": "O(1)", "B": "O(n)", "C": "O(n^2)", "D": "O(nlog₂n)", "Answer": "D", "Explanation": "If a linked list is created first and then elements are inserted sequentially to establish an ordered list, each insertion requires traversing the linked list to find the insertion position, which is essentially straight insertion sort with a time complexity of O(n). If the array is sorted first and then the linked list is created, the time complexity of creating the linked list is O(n), and the best time complexity for array sorting is O(nlog2n), resulting in a total time complexity of O(nlog2n). Therefore, option D is selected."}
{"ID": 2193, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "In a doubly linked list storage structure, when deleting the node pointed to by P, it is necessary to modify the pointers ().", "A": "p->llink->rlink = p->rlink; p->rlink->llink = p->llink;", "B": "p->link = p->llink->1link; p->llink->rlink = p;", "C": "p->rlink->llink = p; p->rlink = p->rlink->rlink;", "D": "p->rlink = p->llink->llink; p->llink = p->rlink->rlink;", "Answer": "A", "Explanation": "This task simply involves deleting a node, ensuring to link the previous and next nodes of P together. The key is to maintain the integrity of the chain during the modification of the node pointers!"}
{"ID": 2194, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The operational characteristics of a stack can be summarized as what?", "A": "Last In, First Out (LIFO)", "B": "First In, First Out (FIFO)", "C": "Random Access", "D": "Last In, First Out (LIFO)", "Answer": "A"}
{"ID": 2195, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "How is the pop operation of a sequential stack implemented?", "A": "Check if the stack is full, then push an element onto the top of the stack.", "B": "Check if the stack is empty, then remove the top element of the stack.", "C": "Return the value of the top element of the stack without modifying the stack.", "D": "Set the top-of-stack pointer to -1.", "Answer": "B"}
{"ID": 2196, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What are the conditions for an empty queue and a full queue in a circular queue, respectively?", "A": "Queue empty: Q.front == Q.rear; Queue full: (Q.rear+1) % MaxSize == Q.front", "B": "Empty queue: Q.front == Q.rear + 1; Full queue: Q.rear == Q.front.", "C": "Queue empty: Q.rear == Q.front + 1; Queue full: Q.front == Q.rear", "D": "The conditions for queue empty and queue full are the same.", "Answer": "A"}
{"ID": 2197, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The main difference between a stack and a queue is ().", "A": "Their logical structures are different.", "B": "Their storage structures are different.", "C": "The elements contained are different.", "D": "The constraints for insertion and deletion operations are different.", "Answer": "D"}
{"ID": 2198, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Applications of the stack do not include ().", "A": "Recursion", "B": "Decimal Conversion", "C": "Maze Solving", "D": "Buffer", "Answer": "D"}
{"ID": 2199, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "The \"first in, first out\" characteristic of a queue refers to ().\nⅠ. The last element inserted into the queue is always the last to be deleted\nⅡ. When insertion and deletion operations occur simultaneously, the insertion operation always takes precedence\nⅢ. Whenever there is a deletion operation, an insertion operation must be performed first\nⅣ. The element deleted from the queue is always the one that was inserted earliest", "A": "Ⅰ", "B": "Ⅰand Ⅳ", "C": "Ⅱamd Ⅲ", "D": "Ⅳ", "Answer": "B", "Explanation": "The characteristic of a queue being \"first in, first out\" is reflected in the fact that elements that enter the queue first will leave the queue first, while elements that enter the queue later will leave the queue later. Entering the queue corresponds to an insertion operation, and leaving the queue corresponds to a deletion operation. Both Ⅰ and Ⅳ are correct."}
{"ID": 2200, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "In a linked queue, assuming the front pointer is 'front' and the rear pointer is 'rear', the operation required to enqueue the element pointed to by x is ().", "A": "front=x, front->next", "B": "x->next = front->next; front = x", "C": "rear->next = x; rear = x;", "D": "rear->next = x, x->next = null, rear = x", "Answer": "D", "Explanation": "During the insertion operation, first insert node x at the end of the linked list, and then make rear point to this node x. The approach in C is not rigorous enough, because it is the end of the queue, so the tail x->next must be set to NULL."}
{"ID": 2201, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "If an n-th order upper triangular matrix A is compressed and stored in a one-dimensional array B[1...n(n+1)/2+1] in column-major order, then the relationship between the indices i, j of the non-zero element a_i,j (1≤i,j≤n) stored in B[k] and the index k is ().", "A": "i(i+1)/2 + j", "B": "i(i - 1)/2 + j - 1", "C": "j(j-1)/2 + i", "D": "j(j - 1)/2 + i - 1", "Answer": "C", "Explanation": "Using column-major order storage, thus for element a, there are j-1 columns ahead, with a total of 1+2+3+...+j-1=j(j-1)/2 elements. Element a_i,j is the ith element in the jth column, and since the index of array B starts from 1, therefore k=j(j-1)/2+i."}
{"ID": 2202, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What are the main characteristics of the KMP algorithm?", "A": "The main string pointer does not backtrack when there is a mismatch.", "B": "Applicable only to small-scale data matching", "C": "Applicable to any type of string matching, extremely efficient.", "D": "Use hash functions for matching", "Answer": "A"}
{"ID": 2203, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Given the string S='aaab', the values of its 'next array' are ().", "A": "0123", "B": "0112", "C": "0231", "D": "1211", "Answer": "A"}
{"ID": 2204, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What are the characteristics of a complete binary tree?", "A": "All leaf nodes are located on the last two levels.", "B": "Binary tree with only left or right child", "C": "Every layer is full.", "D": "Leaf nodes only exist at the last level.", "Answer": "A"}
{"ID": 2205, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What are the traversal methods for a binary tree?", "A": "Pre-order, In-order, Post-order", "B": "Preorder, Postorder", "C": "In-order, Post-order", "D": "Preorder, Inorder", "Answer": "A"}
{"ID": 2206, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What is the main purpose of introducing a threaded binary tree?", "A": "Accelerate the speed of finding the predecessor or successor of a node.", "B": "Increase the depth of a binary tree", "C": "Reduce the space occupied by the binary tree.", "D": "Make binary tree traversal more efficient.", "Answer": "A"}
{"ID": 2207, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "A complete binary tree with a height of h has at least () nodes.", "A": "2^h", "B": "2^h + 1", "C": "2^(h-1)", "D": "2^h - 1", "Answer": "C"}
{"ID": 2208, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "If X is a node with a left child in a binary inorder threaded tree and X is not the root, then the predecessor of X is ().", "A": "X's parents", "B": "The leftmost node in the right subtree of X", "C": "The rightmost node in the left subtree of X", "D": "The rightmost leaf node in the left subtree of X", "Answer": "C", "Explanation": "In a binary threaded inorder tree, if a node has a left child, then following the inorder \"left-root-right\" sequence, the predecessor of that node is the rightmost node in the left subtree (note that it is not necessarily the rightmost leaf node)."}
{"ID": 2209, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "If a Huffman tree of degree m has n leaf nodes, then the number of non-leaf nodes is ().", "A": "n-1", "B": "[n/m] - 1", "C": "[(n-1)/(m-1)]", "D": "[n/(m-1)] - 1", "Answer": "C", "Explanation": "A Huffman tree of degree m should only have nodes of degree 0 and m. Let there be n_m nodes of degree m and n_0 nodes of degree 0. Let the total number of nodes be n, where n = n_0 + n_m. Since a Huffman tree with n nodes has n-1 branches, we have mn_m = n-1 = n_m + n_0 - 1. Rearranging, we get (m-1)n_m = n_0 - 1, and thus n_m = (n_0 - 1) / (m - 1)."}
{"ID": 2210, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What is a spanning tree?", "A": "Any graph connecting vertices", "B": "A graph in which all vertices are connected by edges but no cycles exist.", "C": "A graph containing all vertices but without any edges.", "D": "A graph containing all edges but without vertices.", "Answer": "B"}
{"ID": 2211, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What is a simple graph?", "A": "A graph containing repeated edges and self-loops", "B": "A graph consisting only of vertices", "C": "A graph that does not have multiple edges between two vertexs and does not have edges from a vertex to itself.", "D": "A graph containing at least one cycle.", "Answer": "C"}
{"ID": 2212, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "In an adjacency matrix, how are the degree, out-degree, and in-degree of a node defined?", "A": "The degree is the number of non-zero elements, the out-degree is the number of non-zero elements in a row, and the in-degree is the number of non-zero elements in a column.", "B": "The degree is the number of zero elements, the out-degree is the number of zero elements in a column, and the in-degree is the number of zero elements in a row.", "C": "All nodes have the same degree, outdegree, and indegree.", "D": "All nodes have a degree, out-degree, and in-degree of zero.", "Answer": "A"}
{"ID": 2213, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "In the adjacency list storage structure of a directed graph, the number of times vertex V appears in the edge list is ().", "A": "The degree of vertex V", "B": "Outdegree of vertex V", "C": "The in-degree of vertex V", "D": "The number of edges incident to vertex V", "Answer": "C"}
{"ID": 2214, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "If a weighted directed graph G is stored using an adjacency matrix, then the in-degree of v_i is equal to () of the adjacency matrix.", "A": "The number of non-infinite elements in the i-th row", "B": "The number of non-infinite elements in the i-th column", "C": "The number of non-infinite and non-zero elements in the i-th row.", "D": "The number of non-infinite and non-zero elements in the i-th column.", "Answer": "D", "Explanation": "In the adjacency matrix of a directed graph, both 0 and ∞ indicate the absence of a directed edge. The in-degree is calculated from the elements in the columns of the adjacency matrix, while the out-degree is calculated from the elements in the rows of the adjacency matrix."}
{"ID": 2215, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "Among the following statements about finding the critical path, the incorrect one is ().", "A": "Determining the critical path is based on topological sorting.", "B": "The earliest occurrence time of an event is the same as the earliest start time of the activities originating from that event.", "C": "The latest occurrence time of an event is the difference between the latest start time of the activity with the event as its tail and the duration of that activity.", "D": "Critical activities are always located on the critical path.", "Answer": "C", "Explanation": "The latest occurrence time of an event is equal to Min{the latest start time of activities with the event as the tail, the difference between the latest finish time and the duration of the activity}."}
{"ID": 2216, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What is the role of keywords in search?", "A": "The data item that uniquely identifies the element within a data element; the search result should be unique.", "B": "Arbitrary data items identifying data elements", "C": "Used only for sorting, not for searching.", "D": "Used for classifying data elements", "Answer": "A"}
{"ID": 2217, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What are the characteristics of a B-tree?", "A": "Multiway balanced search tree, where each node has at most m subtrees.", "B": "Single-path search tree, where each node has at most two subtrees.", "C": "Multiway unbalanced search tree, where each node has at most m subtrees.", "D": "Multi-way balanced search tree, where each node has at most two subtrees.", "Answer": "A"}
{"ID": 2218, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "Among the following statements about an m-order B-tree, the incorrect one is ().", "A": "The root node has at most m children in the tree.", "B": "All leaf nodes are on the same level.", "C": "Non-leaf nodes have at least m/2 (for even m) or (m+1)/2 (for odd m) subtrees.", "D": "The data in the root node is ordered.", "Answer": "C", "Explanation": "All non-terminal nodes, except for the root node, have at least [m/2] subtrees. The root node can have up to m subtrees, and if it is not a leaf node, it must have at least 2 subtrees."}
{"ID": 2219, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "For a search list containing n elements, the average search length (ASL) is ().", "A": "with O(log2n)", "B": "with O(1)", "C": "Not directly dependent on n", "D": "Directly dependent on the table length m", "Answer": "C", "Explanation": "In a hash table, the average search length is directly related to the load factor α, and the search efficiency of the table does not directly depend on the number of existing entries n or the table size m. If all the records stored in the hash table are synonyms for a certain address, then the average search length is O(n) rather than O(1)."}
{"ID": 2220, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "The keys of a set of records are (19,14,23,1,68,20,84,27,55,11,10,79). Construct a hash table using the chaining method, with the hash function H(key) = key MOD 13. The number of records in the chain at address 1 is ().", "A": "1", "B": "2", "C": "3", "D": "4", "Answer": "D", "Explanation": "The calculation by the hash function shows that the addresses after hashing for 14, 1, 27, 79 are all 1, indicating that there are 4 records."}
{"ID": 2221, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What is the basic idea of binary insertion sort?", "A": "Use binary search to determine the insertion position.", "B": "Insert directly in order", "C": "Sort by swapping adjacent elements.", "D": "Merge all elements into an ordered sequence once.", "Answer": "A"}
{"ID": 2222, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What is the difference between binary insertion sort and straight insertion sort?", "A": "Binary insertion sort reduces the number of key comparisons.", "B": "Binary Insertion Sort is faster.", "C": "Binary Insertion Sort increases the number of element movements.", "D": "The time complexity of binary insertion sort is lower.", "Answer": "A"}
{"ID": 2223, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "How is the stability of the Shell sort algorithm?", "A": "Unstable", "B": "stable", "C": "Dependent on the input data", "D": "Unable to determine", "Answer": "A"}
{"ID": 2224, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What is the time complexity of heap sort?", "A": "O(n^2)", "B": "O(nlogn)", "C": "O(n)", "D": "O(logn)", "Answer": "B"}
{"ID": 2225, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "The stability of a sorting algorithm refers to ().", "A": "After sorting, elements with the same key can maintain their relative positions in the original order.", "B": "After sorting, elements with the same key maintain their absolute positions from the original order.", "C": "The performance of sorting algorithms is not significantly related to the number of elements being sorted.", "D": "The performance of sorting algorithms is closely related to the number of elements to be sorted.", "Answer": "A", "Explanation": "Note that the absolute position here refers to the position i of element R before sorting; that is, the position of R remains unchanged after sorting. Clearly, option B is incorrect. Options C and D are irrelevant to the question."}
{"ID": 2226, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "The series (15,9,7,8,20,-1,4) is sorted using the Shell sort method. After one increment, the sequence becomes {15,-1,4,8,20,9,7}. The increment used in this step is ().", "A": "1", "B": "4", "C": "3", "D": "2", "Answer": "B", "Explanation": "Shell sort divides the sequence into several groups, with elements only being swapped within each group. It can be observed that after one pass, 9 and -1 are swapped, and 7 and 4 are swapped, indicating that the increment is 4."}
{"ID": 2227, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "The quicksort algorithm performs least effectively in the case of ().", "A": "The amount of data to be sorted is too large.", "B": "The data to be sorted contains multiple identical values.", "C": "The number of data elements to be sorted is odd.", "D": "The data to be sorted is already largely in order.", "Answer": "D", "Explanation": "When the data to be sorted is nearly ordered, selecting the nth element as the pivot each time will lead to an uneven distribution of partition intervals, which is not conducive to leveraging the advantages of the quicksort algorithm. Conversely, when the data to be sorted is more randomly distributed, the pivot element can divide the sequence into two sequences of roughly equal length, and only then can the advantages of quicksort be fully realized."}
{"ID": 2228, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The size of the storage space occupied by a sequential list is independent of the type of elements.", "Answer": false}
{"ID": 2229, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "A non-circular doubly linked list with only a head pointer is the least suitable type of linked list for implementing a linked queue.", "Answer": true}
{"ID": 2230, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The naive pattern matching algorithm is not suitable for string matching.", "Answer": false}
{"ID": 2231, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Reasoning", "Language": "English", "Question": "Given that a complete binary tree has 8 leaf nodes on the 6th level, the minimum number of nodes in the complete binary tree is 119.", "Answer": false, "Explanation": "The presence of leaf nodes on the 6th level indicates that the height of the complete binary tree could be either 6 or 7, and it is evident that the tree has the fewest nodes when its height is 6. If there are 8 leaf nodes on the 6th level, then the first 5 levels form a full binary tree, hence the minimum number of nodes in the complete binary tree is 2^5-1+8=39 nodes."}
{"ID": 2232, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Reasoning", "Language": "English", "Question": "In the binary tree representation of the forest, node M and node N are the left and right sons of the same parent node, then node M is the left brother of node N.", "Answer": false, "Explanation": "In the binary tree representation of the forest, when the parent nodes of M and N are the root nodes of the binary tree, then the nodes M are the nodes N may be on different trees"}
{"ID": 2233, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The distance from one vertex to another is defined by the number of edges between the two points.", "Answer": true}
{"ID": 2234, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The adjacency matrix of an AOE network is a symmetric matrix.", "Answer": false}
{"ID": 2235, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Reasoning", "Language": "English", "Question": "Using Prim's algorithm and Kruskal's algorithm to construct the minimum spanning tree of a graph, the resulting minimum spanning trees cannot be compared.", "Answer": false, "Explanation": "Since the minimum spanning tree of an undirected connected graph is not necessarily unique, the minimum spanning trees obtained by different algorithms may vary. However, when the minimum spanning tree of an undirected connected graph is unique, the minimum spanning trees generated by different algorithms must be the same."}
{"ID": 2236, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "In a binary search tree containing n nodes, searching for a node with a specific key requires at most log2n comparisons.", "Answer": false}
{"ID": 2237, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Reasoning", "Language": "English", "Question": "A red-black tree is a special type of balanced binary tree.", "Answer": false, "Explanation": "Red-black tree is not a special kind of balanced binary search tree."}
{"ID": 2238, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Assertion", "Tag": "Reasoning", "Language": "English", "Question": "19, 34, 26, 97, 56, 75 form a heap.", "Answer": true, "Explanation": "Each option can be represented as a complete binary tree, and then examine whether the relationship between parent and child nodes fully satisfies the definition of a heap. "}
{"ID": 2239, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Assertion", "Tag": "Reasoning", "Language": "English", "Question": "Simple selection sort does not necessarily select an element to place in its final position after one pass of scanning.", "Answer": false, "Explanation": "We previously learned that insertion sort cannot guarantee that an element will be in its final position after one pass. In fact, merge sort cannot guarantee this either. For example, after one pass of 2-way merge sort (ascending) on the sequence {6,5,7,8,2,1,4,3}, the result is {5,6,7,8,1,2,3,4}, and clearly, none of them are in their final positions."}
{"ID": 2240, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "English", "Question": "In a binary tree, if there are two nodes m and n, and m is an ancestor of n, then the path from m to n can be found using ().", "Answer": "Post-order", "Explanation": "During the post-order traversal return, visiting the root node allows us to output the nodes on the path from n to m in a bottom-up manner. If a non-recursive algorithm is used, when the post-order traversal reaches n, the nodes on the path from the root to n via parent pointers are all remembered in the stack, which can also be used to find the path from m to n."}
{"ID": 2241, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "What is the time complexity of binary search?", "Answer": "O(log2n)"}
{"ID": 2242, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Open-ended", "Tag": "Reasoning", "Language": "English", "Question": "Are the logical structure and the physical structure necessarily different for two distinct data structures?", "Answer": "For two different data structures, it is entirely possible for their logical and physical structures to be the same. For example, binary trees and binary search trees can use the same logical representation and storage method of binary trees. The former is usually used to represent hierarchical relationships, while the latter is commonly used for sorting and searching. Although both have operations such as building a tree, inserting nodes, deleting nodes, and searching for nodes, the definitions of these operations are different for binary trees and binary search trees. Taking node search as an example, the time complexity for a binary tree is O(n), while for a binary search tree, the time complexity is O(log2n)."}
{"ID": 2243, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Open-ended", "Tag": "Knowledge", "Language": "English", "Question": "What are the differences between a heap and a binary search tree (BST)?", "Answer": "Taking the min-heap as an example, the characteristic of a heap is that the key of the parent node is always less than or equal to the key of its child node, with no specific order required between the keys of the two child nodes. In a binary search tree, the key of each parent node is greater than the keys of all nodes in the left subtree and less than the keys of all nodes in the right subtree, meaning there is an ordered relationship between the keys of the left and right children of each parent node. Thus, when performing an in-order traversal on both types of trees, the binary search tree will yield an ordered sequence, while the heap may not necessarily produce an ordered sequence."}
{"ID": 2244, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Open-ended", "Tag": "Reasoning", "Language": "English", "Question": "How many branch nodes and leaf nodes does a full binary tree with n nodes have? What is the height of this full binary tree?", "Answer": "In a full binary tree, n1 = 0, from the properties of the binary tree, we can see that n2 = n0-1, n = n0 + n1 + n2 = 2*n0-1= 2n2+1, then n_0=(n+1)/2. The number of branch nodes n2=n-(n+1)/2=(n-1)/2. The number of nodes of a full binary tree with height h is n=1+2^1 +2^2 +...+2^(h-1) =2^h-1, i.e., height h=log2(n +1)."}
{"ID": 2245, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What is the working mechanism of the main memory?()", "A": "Content-based Access", "B": "Access by the address of the storage unit", "C": "Access through external devices", "D": "Accessing through the network", "Answer": "B"}
{"ID": 2246, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The languages that can be executed directly by a computer and those written with mnemonics are respectively ()\nⅠ. Machine Language Ⅱ. Assembly Language Ⅲ. High-Level Language Ⅳ. Operating System Primitives Ⅴ. Regular Language", "A": "Ⅱ、Ⅲ", "B": "Ⅱ、Ⅳ", "C": "Ⅰ、Ⅱ", "D": "Ⅰ、Ⅳ", "Answer": "C"}
{"ID": 2247, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "Among the following statements, the correct one is ( ). Ⅰ. In the widespread application of microcomputers, computerized accounting belongs to the aspect of scientific computing. Ⅱ. The main technology that determines the computing precision of a computer is the computer's word length. Ⅲ. The definition of the \"operational speed\" indicator of a computer is how many operating system commands it can execute per second.Ⅳ. Utilizing large-scale integrated circuit technology to fabricate the computational and control components of a computer on a single integrated circuit chip, such a chip is called a microcontroller.", "A": "Ⅰ、Ⅲ", "B": "Ⅱ、Ⅳ", "C": "Ⅱ", "D": "Ⅰ、Ⅲ、Ⅳ", "Answer": "C", "Explanation": "Accounting computerization is an application of computer data processing, which is obviously correct. The term \"computing speed\" of a computer refers to how many instructions it can execute per second, which is incorrect. Such an integrated chip is called a CPU, which is incorrect."}
{"ID": 2248, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "In two's complement representation, what is the maximum positive number that can be represented by an 8-bit binary number?()", "A": "127", "B": "128", "C": "255", "D": "256", "Answer": "A"}
{"ID": 2249, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "In floating-point addition and subtraction, what is \"alignment of exponents\"?()", "A": "Adjust the magnitude of the mantissa", "B": "Adjust the indices to make them the same.", "C": "Calculate the sum of mantissas", "D": "Adjust the range of the index", "Answer": "B"}
{"ID": 2250, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The number of different data that can be represented by 8-bit original code is ( ).", "A": "15", "B": "16", "C": "255", "D": "256", "Answer": "C"}
{"ID": 2251, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "If the decimal number is 137.5, then its octal number is ( ).", "A": "89.8", "B": "211.4", "C": "211.5", "D": "1011111.101", "Answer": "B", "Explanation": "To convert a decimal number to an octal number, use the division-remainder method for the integer part: divide the integer by 8, the remainder is the unit digit of the octal number, then divide the quotient by 8, the remainder is the digit for the tens place in the octal number, and repeat this process until the quotient is zero. For the fractional part, use the multiplication-integral part method: multiply the fraction by 8, the integral part of the product is the digit for the fractional part in the octal number, continue until the fraction becomes zero. The resulting octal number is 211.40."}
{"ID": 2252, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "What functions are generally included in an Arithmetic Logic Unit (ALU)?", "A": "Arithmetic Operations", "B": "Logical operations", "C": "Arithmetic operations and logical operations", "D": "Addition operation", "Answer": "C", "Explanation": "The ALU is capable of performing arithmetic and logical operations."}
{"ID": 2253, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "The range and precision of the numbers that can be represented by two floating-point numbers of the same length and format, assuming the former has a larger base and the latter a smaller base, with all other specifications being the same, are ( ).", "A": "Both can represent numbers within the same range and with the same precision.", "B": "The former can represent a larger range of numbers but with lower precision.", "C": "The latter can represent a larger range of numbers with higher precision.", "D": "The former can represent a larger range of numbers with higher precision.", "Answer": "B", "Explanation": "The larger the base, the wider the range, but the precision decreases (numbers become sparser). Note: The larger the base, the less likely it is for the mantissa to shift right during calculations, resulting in less precision loss. Since the number of shifts required for alignment or mantissa overflow to the right and normalization to the left significantly decreases with a larger base, the computation speed can be increased. The larger the base, the greater the range of numbers that can be represented."}
{"ID": 2254, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "The correct statement(s) is (are) ( ). I. Overflow can sometimes occur in computer representations of numbers due to the finite word length of computers II. 8421 code is a binary number III. The complement of a positive number is the same as its original code representation, while the one's complement of a positive number is obtained by inverting each bit of its original code IV. Given two positive normalized floating-point numbers N1=2^MM1 and N2=2^nM2, if m>n, then N1>N2.", "A": "I, II", "B": "II, III", "C": "I, III, IV", "D": "I, IV", "Answer": "D", "Explanation": "I correct, the 8421 code is the encoding of decimal numbers, II incorrect, the original code, inverse code, and complement code of a positive number are all the same, III incorrect because it is a normalized positive floating-point number, so both M1 and M2 are in the form of 0.1xx with the exponent N1 being at least 1 greater than N2, hence N1>N2, IV correct."}
{"ID": 2255, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "Assuming the base of the floating-point number is 4 and the mantissa is represented in true form, then the following ( ) is a normalized number.", "A": "1.001101", "B": "0.001101", "C": "1.011011", "D": "0.00001", "Answer": "A", "Explanation": "The normalized fraction represented in true form has two digits after the decimal point (with a base of 4, using two digits to represent a non-zero fraction)."}
{"ID": 2256, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What is the main advantage of a paged virtual memory system in a virtual memory environment?()", "A": "The page length is fixed, the page table is simple, and the paging-in process is convenient.", "B": "The segmentation corresponds to the natural boundaries of the program.", "C": "Implement sharing and protection by segments.", "D": "No table lookup is required during the address translation process.", "Answer": "A"}
{"ID": 2257, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "In a segmented paging virtual memory system, which component is not included in the virtual address?()", "A": "Section Number", "B": "Page number", "C": "intra-page address", "D": "Physical Address", "Answer": "D"}
{"ID": 2258, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The memory access cycle refers to ( ).", "A": "Memory readout time", "B": "Memory write time", "C": "The shortest time interval allowed for continuous read or write operations in memory.", "D": "The average time required for a memory to perform a read or write operation.", "Answer": "C"}
{"ID": 2259, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The storage system of a computer refers to ( ).", "A": "RAM", "B": "Read-Only Memory", "C": "Main Memory", "D": "Cache, main memory, and external storage", "Answer": "D"}
{"ID": 2260, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Among the following statements, the correct one is ( ).", "A": "Semiconductor RAM is readable and writable, and retains memory even after power loss.", "B": "DRAM is volatile RAM, whereas the information stored in SRAM is non-volatile.", "C": "Semiconductor RAM is volatile RAM, but as long as the power supply is not interrupted, the stored information is not lost.", "D": "Semiconductor RAM is non-volatile RAM.", "Answer": "C"}
{"ID": 2261, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Which of the following statements about Solid State Drives (SSD) is incorrect ( )?", "A": "Flash-based storage technology", "B": "The random read/write performance is significantly higher than that of a disk.", "C": "Random writes are relatively slow.", "D": "Resistant to wear", "Answer": "D"}
{"ID": 2262, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "A quad-bank interleaved memory with each module having a capacity of 64Kx32 bits, access cycle of 200ns, and bus cycle of 50ns, the following statement is ( ) correct.", "A": "Within 200ns, the memory can provide the CPU with 256-bit binary information.", "B": "Within 200ns, the memory can provide the CPU with 128-bit binary information.", "C": "Within 50ns, each module can provide the CPU with 32-bit binary information.", "D": "None of the above is correct.", "Answer": "B", "Explanation": "The low-order interleaved memory can access 4 modules consecutively in one access cycle, with each module having a capacity of 64Kx32 bits, providing a total of 128 bits of binary information."}
{"ID": 2263, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "Regarding the update strategy for Cache, the correct statement is ( ).", "A": "During read operations, write-through and write-back policies are applied upon a hit.", "B": "During write operations, write-back and write-allocate policies are applied on a hit.", "C": "During read operations, write-through and write-allocate policies are applied upon failure.", "D": "During write operations, write allocation and no-write allocation should be applied in the event of a miss.", "Answer": "D", "Explanation": "A block is loaded into the cache on a write miss; therefore, write allocate and no-write allocate policies are applied on a miss."}
{"ID": 2264, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "In a memory hierarchy with a main memory-Cache level, the main memory capacity is 1MB, the Cache capacity is 16KB, each block contains 8 words, each word is 32 bits, and the direct mapping method is used. The starting block of the Cache is block 0. If the main memory address is 35301H and the CPU access to the Cache is a hit, then it is in the ( ) block of the Cache.", "A": "152", "B": "153", "C": "154", "D": "151", "Answer": "A", "Explanation": "In direct-mapped cache, the starting block of the cache is 0, thus the 0th block of the cache corresponds to the 152nd block of the main memory."}
{"ID": 2265, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What is the main disadvantage of direct addressing?()", "A": "Instruction execution time is long.", "B": "The operand address is not easily modified.", "C": "Multiple accesses to the main memory are required.", "D": "The range of the operand is limited.", "Answer": "B"}
{"ID": 2266, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Zero-address instructions are typically used in which type of computer?()", "A": "Supercomputer", "B": "General-purpose computer", "C": "Stack Computer", "D": "Personal Computer", "Answer": "C"}
{"ID": 2267, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "Assuming P is the calling procedure, and O is the called procedure, the program is executed on a 32-bit x86 processor, the following are the operations involved in a procedure call in a C language program: 1. Procedure O saves the context of P and allocates space for non-static local variables 2. Procedure P places the actual arguments where O can access them 3. Procedure P stores the return address in a specific location and jumps to O for execution 4. Procedure O retrieves the return address and jumps back to continue execution in procedure P 5. Procedure O restores the context of P and releases the space occupied by local variables 6. The function body of procedure O is executed The correct sequence of steps for a procedure call is ( ).", "A": "2-3-4-1-5-6", "B": "2-3-1-4-6-5", "C": "2-3-1-6-5-4", "D": "2-3-1-5-6-4", "Answer": "C", "Explanation": "The specific process of procedure call is as follows: Procedure P stores the actual parameters in a location accessible to O; Procedure P stores the return address in a specific location and then jumps to execute O; Procedure O saves the context of P and allocates space for non-static local variables; Procedure O executes the function body; Procedure O restores the context of P and releases the space occupied by the local variables; Procedure O retrieves the return address and jumps back to execute Procedure P."}
{"ID": 2268, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Which of the following is not a method of forming the address of a microinstruction?()", "A": "Directly indicated by the subaddress field of the microinstruction.", "B": "According to the operation code of the machine instruction", "C": "According to the value of the program counter", "D": "Randomly generate the address of the microinstruction", "Answer": "D"}
{"ID": 2269, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "In pipeline technology, what does \"data dependency\" primarily refer to?()", "A": "Due to incorrect instruction sequencing, dependencies arise.", "B": "Due to improper resource allocation resulting in correlation", "C": "Conflicts arising between instructions due to data dependencies.", "D": "Due to instruction execution errors leading to related", "Answer": "C"}
{"ID": 2270, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What is the main function of the controller in the CPU?()", "A": "Instructions for storing a program", "B": "Control Data Transmission", "C": "Store program state information", "D": "Fetch an instruction from the main memory and indicate the location of the next instruction.()", "Answer": "D"}
{"ID": 2271, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The complete function of the controller is ( ).", "A": "Generation of time-series signals", "B": "Fetch the instruction from the main memory and complete the decoding of the instruction operation code.", "C": "Fetch instructions from main memory, analyze the instructions, and generate the relevant operation control signals.", "D": "None of them are correct.", "Answer": "C"}
{"ID": 2272, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The instruction cycle consists of one to several machine cycles, with the first machine cycle being ( ).", "A": "Fetch the instruction word from the main memory.", "B": "Fetch the instruction opcode from the main memory.", "C": "Fetch the instruction address code from the main memory.", "D": "Fetch the address of the instruction from the main memory.", "Answer": "A"}
{"ID": 2273, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "The following statement is incorrect ( )", "A": "The fetch instruction operation is an inherent function of the controller and does not need to be completed under the control of the opcode.", "B": "The instruction fetch operation is the same for all instructions.", "C": "Under the condition of equal instruction length, the fetch operation for all instructions is identical.", "D": "The interrupt cycle refers to the cycle that occurs after the current instruction execution is completed.", "Answer": "B", "Explanation": "Instructions of different lengths may have different fetch operations. For example, the fetch operations for double-word instructions, triple-word instructions, and single-word instructions are different."}
{"ID": 2274, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "In bus arbitration, which method is used to gather all bus requests and make a decision using a specific arbitration algorithm?()", "A": "Arbitration Method", "B": "Chained query method", "C": "Only Query Method", "D": "Independent Request Method", "Answer": "B"}
{"ID": 2275, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Which bus standard was the earliest microcomputer system bus standard to appear, and was used in IBM's AT machines?()", "A": "EISA bus", "B": "VESA bus", "C": "PCI bus", "D": "ISA bus", "Answer": "D"}
{"ID": 2276, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "In the four stages of bus operation, during which stage is the relevant information of the master module removed from the system bus, relinquishing the right to use the bus?()", "A": "Addressing stage", "B": "Transmission Stage", "C": "End Phase", "D": "Application for Allocation Phase", "Answer": "C"}
{"ID": 2277, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Which of the following does not belong to the local bus of a computer? ( )", "A": "VESA", "B": "PCI", "C": "AGP", "D": "ISA", "Answer": "D"}
{"ID": 2278, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Among the following items, () are characteristics of synchronous transmission.", "A": "Require a response signal", "B": "The access times of the various components are relatively close.", "C": "The bus length is relatively long.", "D": "The length of the bus cycle is variable.", "Answer": "B"}
{"ID": 2279, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "In a 16-bit bus system, if the clock frequency is 100MHz and it takes 5 clock cycles to transfer a word, then the bus bandwidth is ( ).", "A": "4MB/s", "B": "40MB/s", "C": "16MB/s", "D": "64MB/s", "Answer": "B", "Explanation": "The calculated total bus bandwidth is 40MB/s."}
{"ID": 2280, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "In the case of multiple interrupts, what happens when the CPU is processing an interrupt request and a higher priority interrupt request arrives?()", "A": "The CPU will ignore interrupt requests with higher priority.", "B": "The CPU will temporarily suspend the current interrupt request to handle an interrupt with a higher priority.", "C": "Higher priority interrupt requests will be discarded.", "D": "The CPU will queue higher-priority interrupt requests for processing.", "Answer": "B"}
{"ID": 2281, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "In microcomputer systems, I/O devices are connected to the motherboard's system bus through ( ).", "A": "DMA Controller", "B": "Device Controller", "C": "Interrupt Controller", "D": "I/O port", "Answer": "B"}
{"ID": 2282, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "When using unified addressing for I/O, the instruction for performing input/output operations is ( ).", "A": "Control Command", "B": "Memory Access Instruction", "C": "Input/Output Instructions", "D": "None of them are correct.", "Answer": "B"}
{"ID": 2283, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The bus components that can generate DMA requests are ( ). Ⅰ. High-speed peripherals Ⅱ. Peripherals that need to exchange bulk data with the host Ⅲ. Devices with DMA interface.", "A": "Only Ⅰ", "B": "Only Ⅲ", "C": "Ⅰ，Ⅲ", "D": "Ⅱ，Ⅲ", "Answer": "B"}
{"ID": 2284, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "When an interrupt request is issued by an interrupt source, the CPU can execute the corresponding interrupt service routine. Possible sources of interrupts include ( ). I. External events II. Cache III. Virtual memory failure IV. Floating-point arithmetic underflow V. Floating-point arithmetic overflow.", "A": "I, III, and IV", "B": "I and V", "C": "I, II, and V", "D": "I, III, and V", "Answer": "D", "Explanation": "External events such as pressing the Esc key to exit a running program are considered external interrupts, I is correct. Cache is entirely implemented by hardware and does not involve the interrupt level, I1 is incorrect. Virtual memory faults such as page faults will issue a page fault interrupt, which is an internal interrupt, III is correct. Floating-point underflow is treated directly as machine zero without causing an interrupt, IV is incorrect. Floating-point overflow indicates that the value exceeds the representable range of floating-point numbers and is an internal interrupt, V is correct. Therefore, the answer is D."}
{"ID": 2285, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "In DMA mode, the path that data takes from memory to the peripheral is ( ).", "A": "Memory → Data Bus → Data Path → Peripheral", "B": "Memory → Data Bus → DMAC → Peripheral", "C": "Memory → Data Path → Data Bus → Peripheral", "D": "Memory → CPU → Peripherals", "Answer": "B", "Explanation": "In DMA mode, the path that data takes from memory to the peripheral is memory - data bus - DMAC - peripheral."}
{"ID": 2286, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The fundamental characteristic of a von Neumann machine is multiple instruction streams, single data stream.", "Answer": false}
{"ID": 2287, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "A binary true form decimal with a word length of 4 bits can represent a range from -8 to +7.", "Answer": false}
{"ID": 2288, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "In Cyclic Redundancy Check (CRC), when the checksum is 4 bits, the degree of the generating polynomial used for division is 4.", "Answer": true}
{"ID": 2289, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Reasoning", "Language": "English", "Question": "Regarding modulo-4 complement, each modulo-4 complement requires only one sign bit for storage.", "Answer": true, "Explanation": "Modulo-4 complement has all the advantages of modulo-2 complement and is easier to check for overflow in addition and subtraction operations. It should be noted that storing modulo-4 complement requires only one sign bit, as for any correct value, the two sign bits of the modulo-4 complement are always the same."}
{"ID": 2290, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The characteristics of multi-bank parallel memory include that each module has an independent read/write control circuit.", "Answer": false}
{"ID": 2291, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The primary use of base addressing mode is to handle array issues.", "Answer": false}
{"ID": 2292, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "During the execution of instructions by the CPU, the address of the instruction is provided by the Program Counter (PC).", "Answer": true}
{"ID": 2293, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Reasoning", "Language": "English", "Question": "In the stack addressing mode, the action for a push operation is (A)→M_{SP},(SP)-1→SP; therefore, the action for a pop operation should be (SP)+1→SP,(M_{SP})→A.", "Answer": true, "Explanation": "The order of operations on the stack pointer during push and pop is different; when pushing onto the stack, data (A) is pushed first → Msp, and then the pointer is modified."}
{"ID": 2294, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "In superscalar pipeline technology, four independent instructions can be executed concurrently within each clock cycle.", "Answer": false}
{"ID": 2295, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The function of the CPU's read/write control signal is to control the direction of information flowing into and out of the memory.", "Answer": false}
{"ID": 2296, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Reasoning", "Language": "English", "Question": "Pipelined CPU is a very economical and practical time parallelism technique.", "Answer": true, "Explanation": "Pipelined CPUs utilize temporal parallelism, not spatial parallelism, hence option A is incorrect. RISC machines typically employ pipeline technology, but it is not mandatory, thus option B is incorrect. There is no necessary connection between pipelined CPUs and multimedia CPUs, so option C is incorrect. Pipelined CPU is an economical and practical form of temporal parallelism, therefore option D is correct."}
{"ID": 2297, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The number of cylinders in a hard disk represents how many sectors there are on each track of the disk.()", "Answer": false}
{"ID": 2298, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "In the CPU, the register that tracks the address of the next instruction to be executed is ( ).", "Answer": "PC"}
{"ID": 2299, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "English", "Question": "Address bus A (high order) to As (low order), to compose a 16KB memory using 4Kx4 bit memory chips, the input address lines for the decoder generating the chip select signal should be ( ).", "Answer": "A2A3", "Explanation": "The storage chip of 4Kx4 bits has a total of 16 chips, each with 16 cells, thus requiring the two high address lines A2A3 to generate the chip select signal."}
{"ID": 2300, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "To shorten the number of bits representing a certain address segment in the instruction, an effective method is to adopt ()", "Answer": "Register addressing"}
{"ID": 2301, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "According to the classification method proposed by Flynn, multiprocessors belong to ( ).", "Answer": "MIMD"}
{"ID": 2302, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "Which bus standard is widely used as an interface standard in laptops and supports plug and play?()", "Answer": "PCMCIA"}
{"ID": 2303, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "In the I/O interface, which part is used to implement communication and control between the host and peripherals?()", "Answer": "Control port"}
{"ID": 2304, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Open-ended", "Tag": "Knowledge", "Language": "English", "Question": "Instructions and data are both stored in memory; how does the CPU distinguish between them?", "Answer": "The completion of an instruction can typically be divided into the fetch phase and the execution phase. During the fetch phase, the instruction is retrieved by accessing the memory; during the execution phase, the operand is retrieved by accessing the memory. Therefore, although both instructions and data are stored in the memory in binary code form, the CPU can determine whether the binary code retrieved from the memory is an instruction or data based on the different stages of the instruction cycle."}
{"ID": 2305, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Open-ended", "Tag": "Reasoning", "Language": "English", "Question": "Assuming a machine has 80 instructions, with an average of 4 microinstructions per instruction, and one fetch microinstruction is shared by all instructions. Given that the microinstruction length is 32 bits, please estimate the Control Memory (CM) capacity.", "Answer": "The total number of microinstructions = (4-1)×80 +1 = 241, with each microinstruction occupying one control memory unit. The capacity of the control memory CM is a power of 2, and since 241 is just less than 256, the capacity of CM = 256×32 bits = 1KB."}
{"ID": 2306, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Which layer does the DNS protocol belong to?", "A": "Data Link Layer", "B": "Network Layer", "C": "Transport Layer", "D": "Application Layer", "Answer": "D"}
{"ID": 2307, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "In the flag field of the IP datagram, what do DF and MF stand for, respectively?", "A": "DF: Don't Fragmentation, MF: Not the Final Fragment", "B": "DF: Don't Fragment, MF: More Fragments", "C": "DF: Not the last fragment, MF: More fragments allowed", "D": "DF: Don't Fragment, MF: More Fragments", "Answer": "A"}
{"ID": 2308, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Computer networks can be divided into communication subnets and resource subnets. The following belong to the communication subnet: ( )I. Bridge II. Switch III. Computer software IV. Router", "A": "I, II, IV", "B": "II, III, IV", "C": "I, III, IV", "D": "I, II, III", "Answer": "A"}
{"ID": 2309, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The interface between adjacent layers is called a Service Access Point, and the Service Access Point for the application layer is also referred to as ( ).", "A": "User Interface", "B": "Network Interface Card (NIC)", "C": "IP address", "D": "MAC address", "Answer": "A"}
{"ID": 2310, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "In computer networks, what do functional characteristics describe? ()", "A": "Electrical Characteristics", "B": "Mechanical properties", "C": "The significance of a specific voltage level", "D": "Process and Timing", "Answer": "C"}
{"ID": 2311, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What is the main difference between a hub and a switch? ()", "A": "Half-duplex communication", "B": "Capable of directional signal transmission", "C": "Can network segments with different physical layers be interconnected?", "D": "Forwarding rate", "Answer": "C"}
{"ID": 2312, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What does store-and-forward refer to in packet switching?  ()", "A": "First store the entire message, then send it.", "B": "Store-and-Forward", "C": "First send the header, then send the data.", "D": "Do not store, directly send.", "Answer": "B"}
{"ID": 2313, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "To digitally quantify voice using PCM, if the sound is divided into 128 quantization levels and the sampling frequency is 8000 samples per second, then the data transmission rate required for one channel of voice is ( ).", "A": "56kb/s", "B": "64kb/s", "C": "128kb/s", "D": "1024kb/s", "Answer": "A", "Explanation": "An audio signal requires 128 quantization levels, which means each sample needs log₂ 128 = 7 bits to represent. With a sampling rate of 8000 samples per second, a single voice channel requires a data transmission rate of 8000 × 7 = 56kb/s."}
{"ID": 2314, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "Among the following statements about virtual circuits, ( ) is correct.", "A": "Virtual circuits and circuit switching have no substantial difference.", "B": "Only one virtual circuit can be established between two communication sites.", "C": "Virtual circuits involve three stages: connection establishment, data transfer, and connection termination.", "D": "Data packets from the same session transmitted over a virtual circuit can take different paths.", "Answer": "C", "Explanation": "Virtual circuits and circuit switching differ significantly in mechanism and implementation. Circuit switching reserves a dedicated communication path for the entire session, whereas a virtual circuit simulates a logical communication path within a packet-switched network, thus statement A is incorrect. In a packet-switched network, multiple virtual circuits can be established between two sites, thus statement B is incorrect. In a virtual circuit, all packets follow the same path, ensuring order and reliability, thus statement D is incorrect."}
{"ID": 2315, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "In the sliding window mechanism, what type of acknowledgment is used by GBN (Go-Back-N ARQ protocol)?  ()", "A": "Cumulative confirmed", "B": "Confirm one by one", "C": "Random Confirmation", "D": "Select to confirm", "Answer": "A"}
{"ID": 2316, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What is the length of a MAC address in bits? ()", "A": "32-bit", "B": "48-bit", "C": "64-bit", "D": "128-bit", "Answer": "B"}
{"ID": 2317, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "In the definition of the CSMA/CD protocol, \"contention period\" refers to ( ).", "A": "The round-trip time for a signal to travel between the two farthest endpoints.", "B": "The time it takes for a signal to transmit from one end of a line to the other.", "C": "The time from the start of transmission to the receipt of the response.", "D": "Time from sending completion to receiving acknowledgment", "Answer": "A"}
{"ID": 2318, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "To achieve transparent transmission (note: asynchronous lines by default), the padding method used by PPP is ( ).", "A": "Bit padding", "B": "Character Padding", "C": "Use character padding for character data, and bit padding for non-character data.", "D": "Use bit padding for character data, and use character padding for non-character data.", "Answer": "B"}
{"ID": 2319, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Among the following statements about PPP, the incorrect one is ( )", "A": "With error control capability", "B": "Supports IP protocol only", "C": "Supports dynamic address allocation", "D": "Support for Authentication", "Answer": "B"}
{"ID": 2320, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "Among the following statements about error control at the data link layer, the incorrect one is ( )", "A": "The data link layer can only provide error detection, not correction of errors.", "B": "Parity codes can only detect errors but cannot correct them, and they are also unable to detect double-bit errors.", "C": "The CRC checksum can detect all single-bit errors.", "D": "Hamming code can correct a single-bit error.", "Answer": "A", "Explanation": "The link layer error control has two basic strategies: error detection coding and error correction coding. A common error correction code is the Hamming code, which can correct single-bit errors."}
{"ID": 2321, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "The ASCII encoding of character S from low to high is 1100101, using odd parity. Errors in the following received transmissions cannot be detected ( ).", "A": "11000011", "B": "11001010", "C": "11001100", "D": "11010011", "Answer": "D", "Explanation": "Since odd parity is used, if the number of 1s in the transmitted data is even, an error can be detected. If the number of 1s is odd, the error cannot be detected. Therefore, choose D."}
{"ID": 2322, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "According to the working principle of the CSMA/CD protocol, what needs to be increased is the minimum frame length ( ).", "A": "With a constant network transmission rate, the maximum distance of the collision domain is reduced.", "B": "The maximum distance of the collision domain remains unchanged, while the network transmission rate increases.", "C": "The probability of upper-layer protocols using TCP increases.", "D": "Reduce the number of repeaters in the line while keeping the collision domain unchanged.", "Answer": "B", "Explanation": "According to the working principle of the CSMA/CD protocol, increasing the network transmission rate will shorten the duration of the signal within the collision domain. Therefore, it is necessary to increase the minimum frame length to ensure that the collision signal can be detected by a sufficient number of stations."}
{"ID": 2323, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "In an Ethernet network, there are four hosts: A, B, C, and D. If A sends data to B, then ( )", "A": "Only B can receive the data.", "B": "All four hosts can receive data.", "C": "Only B, C, and D can receive the data.", "D": "All four hosts are unable to receive data.", "Answer": "B", "Explanation": "In Ethernet, if a node wants to send data, it will broadcast the data through the bus, which serves as a common transmission medium, and all nodes connected to the bus (including the sending node) can \"listen\" to the data signal sent by the sending node."}
{"ID": 2324, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "How many bits does the version field of the IP protocol occupy? ()", "A": "2", "B": "4", "C": "8", "D": "16", "Answer": "B"}
{"ID": 2325, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What changes occur to the IP datagram from the internal network when it goes out in the NAT mechanism? ()", "A": "Source IP address replaced with public IP address.", "B": "Destination IP address replaced with public IP address.", "C": "The source MAC address is replaced with a public MAC address.", "D": "Replace the destination MAC address with a public MAC address.", "Answer": "A"}
{"ID": 2326, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The address length of the next-generation Internet core protocol IPv6 is ( ).", "A": "32-bit", "B": "48-bit", "C": "64-bit", "D": "128-bit", "Answer": "D"}
{"ID": 2327, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The network reachability information exchanged by BGP is ( ).", "A": "The path taken to reach a certain network.", "B": "Next-hop router to a certain network", "C": "Summary of the link state information for a particular network.", "D": "Shortest distance to a certain network and the next-hop router.", "Answer": "A"}
{"ID": 2328, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "Given 4 routes 172.18.129.0/24, 172.18.130.0/24, 172.18.132.0/24, and 172.18.133.0/24, if route aggregation is performed, the address that can cover these 4 routes is ( ).", "A": "172.18.128.0/21", "B": "172.18.128.0/22", "C": "172.18.130.0/22", "D": "172.18.132.0/23", "Answer": "A", "Explanation": "The principle of route aggregation is that the number of 1s in the aggregated network mask should be equal to the number of 1s in the longest mask of the first four routes plus one more bit, and the third octet of the aggregated network should be the third octet of the longest mask among the first four routes. Therefore, the answer is 172.18.128.0/21."}
{"ID": 2329, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "Which of the following representations of the IP6 address 1A22:120D:0000:0000:72A2:0000:0000:00C0 is incorrect ( )", "A": "1A22:120D::72A2:0000:0000:00C0", "B": "1A22:120D::72A2:0:0:C0", "C": "1A22::120D::72A2::00C0", "D": "1A22:120D:0:0:72A2::C0", "Answer": "C", "Explanation": "When using zero compression, the double colon \"::\" can only appear once in an address. That is to say, when there are multiple non-adjacent zeros, only one double colon \"::\" can be used to represent these zeros."}
{"ID": 2330, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "One requirement for routing selection protocols is that they must be able to converge quickly. The so-called \"routing convergence\" refers to ( ).", "A": "Routers can send packets to a predetermined destination.", "B": "The router processes packets at a sufficiently high speed.", "C": "The routing table of network devices should be consistent with the network topology.", "D": "Able to aggregate multiple subnets into a supernet.", "Answer": "C", "Explanation": "Routing convergence refers to the consistency of the routing tables of network devices with the network topology, that is, after changes occur in the routing environment, each router adjusts its routing table to adapt to the changes in the network topology, achieving a stable state."}
{"ID": 2331, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "The routing selection processes for RIP, OSPF protocol, and BGP respectively use ()", "A": "Distance Vector Protocol, Link State Protocol, Path Vector Protocol", "B": "Distance Vector Protocol, Path Vector Protocol, Link State Protocol", "C": "Distance Vector Protocol, Link State Protocol, Path Vector Protocol", "D": "Distance Vector Protocol, Link State Protocol, Path Vector Protocol", "Answer": "D", "Explanation": "RIP is a distributed distance-vector routing protocol that uses hop count as a metric for distance. The OSPF protocol employs a distributed link-state protocol, frequently exchanging link-state information with other routers to establish a topological map of the entire network, and then uses the Dijkstra algorithm to calculate the optimal path to each destination network. Since BGP only seeks to find a route that can reach the destination network and is relatively good (without looping), rather than the best route, it uses a path vector routing protocol. In BGP, each autonomous system selects a BGP speaker, and these speakers exchange their path vectors (i.e., network reachability information) with each other to find better routes to each autonomous system."}
{"ID": 2332, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "To interconnect a local area network with another distant local area network, it is necessary to use ()", "A": "Physical communication media and hubs", "B": "Inter-network connectors and hubs", "C": "Routers and Wide Area Network (WAN) Technologies", "D": "Wide Area Network Technology", "Answer": "C", "Explanation": "The interconnection of local area networks requires a router as the connecting device, and since it involves remote local area networks, wide area network technology must be utilized."}
{"ID": 2333, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What is the function of the sequence number in the TCP protocol? ()", "A": "Ensure data integrity", "B": "Ensure the orderly transmission of data", "C": "Ensure the security of data", "D": "Ensure reliable data transmission", "Answer": "B"}
{"ID": 2334, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "One of the advantages of the UDP protocol is? ()", "A": "Reliable Transmission", "B": "Ordered Transmission", "C": "Low latency", "D": "Large bandwidth", "Answer": "C"}
{"ID": 2335, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "What does multiplexing at the transport layer refer to? ()", "A": "Multiple applications use the same transport layer protocol.", "B": "An application uses multiple transport layer protocols.", "C": "Multiple transport layer protocols use the same application.", "D": "A transport layer protocol uses multiple applications.", "Answer": "A"}
{"ID": 2336, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "In the TCP protocol, the sender's window size depends on ()", "A": "Only the receiver's permitted window", "B": "The receiver's allowed window and the sender's allowed window", "C": "Receiver's allowed window and congestion window", "D": "Sender's allowed window and congestion window", "Answer": "C", "Explanation": "TCP ensures that each sender transmits only the right amount of data, maintaining network resource utilization without overloading. To prevent network congestion and receiver buffer overflow, the maximum data flow that a TCP sender can transmit at any given moment is the minimum of the receiver's advertised window and the congestion window."}
{"ID": 2337, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "The impact on the host when the value of the sliding window in TCP is set too large is ( ).", "A": "Due to the excessive amount of data being transmitted causing congestion in the router, the host may lose packets.", "B": "Excessive generation of ACKs", "C": "Due to the large amount of data received, the host's processing speed is accelerated.", "D": "Due to the large amount of data received, the host's processing speed has slowed down.", "Answer": "A", "Explanation": "TCP uses a sliding window mechanism for flow control, and the size of the window is crucial. If the sliding window value is set too small, it will generate too many ACKs (since a larger window can accumulate acknowledgments, resulting in fewer ACKs). If set too large, it can cause routers to become congested due to excessive data transmission, leading to potential packet loss by the host."}
{"ID": 2338, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "How many times of waving are completed during the release phase of a TCP connection? ()", "A": "A single wave", "B": "Two-way handshake", "C": "Three-way handshake", "D": "Four-way handshake", "Answer": "D"}
{"ID": 2339, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Every page on the World Wide Web has a unique address, collectively known as ( ).", "A": "IP address", "B": "Domain address", "C": "Uniform Resource Locator (URL)", "D": "WWW address", "Answer": "C"}
{"ID": 2340, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "The service program operates in a Windows environment and allows the computer running the server program to also act as a client accessing services provided on other computers. Therefore, this type of network application model belongs to ( ).", "A": "Master-Slave", "B": "For the equation", "C": "Client/Server model", "D": "centralized", "Answer": "B", "Explanation": "In the P2P model, each user's computer shares resources, thereby offering much more resources than a single user can provide. Here, there is no fixed client and server division among the computers, and any pair of computers is referred to as peers."}
{"ID": 2341, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The Data Link Layer in the OSI reference model does not have congestion control capabilities.", "Answer": true}
{"ID": 2342, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "Baud rate is equal to the number of bytes transmitted per second.", "Answer": false}
{"ID": 2343, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The path value of MTU is determined by the frame length of the data link layer.", "Answer": true}
{"ID": 2344, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "Frame CRC checking is used to detect errors in a frame.", "Answer": true}
{"ID": 2345, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The OSPF protocol supports broadcast routing.", "Answer": false}
{"ID": 2346, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The length of the IPv4 packet header is variable.", "Answer": true}
{"ID": 2347, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "IP stipulates that each Class C network can have a maximum of 254 hosts or routers.", "Answer": true}
{"ID": 2348, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The routing selection part of the router  only includes a routing selection processor.", "Answer": false}
{"ID": 2349, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The length field in the UDP datagram does not record the length of the data.", "Answer": false}
{"ID": 2350, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "English", "Question": "In the TCP protocol, the sender's window size depends on the sender's advertised window and the congestion window.", "Answer": false, "Explanation": "TCP ensures that each sender transmits only the correct amount of data, maintaining network resource utilization without overloading. To avoid network congestion and receiver buffer overflow, the maximum data flow that a TCP sender can transmit at any given moment is the minimum of the receiver's advertised window and the congestion window."}
{"ID": 2351, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The first step of the three-way handshake is initiated simultaneously by both parties.", "Answer": false}
{"ID": 2352, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The difference between congestion control and flow control is that congestion control considers point-to-point communication traffic.", "Answer": false}
{"ID": 2353, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The problem that DNS resolves is the issue of memorizing IP addresses.", "Answer": true}
{"ID": 2354, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "In the HTTP request methods, GET is used to request information for a specified page.", "Answer": true}
{"ID": 2355, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "Repeaters must ensure that both segments of the network use the same what?  ()", "Answer": "Physical Layer"}
{"ID": 2356, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "English", "Question": "For a low-pass channel with a bandwidth of 4000Hz that uses 16 different physical states to represent data, according to the Nyquist theorem, the maximum data transmission rate of the channel is ( ).", "Answer": "32kb/s", "Explanation": "According to the Nyquist theorem, in this problem W = 4000Hz, the maximum symbol rate = 2W = 8000 Baud, 16 different physical states can represent 16 = 4 bits of data, thus the maximum channel capacity is 8000 × 4 = 32kb/s."}
{"ID": 2357, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "In the data link layer, how is broadcasting achieved? ()", "Answer": "MAC address"}
{"ID": 2358, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "English", "Question": "The data link layer adopts the Go-Back-N (GBN) protocol. If the size of the sending window is 32, then at least () bits of sequence number are required to ensure the protocol operates without errors.", "Answer": "6", "Explanation": "In the Go-Back-N protocol, the number of sequence numbers must be no less than MAX SEQ + 1. Given that the size of the sending window is 32, the minimum number of sequence numbers should be 33. Therefore, at least 6 bits are required for the sequence numbers to meet this requirement."}
{"ID": 2359, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "Before a router can start transmitting the first bit of a packet to the output link, it must first receive the entire packet; this mechanism is known as ().", "Answer": "Store-and-forward mechanism"}
{"ID": 2360, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "In TCP, what mechanism is used to prevent network congestion caused by the sender transmitting too fast? ()", "Answer": "Flow Control"}
{"ID": 2361, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "The protocol that cannot be used for users to receive emails from a mail server is ( ).", "Answer": "SMTP"}
{"ID": 2362, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Open-ended", "Tag": "Reasoning", "Language": "English", "Question": "Under the following circumstances, calculate the total time required to transmit a 100KB file, that is, the time from the start of the transmission until the last bit of the file reaches its destination. Assuming the round-trip time (RTT) is 100ms, a packet is 1KB (i.e., 1024B) of data, and the initial handshake process before starting to transmit the entire file data takes 2RTTs. 1) The bandwidth is 1.5Mb/s, and data packets can be sent continuously. 2) The bandwidth is 1.5Mb/s, but after sending each data packet, one must wait for an RTT (waiting for confirmation from the receiver) before sending the next data packet. 3) Assuming the bandwidth is an infinitely large value, meaning we consider the sending time to be 0, and after waiting for each RTT, up to 20 packets can be sent.", "Answer": "Hint: As mentioned before, if the problem does not specify to consider queuing delay, then processing delay should also not be considered. 1) From the hint, we know that the total delay = transmission delay + propagation delay + handshake delay, where the handshake delay is added by the problem. Two initial RTTs (handshake): 100x2=200ms, propagation time: RTT/2 = 100/2=50ms, 1KB=8bitx1024=8192bit, transmission time: 1000KB/(1.5Mb/s)=8192000bit/(1500000b/s)=5.46s, so the total time equals 0.2+5.46+0.05=5.71s. 2) Based on the answer to the previous sub-question, add another 999 RTTs, the total time is 5.71+999x0.1=105.61s. Note: The transmission time in 1) is the sum of the transmission times of all packets. 3) Since the transmission delay is 0, only the propagation delay needs to be calculated. Since each packet is 1KB, a file of 1000KB should be divided into 1000KB/1KB=1000 packets. Since 20 packets can be sent after each RTT, a total of 1000/20=50 times are needed, 50-1=49 RTTs, and the last packet only needs 0.5RTT to reach the destination (note that the RTT of this wait definitely includes the transmission delay of the previous transmission, so do not think that an additional transmission delay needs to be calculated), the total time is 2xRTT (handshake time) + 49RTT + 0.5RTT = 51.5RTT = 0.1x51.5 = 5.15s."}
{"ID": 2363, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Knowledge", "Language": "English", "Question": "Ethernet uses the CSMA/CD protocol to access the shared communication channel in a contention-based manner. How does it compare to traditional Time Division Multiplexing (TDM) in terms of advantages and disadvantages?", "Answer": "CSMA/CD is a dynamic medium access control method that allows for random access to a shared channel, while TDM is a static channel division method. Therefore, in terms of channel utilization, CSMA/CD allows users to share the channel, which is more flexible and results in higher channel utilization. TDM is different; it allocates channels to users in fixed time slots, and if a user has no data to transmit, the channel is wasted during that user's time slot. Because CSMA/CD involves channel sharing, collisions can occur when multiple users need to use the channel simultaneously, thus reducing channel utilization; whereas in TDM, users do not conflict with others during their allocated time slots. For local area networks, the users connected to the channel are usually in close proximity, so the channel bandwidth is typically large. When using TDM, there are more instances where users do not send data during their time slots, which is not conducive to the full utilization of the channel. For computer communications, bursty data transmission is less suited to the TDM method."}
{"ID": 2364, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "English", "Question": "On a certain satellite channel, the sender transmits a frame of 512B from one direction, and the data transmission rate of the sender is 64kb/s, while the receiver returns a very short acknowledgment frame at the other end. Assuming the one-way propagation delay of the satellite channel is 270ms, what are the channel throughputs for send window sizes of 1, 7, 17, and 117, respectively?", "Answer": " The length of a data frame is 512B, which is 512x8bit=4.096kbit. The transmission delay of a data frame is 4.096/64=0.064s. Therefore, a transmission cycle time is 0.064+2x0.27=0.604s. Hence, when the window size is 1, the channel's throughput is 1x4.096/0.604=6.8kb/s; when the window size is 7, the channel's throughput is 7x4.096/0.604=47.5kb/s. Since a transmission cycle is 0.604s and the transmission delay for a frame is 0.064s, when the transmission window size is greater than 0.604/0.064, which is greater than or equal to 10, the transmission window can ensure continuous sending. Therefore, when the transmission window size is 17 and 117, the channel's throughput reaches the full rate, equal to the data transmission rate of the sending end, which is 64kb/s."}
{"ID": 2365, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "English", "Question": "If a CSMA/CD bus network is constructed with a rate of 100Mb/s and a signal propagation speed of 2x10^5 m/s in the cable, and the minimum frame size is 125 bytes, calculate the maximum length of the bus cable (assuming there are no repeaters in the bus cable).", "Answer": "Assuming the length of the bus cable is L, then (125x8)/(100*10^6)=2L/(2*10^8), which yields L=1000m."}
{"ID": 2366, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "English", "Question": "Given the destination address is 201.230.34.56 and the subnet mask is 255.255.240.0, determine the subnet address.", "Answer": "By converting the destination address and the subnet mask to binary and performing a bitwise AND operation, the subnet address can be obtained. However, in the destination address, the part corresponding to 255 in the subnet mask remains unchanged in the subnet address, the part corresponding to 0 in the subnet mask is 0 in the subnet address, and the other parts are obtained by a bitwise \"AND\" operation (or can be directly truncated). In this question, the first two parts of the subnet mask are 255.255, so the first two parts of the subnet address are 201.230; the last part of the subnet mask is 0, so the last part of the subnet address is 0; the third part of the subnet address is 240, which converts to 240=(11110000)2, and 34=(00100010)2, the bitwise \"AND\" results in (00100000)2=32. Therefore, the subnet address is 201.230.32.0."}
{"ID": 2367, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "English", "Question": "Host A sends 3 consecutive TCP segments to Host B based on TCP. The sequence number of the first segment is 90, the sequence number of the second segment is 120, and the sequence number of the third segment is 150. 1) How much data is there in the first and second segments? 2) Assuming the second segment is lost and the other two segments reach Host B, what should be the acknowledgment number in the acknowledgment segment sent from Host B to Host A?", "Answer": "1) Note that each byte of data in the TCP stream has a sequence number, and the sequence number of a TCP segment is the number of the first byte of its data part. Therefore, the data in the first segment is 120-90=30B, and the data in the second segment is 150-120=30B.\n2) Since TCP uses a cumulative acknowledgment strategy, when the second segment is lost, the third segment becomes an out-of-order segment. B expects to receive the next segment with sequence number 120, so the acknowledgment number is 120."}
{"ID": 2368, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "English", "Question": "DNS uses UDP instead of TCP; if a DNS packet is lost and there is no automatic recovery, would this cause a problem? If so, how should it be resolved?", "Answer": "DNS uses the transport layer's UDP instead of TCP because it does not require the automatic retransmission feature that TCP performs when a transmission error occurs. In fact, for access to DNS servers, multiple DNS requests return the same result, meaning that performing the operation multiple times has the same effect as doing it once. Therefore, DNS operations can be executed repeatedly. When a process makes a DNS request, it starts a timer. If the timer expires without receiving a reply, then it simply makes the request again, which is harmless."}
{"ID": 2369, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "() are functions that an operating system must provide.", "A": "Graphical User Interface (GUI)", "B": "Provide system call commands for the process.", "C": "Interrupt Handling", "D": "Compile the source code", "Answer": "C"}
{"ID": 2370, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The purpose of a system call is ().", "A": "Request system services", "B": "Terminate system service", "C": "Apply for system resources", "D": "Release system resources", "Answer": "A"}
{"ID": 2371, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "In the operating system, the instructions that can only be executed in kernel mode are ().", "A": "Reading the Clock", "B": "Extracting numbers", "C": "Generalized Instruction", "D": "Clear register to \"0\"", "Answer": "C"}
{"ID": 2372, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "For the following four services, in an operating system adopting a microkernel architecture, () should not be placed within the microkernel. Ⅰ. Inter-process communication mechanisms Ⅱ. Low-level I/O Ⅲ. Low-level process management and scheduling Ⅳ. Interrupt and trap handling Ⅴ. File system services", "A": "I, II, and III", "B": "II and V", "C": "Only V", "D": "IV and V", "Answer": "C", "Explanation": "Inter-process (thread) communication is one of the most frequently used functions of a microkernel, and thus almost all microkernel OSes incorporate it into the microkernel. Low-level I/O, which is closely related to hardware, should also be placed within the microkernel. Low-level process management and scheduling, which are part of the mechanism of scheduling functions, should be included in the microkernel. A microkernel OS places a small part that is closely related to hardware within the microkernel. The main function of the microkernel at this point is to capture interrupts and traps that occur and to handle interrupt responses. After identifying the interrupt or trap event, it then sends it to the relevant server for processing. Therefore, interrupt and trap handling should also be included in the microkernel. File system services, on the other hand, are implemented in file servers outside the microkernel, so only V should not be placed within the microkernel."}
{"ID": 2373, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "The following statements about virtual machines are correct (). Ⅰ. Virtual machines can be implemented with software Ⅱ. Virtual machines can be implemented with hardware Ⅲ. Multiple virtual machines can run simultaneously on the same physical machine, achieving true parallelism.", "A": "Type I and Type II", "B": "Quadrants I and III", "C": "Only Ⅰ", "D": "I, II, and III", "Answer": "A", "Explanation": "The functions that can be implemented by software can also be implemented by hardware, as the functions of virtual machine software can be realized by hardware. The demarcation between software and hardware is the task of system architects, and both Ⅰ and Ⅱ are correct. True parallelism is achieved by multicore processors, with multiple virtual machines running on the same physical machine, similar to multiple programs running on the same system."}
{"ID": 2374, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The maximum number of processes in a computer system is primarily limited by ().", "A": "Memory Size", "B": "Number of users", "C": "Number of open files", "D": "Number of External Devices", "Answer": "A"}
{"ID": 2375, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "A process has released a printer, which may change the state of ().", "A": "Self-process", "B": "Input/Output Process", "C": "Another process waiting for the printer", "D": "All processes waiting for the printer", "Answer": "C"}
{"ID": 2376, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "After a user process is created, ().", "A": "It remains in the system until it is revoked by the operator.", "B": "The process is revoked upon its normal or abnormal termination.", "C": "Revoked and established with the rotation of time slices", "D": "With the blocking or waking of the process, the revocation and establishment are carried out.", "Answer": "B"}
{"ID": 2377, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The condition for a process to enter the resource waiting queue after performing the P operation on semaphore S is ().", "A": "S.value < 0", "B": "S.value <= 0", "C": "S.value > 0", "D": "S.value >= 0", "Answer": "A"}
{"ID": 2378, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "The correct statement below is ().", "A": "Whether it is system-supported threads or user-level threads, their switching requires kernel support.", "B": "A thread is the unit of resource allocation, while a process is the unit of scheduling and dispatching.", "C": "Regardless of whether there are threads in the system, a process is an independent unit that owns resources.", "D": "In systems that introduce threads, the process remains the basic unit for resource scheduling and allocation.", "Answer": "C", "Explanation": "After introducing threads, the process remains the unit of resource allocation. Kernel-level threads are the units of processor scheduling and dispatching, and threads themselves do not possess resources; they can share all the resources of the process they belong to. Option C is correct, while options B and D are clearly incorrect. As for option A, it can be understood as follows: Suppose there is a kernel process that maps to multiple threads at the user level, then the switching between these threads does not require switching processes at the kernel level, and thus does not require kernel support."}
{"ID": 2379, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "The process itself decides ().", "A": "From running state to blocked state", "B": "From running state to ready state", "C": "From ready state to running state", "D": "From blocked state to ready state", "Answer": "A", "Explanation": "Only the transition from running state to blocked state is determined by the process itself. The transition from running state to ready state occurs when the process's time slice is exhausted, and it \"actively\" invokes a program to switch to the ready state. Although the transition from ready state to running state is also determined by the scheduler, the process is \"passive\" in this case. The transition from blocked state to ready state is determined by cooperating processes."}
{"ID": 2380, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "Given that 4 jobs arrive simultaneously, each with a processing time of 2h, and they run in single-tasking mode on a processor, the average turnaround time is ().", "A": "1h", "B": "5h", "C": "2.5h", "D": "8h", "Answer": "B", "Explanation": "The turnaround times for the four tasks are 2h, 4h, 6h, and 8h, respectively, so the total turnaround time for the four tasks is 2+4+6+8=20h. At this point, the average turnaround time = sum of individual task turnaround times / number of tasks = 20/4 = 5 hours."}
{"ID": 2381, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "Homework is submitted by users, while processes are automatically generated by the system. Besides that, the difference between them is ().", "A": "They execute different segments of the program.", "B": "The former is based on user tasks, while the latter is based on operating system control.", "C": "The former is batch processing, while the latter is time-sharing.", "D": "The latter can be executed concurrently, while the former cannot.", "Answer": "B", "Explanation": "Homework is initiated from the user's perspective; it is submitted by the user and is based on user tasks as the unit. A process, on the other hand, is initiated by the operating system; it is generated by the system and is the basic unit for resource allocation and independent operation within the operating system."}
{"ID": 2382, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "When a process that is accessing a critical resource is interrupted due to a request to wait for I/O operations, it ().", "A": "Allow other processes to enter the critical section associated with this process.", "B": "No other processes are allowed to enter any critical section.", "C": "Allow other processes to preempt the processor, but they must not enter the critical section of this process.", "D": "No process is allowed to preempt the processor.", "Answer": "C", "Explanation": "A process must satisfy the mutual exclusion condition to enter the critical section. It is acceptable for a process to be forced into a blocked state when it has entered the critical section but has not yet left, as this situation often occurs in the system. In this state, as long as other processes do not seek to enter the critical section of the running process, they should be allowed to run, that is, to be allocated the CPU. The critical section locked by the process is not accessible to other processes. If other processes attempt to access it, they will inevitably be blocked on the \"lock\" of the critical section, hoping that the process can leave and hand over the critical section the next time it runs. Therefore, the correct answer is C."}
{"ID": 2383, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "In operating systems, a deadlock refers to ().", "A": "A major failure has occurred in the computer system.", "B": "The number of resources is far less than the number of processes.", "C": "Several processes are indefinitely waiting for other processes to release resources that they are holding due to competition for resources.", "D": "The number of resources requested by the process simultaneously exceeds the total number of resources.", "Answer": "C", "Explanation": "Deadlock refers to a situation where multiple processes are in a perpetual state of blockage due to competition for system resources or inter-process communication, and without external intervention, these processes will be unable to proceed."}
{"ID": 2384, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Dynamic relocation is performed during the execution of a job ().", "A": "Compilation process", "B": "Loading process", "C": "Linking process", "D": "Execution process", "Answer": "D"}
{"ID": 2385, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The introduction of segmented storage management is mainly to better meet a series of user requirements. The following option does not belong to this series of requirements ().", "A": "Easy to operate", "B": "Convenient for programming", "C": "Sharing and Protection", "D": "Dynamic Linking and Growth", "Answer": "A"}
{"ID": 2386, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "In the storage management scheme, () can adopt overlay techniques.", "A": "Single contiguous storage management", "B": "Variable Partition Storage Management", "C": "Segmented Memory Management", "D": "Segmented Paging Memory Management", "Answer": "A", "Explanation": "Overlay technology is a technique used in early single continuous storage management to expand storage capacity, which can also be applied to fixed partition allocation storage management."}
{"ID": 2387, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "After adopting paging or segmentation management, the physical address space provided to the user is ().", "A": "Paging supports a larger physical address space.", "B": "Support for larger physical address spaces in segments", "C": "Cannot be determined", "D": "Equally large", "Answer": "C", "Explanation": "Page tables and segment tables are also stored in memory, and the physical address space provided to the user is the total space size minus the length of the page table or segment table. Since the length of the page table and segment table cannot be determined, the size of the physical address space available to the user is also uncertain."}
{"ID": 2388, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Assign a unique number to each device in the system according to a certain principle. These numbers serve as codes to distinguish hardware and identify devices, and this number is referred to as the device's ().", "A": "Absolute value sign", "B": "Relative number", "C": "Model number", "D": "Symbol", "Answer": "A"}
{"ID": 2389, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "The I/O control of disk devices mainly adopts the () method.", "A": "Position", "B": "Byte", "C": "frame", "D": "Direct Memory Access (DMA)", "Answer": "D"}
{"ID": 2390, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "English", "Question": "Among the following statements about solid-state drives, the correct one is ().", "A": "The write speed of solid-state drives is relatively slow, and their performance can even be inferior to that of conventional hard drives.", "B": "Compared to conventional hard drives, the main advantage of solid-state drives is reflected in the speed of continuous access.", "C": "The static wear leveling algorithm outperforms the dynamic wear leveling algorithm.", "D": "During write operations, select storage blocks that are used for long-term data storage and are infrequently erased.", "Answer": "C"}
{"ID": 2391, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "In the following algorithms, () may change the direction of movement of the magnetic head at any time.", "A": "Elevator Scheduling", "B": "First Come, First Served", "C": "Circular Scanning Algorithm", "D": "None of the above answers are correct.", "Answer": "B", "Explanation": "The First-Come, First-Served (FCFS) algorithm schedules disk requests based on the order of their arrival times, which may result in frequent changes in the direction of the disk head movement. In contrast, the Elevator scheduling and Circular Scan algorithms both restrict the movement direction of the disk head."}
{"ID": 2392, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "Given that the average rotational speed of a disk is r seconds per revolution, the average seek time is T seconds, and each track can store N bytes, when reading and writing b bytes of data to the disk using a random seek method, where all sectors of each track form a cluster, the average access time is ().", "A": "(r+T)b/N", "B": "b/NT", "C": "(b/N + T)r", "D": "bT/N + r", "Answer": "A", "Explanation": "Grouping all the sectors of each track into a cluster means that the storage space of a track can be organized into a data block group, which is conducive to improving storage speed. When reading and writing to a disk, the read/write head first locates the track, a process called seeking, and then it can read from or write to the track. After reading or writing a complete track, the head will continue to seek the next track to complete the remaining work. Therefore, in the case of random seeking, the time to read and write a track includes both the seek time and the read/write time, which is T+r seconds. Since the total data volume is b bytes, the number of tracks it occupies is b/N, so the total average read/write time is (r+T)b/N seconds."}
{"ID": 2393, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "English", "Question": "Assuming a sequence of disk track access requests is 55, 58, 39, 18, 90, 160, 150, 38, 184, and the initial position of the read/write head is at track 100, if the SSTF (Shortest Seek Time First) algorithm is used, the head moves () tracks.", "A": "55", "B": "184", "C": "200", "D": "248", "Answer": "D", "Explanation": "For the SSTF algorithm, the seek sequence should be 100, 90, 58, 55, 39, 38, 18, 150, 160, 184; the number of track movements are 10, 32, 3, 16, 1, 20, 132, 10, 24, respectively, thus the total number of head movements is 248. Additionally, a sketch can also be drawn to answer this, moving from track 100 to track 18 requires 82 movements, then adding the movements from track 18 to track 184, which is 184-18=166, results in a total of 166+82=248 movements."}
{"ID": 2394, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "Compared to microkernel systems, occupying a large memory space is not considered a disadvantage of monolithic kernel operating systems.", "Answer": false}
{"ID": 2395, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "Inter-thread communication must use system call functions.", "Answer": false}
{"ID": 2396, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Reasoning", "Language": "English", "Question": "After implementing concurrency techniques in a single-processor system with channel devices, processes run in parallel during a certain period, while the CPU and I/O devices work serially.", "Answer": false, "Explanation": "Since it is a single processor, only one process can obtain processor resources at any given moment, thus concurrent execution occurs over a period of time. Moreover, it is precisely the parallel operation of the CPU and I/O devices that enables processes to execute concurrently."}
{"ID": 2397, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "In paging storage management, the allocation of main memory is done in units of physical blocks.", "Answer": true}
{"ID": 2398, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "In page replacement algorithms, the algorithm that exhibits Belady's anomaly is the First-In, First-Out (FIFO) replacement algorithm.", "Answer": true}
{"ID": 2399, "Split": "Valid", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "When creating a file, the file system establishes a logical space for it.", "Answer": false}
{"ID": 2400, "Split": "Valid", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "Compared to encryption protection, access control mechanisms must be implemented by the system.", "Answer": true}
{"ID": 2401, "Split": "Valid", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "For a file with a three-level index, accessing a record typically requires three disk accesses.", "Answer": false}
{"ID": 2402, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The Shortest Seek Time First (SSTF) algorithm is used for disk scheduling.", "Answer": true}
{"ID": 2403, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "The SPOOLing system consists of a pre-input program, spool management program, and spool management output program.", "Answer": false}
{"ID": 2404, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "English", "Question": "In a SPOOLing system, user programs can send output data to the output spool at any time, and the SPOOLing system will complete the data output operation when the output device is idle.", "Answer": true}
{"ID": 2405, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "When (), the process transitions from the running state to the ready state.", "Answer": "Time slice expired."}
{"ID": 2406, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "The priority of () is determined at the time of its creation and remains unchanged throughout its entire runtime.", "Answer": "static"}
{"ID": 2407, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "English", "Question": "The resource preemption method can be used to resolve deadlocks, and the () method can also be used to resolve deadlocks.", "Answer": "Terminate Process", "Explanation": "The resource preemption method allows a process to forcibly take away the system resources occupied by other processes. Similarly, the process termination method forcibly releases the system resources that a process has occupied. Both methods resolve deadlocks by breaking the \"request and hold\" condition of deadlocks. Refusing to allocate new resources can only maintain the status quo of a deadlock and cannot resolve it."}
{"ID": 2408, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "English", "Question": "The check during deadlock detection is for ().", "Answer": "Resource Directed Graph", "Explanation": "Deadlock detection generally employs two methods: the resource allocation graph method and the resource matrix method. The precedence graph merely illustrates the synchronization relationship between processes, while the search tree is used for the analysis of data structures, and there is no such thing as a safety graph. Note the difference between deadlock avoidance and deadlock detection: deadlock avoidance refers to preventing the occurrence of deadlocks, meaning no deadlock has occurred; deadlock detection means that a deadlock has already appeared, and it needs to be identified."}
{"ID": 2409, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "Multiple processes run in the main memory without interfering with each other, which is achieved by the operating system through ().", "Answer": "Memory Protection"}
{"ID": 2410, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "In segmented distribution, the CPU needs () memory accesses each time it fetches data from memory.", "Answer": "2"}
{"ID": 2411, "Split": "Valid", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "When creating a file, the file system establishes () for it.", "Answer": "Directory entry"}
{"ID": 2412, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "English", "Question": "() are used to connect a large number of low-speed or medium-speed I/O devices.", "Answer": "Byte Multiplexing Channel"}
{"ID": 2413, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "English", "Question": "Why must inter-process communication rely on the kernel functions of the operating system? Briefly describe the main methods of process communication.", "Answer": "In operating systems, a process is the basic unit for competition and allocation of computer system resources. Each process has its own independent address space. To ensure that multiple processes can share physical memory without interfering with each other, the operating system uses hardware address mechanisms to strictly protect the address space of processes, restricting each process to access only its own address space. The specific answers are as follows. Each process has its own independent address space. Under the address protection mechanisms of the operating system and hardware, a process cannot access the address space of other processes, so it must rely on the system call functions of the operating system to achieve inter-process communication. The main methods of inter-process communication include: 1) Shared memory area. A shared memory area is created through a system call. Multiple processes can (through system calls) connect to the same shared memory area and exchange data between processes by accessing the shared memory area. When using shared memory areas, semaphores are needed to solve synchronization and mutual exclusion problems. 2) Message passing. Communication between processes is achieved through system calls for sending/receiving messages. When a process sends a message, the system copies the message from the user buffer to the kernel's message buffer, and then enqueues the message buffer into the message queue. The message sent by the process remains in the message queue until it is received by another process. When a process receives a message, the system dequeues the message buffer from the message queue, copies the message from the kernel's message buffer to the user buffer, and then releases the message buffer. 3) Pipe system. A pipe is a first-in-first-out (FIFO) stream of information, allowing multiple processes to write data to the pipe and multiple processes to read data from the pipe. During the read/write process, the operating system ensures that the order of data writing and reading is consistent. Processes communicate with each other by reading/writing to pipe files or pipe devices. 4) Shared files. Communication between processes is achieved through the file sharing functionality provided by the operating system. Here, semaphores are also needed to solve synchronization and mutual exclusion issues in file sharing operations."}
{"ID": 2414, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "English", "Question": "What are the components of a monitor (in concurrent programming)?", "Answer": "By definition, a monitor consists of three parts: 1) the declaration of shared variables local to the monitor. 2) a set of procedures that operate on the data structure. 3) statements that initialize the local data of the monitor; in addition, a name must be assigned to the monitor."}
{"ID": 2415, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "English", "Question": "The operating system uses segment management, and the user area main memory is 512KB. Free blocks are linked into the free block table, and when allocated, the front half (lower address part) of the free block is taken. Initially, all are free. After executing the sequence of operations reg(300KB), reg(100KB), release(300KB), reg(150KB), reg(50KB), reg(90KB): What would be the consequences if an additional 80KB is requested subsequently? What does this indicate?", "Answer": "If a subsequent request for 80KB is made, the first-fit algorithm can allocate successfully, while the best-fit algorithm does not have a sufficiently large free area to allocate. This indicates that the first-fit algorithm utilizes the free areas at the lower addresses as much as possible, leaving large free areas at the higher addresses, which are more likely to satisfy the process's request."}
{"ID": 2416, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "English", "Question": "In a paging virtual memory system, the average access and transfer time for the disk used for page swapping is 20ms. The page table is stored in main memory with an access time of 1us, meaning that each reference to an instruction or data requires two memory accesses. To improve performance, an associative register (translation lookaside buffer, TLB) can be added. If the page table entry is in the associative register, only one memory access is required. Assuming that 80% of the page table entries are found in the associative register and of the remaining 20%, 10% of the accesses (i.e., 2% of the total) will result in a page fault. Please calculate the effective access time.", "Answer": "1) 80% of the accessed page table entries are in the associative register, with an access time of 1us.\n2) 18% of the accessed page table entries are not in the associative register but in memory, taking (1 + 1)μs.\n3) 2% of the accesses cause a page fault interrupt, with an access time of (1μs + 1μs + 20ms).\nTherefore, the effective access time is 80% x 1 + 18% x 2 + 2% x (1 x 2 + 20 x 1000) = 401.2μs."}
{"ID": 2417, "Split": "Valid", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Knowledge", "Language": "English", "Question": "Answer the following question regarding the directory structure of a file: What problems could arise if users are allowed to freely read, write, and modify directory entries?", "Answer": "Users can change access permissions to files by modifying directory entries, thereby using the system's files illegitimately; moreover, irresponsible modifications to directory entries can lead to administrative chaos."}
{"ID": 2418, "Split": "Valid", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "English", "Question": "In implementing a file system, to speed up the retrieval of file directories, the \"FCB decomposition method\" can be utilized. Assume that the directory file is stored on the disk, with each disk block being 512B. An FCB occupies 64B, of which the filename takes up 8B. The FCB is usually divided into two parts: the first part is 10B (including the filename and the internal file number), and the second part is 56B (including the internal file number and other descriptive information of the file). Suppose a directory file has a total of 254 FCBs. Please provide the average number of disk accesses required to find a specific FCB in the directory file before and after applying the decomposition method, assuming equal probability of accessing each file.", "Answer": "The directory is stored on the disk, and accessing the directory requires disk access, which is very slow. The principle of using the \"FCB decomposition method\" to speed up directory search is: to decompose a part of the FCB and store it in another data structure, while only retaining the basic information of the file and a pointer to that data structure in the directory. This effectively reduces the size of the directory, decreases the number of disk blocks occupied by the directory, and also reduces the number of times the disk is read when searching the directory, thereby speeding up the directory search. Because originally the entire FCB was in the directory, and the FCB decomposition method places part of the FCB content outside the directory, an additional disk read is required after searching the directory to gather all the contents of the FCB. Before the decomposition method, the number of disk blocks for the directory was 64x254/512=31.75, which is 32 blocks. Each of the first 31 blocks contained 512/64=8 entries, and the last block contained 254-31x8=6 entries. Therefore, the average number of disk accesses to find a certain FCB in that directory file was [8*(1+2+3+...+31)+6x32]/254 =16.38 times. After the decomposition method, the number of disk blocks for the directory was 10x254/512=4.96, which is 5 blocks. Each of the first 4 blocks contained 512/10=51 entries, and the last block contained 254-4x51=50 entries. The number of disk accesses required for the directory entries in the 1st, 2nd, 3rd, 4th, and 5th blocks were 2, 3, 4, 5, and 6 times, respectively. Therefore, the average number of disk accesses to find a certain FCB in that directory file was [51x(2+3+4+5)+50x6]/254=3.99 times."}
{"ID": 2419, "Split": "Valid", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "English", "Question": "In implementing a file system, to speed up the retrieval of file directories, the \"FCB splitting method\" can be utilized. Assume that the directory file is stored on the disk, with each disk block being 512B. The FCB occupies 64B, of which the file name takes up 8B. The FCB is typically split into two parts: the first part is 10B (including the file name and the internal file number), and the second part is 56B (including the internal file number and other descriptive information about the file). Generally, if the directory file occupies n disk blocks before splitting and uses m disk blocks to store the file name and internal file number after splitting, please provide the condition under which the number of disk accesses is reduced (assuming that both m and n disk blocks are exactly filled).", "Answer": "The directory is stored on the disk, and accessing the directory requires disk access, which is very slow. The principle of using the \"FCB decomposition method\" to speed up directory search is: part of the FCB is decomposed and stored in another data structure, while only the basic information of the file and a pointer to that data structure are left in the directory. This effectively reduces the size of the directory, decreases the number of disk blocks occupied by the directory, and also reduces the number of times the disk is read when searching the directory, thereby speeding up the directory search. Because originally the entire FCB was in the directory, and the FCB decomposition method places part of the FCB outside the directory, so after searching the directory, it is still necessary to read the disk once more to gather all the contents of the FCB. Before the decomposition method, the average number of disk accesses = (1+2+3+...+n)/n = (n+1)/2 times. After the decomposition method, the average number of disk accesses = [2+3+4+...+(m+1)]/m = (m+3)/2 times. In order to reduce the number of disk accesses, it is clear that (m+3)/2 < (n+1)/2, i.e., m < n-2."}
