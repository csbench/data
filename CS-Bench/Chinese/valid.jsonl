{"ID": 4603, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对于两种不同的数据结构，他们的逻辑结构和物理结构一定不同吗？", "A": "一定不同", "B": "可能相同，比如二叉树和二叉排序树", "C": "逻辑结构总是相同，物理结构不同", "D": "逻辑结构总是不同，物理结构相同", "Answer": "B"}
{"ID": 4604, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "算法的时间复杂度受哪些因素影响？", "A": "仅由算法的执行次数决定", "B": "与算法使用的编程语言有关", "C": "不仅依赖于问题的规模n，也取决于待输入数据的性质", "D": "只与算法的逻辑结构有关", "Answer": "C"}
{"ID": 4605, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "算法原地工作是指什么？", "A": "算法不需要任何额外空间", "B": "算法的辅助空间与输入规模成正比", "C": "算法所需辅助空间为常量，即O(1)", "D": "算法的执行时间为常量", "Answer": "C"}
{"ID": 4606, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "同一个算法在不同实现语言中的执行效率如何变化？", "A": "实现语言的级别越高，执行效率越高", "B": "执行效率与实现语言的级别无关", "C": "同一个算法，实现语言的级别越高，执行效率越低", "D": "执行效率只取决于算法本身，与实现语言无关", "Answer": "C"}
{"ID": 4607, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在顺序表的ListDelete函数中，删除中间位置的一个元素之后，以下哪个描述是正确的？", "A": "顺序表长度不变", "B": "只有被删除元素之前的元素位置改变", "C": "只有被删除元素之后的元素位置改变", "D": "所有元素的位置都改变", "Answer": "C"}
{"ID": 4608, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "单链表的InsertNextNode函数如何正确地在给定结点p之后插入新元素e？", "A": "创建新结点并将其链接到结点p之后", "B": "首先删除p结点之后的结点，然后插入新结点", "C": "将新元素e插入到链表的开头", "D": "在p结点之前插入新元素e", "Answer": "A"}
{"ID": 4609, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在单链表中，DeleteNode函数如何正确地删除指定的结点p？", "A": "将p的数据与后继结点交换，然后删除后继结点", "B": "直接删除结点p", "C": "删除p之前的结点", "D": "将p结点替换为其后继结点", "Answer": "A"}
{"ID": 4610, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "线性表的顺序存储结构是一种（)。", "A": "随机存取的存储结构", "B": "顺序存取的存储结构", "C": "索引存取的存储结构", "D": "散列存取的存储结构", "Answer": "A"}
{"ID": 4611, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "给定有n个元素的一维数组，建立一个有序单链表的最低时间复杂度是（）。", "A": "O(1)", "B": "O(n)", "C": "O(n^2)", "D": "O(nlog2n)", "Answer": "D", "Explanation": "若先建立链表，然后依次插入建立有序表，则每插入一个元素就需遍历链表寻找插入位置，即直接播入排序，时间复杂度为O(n)。若先将数组排好序，然后建立链表，建立链表的时间复杂度为O(n)，数组排序的最好时间复杂度为O(nlog2n)，总时间复杂度为O(nlog2n)。故选D。"}
{"ID": 4612, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在双向链表存储结构中，删除P所指的结点时必须修改指针（）。", "A": "p->llink->rlink=p->rlink;p->rlink->llink=p->llinki", "B": "p->link=p->llink->1link;p->llink->rlink=p;", "C": "p->rlink->llink=p;p->rlink=p->rlink->rlink;", "D": "p->rlink-p->llink->llink;p->llink=p->rlink->rlink;", "Answer": "A", "Explanation": "只不过这单是删除一个结点，注意将P的前、后两结点链接起来。关键是要保证在结点指针的修改过程中不断链！"}
{"ID": 4613, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "栈的操作特性可以概括为什么？", "A": "后进先出（LIFO）", "B": "先进先出（FIFO）", "C": "随机存取", "D": "先进后出", "Answer": "A"}
{"ID": 4614, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "顺序栈的出栈操作 Pop 是如何实现的？", "A": "检查栈是否满，然后添加元素到栈顶", "B": "检查栈是否空，然后移除栈顶元素", "C": "返回栈顶元素的值，不修改栈", "D": "将栈顶指针设置为-1", "Answer": "B"}
{"ID": 4615, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "循环队列的队空和队满条件分别是什么？", "A": "队空：Q.front == Q.rear；队满：(Q.rear+1) % MaxSize == Q.front", "B": "队空：Q.front == Q.rear+1；队满：Q.rear == Q.front", "C": "队空：Q.rear == Q.front+1；队满：Q.front == Q.rear", "D": "队空和队满的条件相同", "Answer": "A"}
{"ID": 4616, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "栈和队列的主要区别在于（)。", "A": "它们的逻辑结构不一样", "B": "它们的存储结构不一样", "C": "所包含的元素不一样", "D": "插入、删除操作的限定不一样", "Answer": "D"}
{"ID": 4617, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "栈的应用不包括（）。", "A": "递归", "B": "进制转换", "C": "迷宫求解", "D": "缓冲区", "Answer": "D"}
{"ID": 4618, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "队列的“先进先出\"特性是指（）。\nⅠ.最后插入队列中的元素总是最后被删除\nⅡ.当同时进行插入、删除操作时，总是插入操作优先\nⅢ.每当有删除操作时，总要先做一次插入操作\nⅣ.每次从队列中删除的总是最早插入的元素", "A": "Ⅰ", "B": "Ⅰ和Ⅳ", "C": "Ⅱ和Ⅲ", "D": "Ⅳ", "Answer": "B", "Explanation": "队列“先进先出”的特性表现在：先进队列的元素先出队列，后进队列的元素后出队列，进队列对应的是插入操作，出队列对应的是删除操作。Ⅰ和Ⅳ均正确。"}
{"ID": 4619, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在一个链队列中，假设队头指针为front，队尾指针为rear，x所指向的元素需要入队，则需要执行的操作为（）。", "A": "front=x,front-front->next", "B": "x->next=front->next, front=x", "C": "rear->next=x,rear=x", "D": "rear->next=x,x->next=null,rear=x", "Answer": "D", "Explanation": "插入操作时，先将结点x插入到链表尾部，再让rear指向这个结点x。C的做法不够严密，因为是队尾，所以队尾x->next必须置为空。"}
{"ID": 4620, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若将n阶上三角矩阵A按列优先级压缩存放在一维数组B[1...n(n+1)/2+1]中，则存放到B[k]中的非零元素a_i,j（1≤i,j≤n）的下标i、j与k的对应关系是（)。", "A": "i(i+1)/2+j", "B": "i(i- 1)/2 +j- 1", "C": "j(j-1)/2+ i", "D": "j(j- 1)/2 + i - 1", "Answer": "C", "Explanation": "按列优先存储，故元素a,前面有j-1列，共有1+2+3+...+j-1=j(j-1)/2个元素，元素a_i,j在第j列上是第i个元素，数组B的下标是从1开始，因此k=j(j-1)/2+i。"}
{"ID": 4621, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "KMP算法的主要特点是什么？", "A": "主串指针在失配时不回溯", "B": "仅适用于小规模数据匹配", "C": "适用于任何类型的字符串匹配，效率极高", "D": "使用哈希函数进行匹配", "Answer": "A"}
{"ID": 4622, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "已知串S='aaab'，其next数组值为（）", "A": "0123", "B": "0112", "C": "0231", "D": "1211", "Answer": "A"}
{"ID": 4623, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "完全二叉树的特点是什么？", "A": "所有叶子结点都在最后两层", "B": "只有左孩子或右孩子的二叉树", "C": "每层都是满的", "D": "叶子结点只在最后一层", "Answer": "A"}
{"ID": 4624, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "二叉树的遍历方式包括哪些？", "A": "先序、中序、后序", "B": "先序、后序", "C": "中序、后序", "D": "先序、中序", "Answer": "A"}
{"ID": 4625, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "引入线索二叉树的主要目的是什么？", "A": "加快查找结点的前驱或后继的速度", "B": "增加二叉树的深度", "C": "减少二叉树所占的空间", "D": "使得二叉树的遍历更加高效", "Answer": "A"}
{"ID": 4626, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "高度为h的完全二叉树最少有（）个结点。", "A": "2^h", "B": "2^h+ 1", "C": "2^(h-1)", "D": "2^h-1", "Answer": "C"}
{"ID": 4627, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若X是二叉中序线索树中一个有左孩子的结点，且X不为根，则X的前驱为（）。", "A": "X的双亲", "B": "X的右子树中最左的结点", "C": "X的左子树中最右的结点", "D": "X的左子树中最右的叶结点", "Answer": "C", "Explanation": "在二叉中序线索树中，某结点若有左孩子，则按照中序“左根右”的顺序，该结点的前驱结点为左子树中最右的一个结点（注意，并不一定是最右叶子结点）。"}
{"ID": 4628, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若度为m的哈夫曼树中，叶子结点个数为n，则非叶子结点的个数为（)。", "A": "n-1", "B": "[n/m]-1", "C": "[(n-1)/(m-1)]", "D": "[n/(m-1)]- 1", "Answer": "C", "Explanation": "1棵度为m的哈夫曼树应只有度为0和m的结点，设度为m的结点有n_m个，度为0的结点一有n_0个，又设结点总数为n，n=n_0+n_m。因有n个结点的哈夫曼树有n-1条分支，则mn_m=n-1=n_m+n_0-1,整理得(m-1)n_m=n_0-1,n_m=(n-1)(m-1)。"}
{"ID": 4629, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "生成树是什么？", "A": "任意连接顶点的图", "B": "所有顶点均由边连接但不存在回路的图", "C": "一个包含所有顶点但没有边的图", "D": "一个包含所有边但没有顶点的图", "Answer": "B"}
{"ID": 4630, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是简单图？", "A": "一个包含重复边和自环的图", "B": "一个只包含顶点的图", "C": "一个不存在重复边且不存在顶点到自身的边的图", "D": "一个包含至少一个环的图", "Answer": "C"}
{"ID": 4631, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在邻接矩阵中，如何定义结点的度、出度和入度？", "A": "度是非零元素的个数，出度是行非零元素的个数，入度是列非零元素的个数", "B": "度是零元素的个数，出度是列零元素的个数，入度是行零元素的个数", "C": "所有结点的度、出度、入度相同", "D": "所有结点的度、出度、入度都是零", "Answer": "A"}
{"ID": 4632, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在有向图的邻接表存储结构中，顶点V在边表中出现的次数是（）。", "A": "顶点V的度", "B": "顶点V的出度", "C": "顶点V的入度", "D": "依附于顶点V的边数", "Answer": "C"}
{"ID": 4633, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "带权有向图G用邻接矩阵存储，则v_i的入度等于邻接矩阵中（）", "A": "第i行非∞的元素个数", "B": "第i列非∞的元素个数", "C": "第i行非∞且非0的元素个数", "D": "第i列非∞且非0的元素个数", "Answer": "D", "Explanation": "有向图的邻接矩阵中，0和∞表示的都不是有向边，而入度是由邻接矩阵的列中元素计算出来的；出度是由邻接矩阵的行中元素计算出米的。"}
{"ID": 4634, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面关于求关键路径的说法中，不正确的是（）", "A": "求关键路径是以拓扑排序为基础的", "B": "一个事件的最早发生时间与以该事件为始的弧的活动的最早开始时间相同", "C": "一个事件的最迟发生时间是以该事件为尾的弧的活动的最迟开始时间与该活动的持续时间的差", "D": "关键活动一定位于关键路径上", "Answer": "C", "Explanation": "一个事件的最迟发生时间等于Min{以该事件为尾的弧的活动的最迟开始时间，最迟结束时间与该活动的持续时间的差}。"}
{"ID": 4635, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "关键字在查找中的作用是什么？", "A": "数据元素中唯一标识该元素的数据项，查找结果应唯一", "B": "标识数据元素的任意数据项", "C": "只用于排序，不用于查找", "D": "用于分类数据元素", "Answer": "A"}
{"ID": 4636, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "B树的特点是什么？", "A": "多路平衡查找树，树中每个结点至多有m棵子树", "B": "单路查找树，树中每个结点至多有两棵子树", "C": "多路非平衡查找树，树中每个结点至多有m棵子树", "D": "多路平衡查找树，树中每个结点至多有两棵子树", "Answer": "A"}
{"ID": 4637, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于m阶B树的说法中，错误的是（)。", "A": "根结点至多有m棵子树", "B": "所有叶结点都在同一层次上", "C": "非叶结点至少有m/2（m为偶数）或（m+1)/2（m为奇数）棵子树", "D": "根结点中的数据是有序的", "Answer": "C", "Explanation": "除根结点外的所有非终端结点至少有[m/2]棵子树。对于根结点，最多有m棵子树，若其不是叶结点，则至少有2棵子树"}
{"ID": 4638, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对包含n个元素的散列表进行查找，平均查找长度（）", "A": "为 O(log2n)", "B": "为 O(1)", "C": "不直接依赖于n", "D": "直接依赖于表长m", "Answer": "C", "Explanation": "在散列表中，平均查找长度与装填因子α直接相关，表的查找效率不直接依赖于表中已有表项个数n或表长m。若散列表中存放的记录全部是某个地址的同义词，则平均查找长度为O(n)而非O(1)"}
{"ID": 4639, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一组记录的关键字为(19,14,23,1,68,20,84,27,55,11,10,79)，用链地址法构造散列表，散列函数为H（key）=keyMOD13，敬列地址为1的链中有（）个记录。", "A": 1, "B": 2, "C": 3, "D": 4, "Answer": "D", "Explanation": "由散列函数计算可知，14,1,27,79散列后的地址都是1，.所以有4个记录"}
{"ID": 4640, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "折半插入排序的基本思想是什么？", "A": "使用折半查找确定插入位置", "B": "直接按顺序插入", "C": "通过交换相邻元素排序", "D": "将所有元素一次归并成一个有序序列", "Answer": "A"}
{"ID": 4641, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "折半插入排序与直接插入排序相比，有什么不同？", "A": "折半插入排序减少了关键字的比较次数", "B": "折半插入排序更快", "C": "折半插入排序增加了元素移动次数", "D": "折半插入排序的时间复杂度更低", "Answer": "A"}
{"ID": 4642, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "希尔排序算法的稳定性如何？", "A": "不稳定", "B": "稳定", "C": "依赖于输入数据", "D": "无法确定", "Answer": "A"}
{"ID": 4643, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "堆排序的时间复杂度是多少？", "A": "O(n^2)", "B": "O(nlogn)", "C": "O(n)", "D": "O(logn)", "Answer": "B"}
{"ID": 4644, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "排序算法的稳定性是指（）。", "A": "经过排序后，能使关键字相同的元素保持原顺序中的相对位置不变", "B": "经过排序后，能使关键字相同的元素保持原顺序中的绝对位置不变", "C": "排序算法的性能与被排序元素个数关系不大", "D": "排序其法的性能与被排序元素的个数关系切", "Answer": "A", "Explanation": "注意，这里的绝对位置是指若在排序前元素R在位置i，则绝对位置就是i；即排序后R的位置不发生变化，显然B是不对的。C、D与题目要求无关。"}
{"ID": 4645, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对序列(15,9,7,8,20,-1,4)用希尔排序方法排序，经一趟后序列变为{15,-1,4,8,20,9,7}，则该次采用的增量是（）。", "A": 1, "B": 4, "C": 3, "D": 2, "Answer": "B", "Explanation": "希尔排序将序列分成若干组，记录只在组内进行交换。由观察可知，经过一趟后9和-1交换7和4交换，可知增量为4。"}
{"ID": 4646, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "快速排序算法在（）情况下最不利于发挥其长处", "A": "要排序的数据量太大", "B": "要排序的数据中含有多个相同值", "C": "要排序的数据个数为奇数", "D": "要排序的数据已基本有序", "Answer": "D", "Explanation": "当待排序数据为基本有序时，每次选取第n个元素为基准，会导致划分区间分配不均匀，不利于发挥快速排序算法的优势。相反，当待排序数据分布较为随机时，基准元素能将序列划分为两个长度大致相等的序列，这时才能发摔快速排序的优势。"}
{"ID": 4647, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个顺序表所占用的存储空间大小与元素的类型无关。", "Answer": false}
{"ID": 4648, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "只带队首指针的非循环双链表是最不适合用作链式队列的链表。", "Answer": true}
{"ID": 4649, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "朴素模式匹配算法不适用于字符串匹配。", "Answer": false}
{"ID": 4650, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知一颗完全二叉树的第6层有8个叶结点，则该完全二叉树的结点个数最少是119个。", "Answer": false, "Explanation": "第6层有叶结点说明完全二叉树的高度可能为6或7，显然树高为6时结点最少。若第6层上有8个叶结点，则前5层为满二叉树，故完全二叉树的结点个数最少为2^5-1+8=39个结点。"}
{"ID": 4651, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在森林的二叉树表示中，结点M和结点N是同一父结点的左儿子和右儿子,则结点M是结点N的左兄弟。", "Answer": false, "Explanation": "在森林的二叉树表示中，当M和N的父结点是二叉树根结点时，则结点M是结点N可能在不同的树上"}
{"ID": 4652, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "从一个顶点到另一个顶点的距离是根据两点之间边的数量来定义的。", "Answer": true}
{"ID": 4653, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "AOE网的邻接矩阵是对称矩阵。", "Answer": false}
{"ID": 4654, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "用Prim算法和Kruskal算法构造图的最小生成树，所得到的最小生成树无法比较。", "Answer": false, "Explanation": "由于无向连通图的最小生成树不一定唯一，所以用不同算法生成的最小生成树可能不同，但当无向连通图的最小生成树唯一时，不同算法生成的最小生成树必定是相同的。"}
{"ID": 4655, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在含有n个结点的二叉排序树中查找某个关键宇的结点时，最多进行log2n次比较。", "Answer": false}
{"ID": 4656, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "红黑树是一种特殊的平衡二叉树。", "Answer": false, "Explanation": "红黑树不是一种特殊的平衡二叉树。"}
{"ID": 4657, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "19, 34, 26, 97, 56, 75是一个堆。", "Answer": true, "Explanation": "可将序列表示成完全二叉树，再看父结点与子结点的关系是否全部满足堆的定义。"}
{"ID": 4658, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "简单选择排序在一趟扫描后不一定能选出一个元素放在其最终位置上。", "Answer": false, "Explanation": "前面我们知道插入排序不能保证在一趟结束后一定有元素放在最终位置上。事实上，归并排序也不能保证。例如，序列{6,5,7,8,2,1,4,3}进行一趟2路归并排序（从小到大）后为(5,6,7,8,1,2,3,4}显然它们都未被放在最终位置上。"}
{"ID": 4659, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "在二叉树中有两个结点m和，若m是n的祖先，则使用（）可以找到从m到的路径", "Answer": "后序遍历", "Explanation": "在后序遍历退回时访问根结点，就可以从下向上把从n到m的路径上的结点输出，若采用非递归的算法，则当后序遍历访问到n时，栈中把从根到n的父指针的路径上的结点都记忆下来，也可以找到从m到n的路径。"}
{"ID": 4660, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "折半查找的时间复杂度是多少？", "Answer": "O(log2n)"}
{"ID": 4661, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于两种不同的数据结构，逻辑结构或物理结构一定不相同吗？", "Answer": "对于两种不同的数据结构，它们的逻辑结构和物理结构完全有可能相同。比如二叉树和二叉排序树，二叉排序树可以采用二叉树的逻辑表示和存储方式，前者通常用于表示层次关系，而后者通常用于排序和查找。虽然它们的运算都有建立树、插入结点、删除结点和查找结点等功能，但对于二叉树和二叉排序树，这些运算的定义是不同的，以查找结点为例，二叉树的时间复杂度为O(n)，而二叉排序树的时间复杂度为O(log2n)。"}
{"ID": 4662, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "指出堆和二叉排序树的区别？", "Answer": "以小根堆为例，堆的特点是双亲结点的关键字必然小于等于该孩子结点的关键字，而两个孩子结点的关键字没有次序规定。在二叉排序树中，每个双亲结点的关键字均大于左子树结点的关键字，均小于右子树结点的关键字，也就是说，每个双亲结点的左、右孩子的关键字有次序关系。这样，当对两种树执行中序遍历后，二叉排序树会得到一个有序的序列，而堆则不一定能得到一有序的序列。"}
{"ID": 4663, "Split": "Valid", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "一棵有n个结点的满二叉树有多少个分支结点和多少个叶子结点？该满二叉树的高度是多少？", "Answer": "满二叉树中n1=0，由二叉树的性质可知n2 = n0-1，n = n0 + n1 + n2 = 2*n0-1= 2n2+1则n_0=(n+1)/2。分支结点个数n2=n-(n+1)/2=(n-1)/2。高度为h的满二叉树的结点数n=1+2^1 +2^2 +...+2^(h-1) =2^h-1,即高度 h=log2(n +1)。"}
{"ID": 4664, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "主存储器的工作方式是什么？()", "A": "按内容访问", "B": "按存储单元的地址进行存取", "C": "通过外部设备进行存取", "D": "通过网络进行存取", "Answer": "B"}
{"ID": 4665, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "可以在计算机中直接执行的语言和用助记符编写的语言分别是()\nⅠ.机器语言 Ⅱ.汇编语言 Ⅲ.高级语言 Ⅳ.操作系统原语 Ⅴ.正则语言", "A": "Ⅱ、Ⅲ", "B": "Ⅱ、Ⅳ", "C": "Ⅰ、Ⅱ", "D": "Ⅰ、Ⅳ", "Answer": "C"}
{"ID": 4666, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列说法中，正确的是( )。Ⅰ.在微型计算机的广泛应用中，会计电算化属于科学计算方面的用 Ⅱ.决定计算机计算精度的主要技术是计算机的字长 Ⅲ.计算机“运算速度”指标的舍义是每秒能执行多少条操作系统的命令 Ⅳ.利用大规模集成电路技术把计算机的运算部件和控制部件做在一块集成电路芯片上，这样的一块芯片称为单片机", "A": "Ⅰ、Ⅲ", "B": "Ⅱ、Ⅳ", "C": "Ⅱ", "D": "Ⅰ、Ⅲ、Ⅳ", "Answer": "C", "Explanation": "会计电算化属于计算机数据处理方面的应用，Ⅰ错误。I显然正确。计算机“运算速度”指标的含义是每秒能执行多少条指令，重错误。这样集成的芯片称为CPU，I错误。"}
{"ID": 4667, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在补码表示法中，若一个字长为8位的二进制数，其表示的最大正数是多少？()", "A": "127", "B": "128", "C": "255", "D": "256", "Answer": "A"}
{"ID": 4668, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在浮点数的加减运算中，什么是“对阶”？()", "A": "调整尾数的大小", "B": "调整指数使之相同", "C": "计算尾数的和", "D": "调整指数的范围", "Answer": "B"}
{"ID": 4669, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "8位原码能表示的不同数据有 ( )个", "A": 15, "B": 16, "C": 255, "D": 256, "Answer": "C"}
{"ID": 4670, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若十进制数为 137.5，则其八进制数为( )", "A": 89.8, "B": 211.4, "C": 211.5, "D": 1011111.101, "Answer": "B", "Explanation": "十进制数转换成八进制数，整数部分采用除基取余法:将整数除以8，所得余数即为转换后的八进制数的个位数码，再将商除以8，余数为八进制数十位上的数码，如此反复进行直到商将小数乘以8，所得积的整数部分即为八进制数的分位上小数部分采用乘基取整法，直到小数为零。得到的八进制数为211.40"}
{"ID": 4671, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "算术逻辑单元 (ALU)的功能一般包括什么？", "A": "算术运算", "B": "逻辑运算", "C": "算术运算和逻辑运算", "D": "加法运算", "Answer": "C", "Explanation": "ALU能够进行算术运算和逻辑运算。"}
{"ID": 4672, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "长度相同、格式相同的两种浮点数，假设前者基数大，后者基数小，其他规定均相同，则它们可表示的数的范围和精度为 ( ).", "A": "两者可表示的数的范围和精度相同", "B": "前者可表示的数的范围大但精度低", "C": "后者可表示的数的范围大且精度高", "D": "前者可表示的数的范围大且精度高", "Answer": "B", "Explanation": "基数越大，范围越大，但精度变低(数变稀疏)。注意:基数越大，在运算中尾数右移的可能性越小，运算的精成损失越小。由于基数大时发生因对阶或尾教溢出需右移及规格化需左移的次数显著减少，因此运算速度可以提高。基数越大，可表示的数的范围越大。"}
{"ID": 4673, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列说法中，正确的是 ( )。I.在计算机中，表示的数有时会发生溢出，根本原因是计算机的字长有限 II.8421码就是二进制数 III.一个正数的补码和这个数的原码表示一样，而正数的反码是原码各位取反 IV、设有两个正的规格化浮点数N1=2^m*M1和N2=2^n*M2，若m>n，则有N1>N2", "A": "I、II", "B": "II、III", "C": "I、III、IV", "D": "I、IV", "Answer": "D", "Explanation": "I正确，8421 码是十进制数的编码，II 错误，正数的原码、反码和补码都相同，III 错误因为是规格化正浮点数，所以 M1、M2 均为 0.1xx 形式有 N1 阶码至少比 N2大 1，所以N1>N2，IV正确。"}
{"ID": 4674, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设浮点数的基数为4，尾数用原码表示，则以下 ( )是规格化的数。", "A": "1.001101", "B": "0.001101", "C": "1.011011", "D": "0.00001", "Answer": "A", "Explanation": "原码表示的规格化小数是小数点后2 位(基数为 4，用2位表示不全为0的小数"}
{"ID": 4675, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在虚拟存储器系统中，页式虚拟存储器的主要优点是什么？()", "A": "页面长度固定，页表简单，调入方便", "B": "段的分界与程序的自然分界相对应", "C": "可以按段实现共享和保护", "D": "地址变换过程中不需要查表", "Answer": "A"}
{"ID": 4676, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "段页式虚拟存储器中，虚地址的组成部分不包括哪一项？()", "A": "段号", "B": "页号", "C": "页内地址", "D": "物理地址", "Answer": "D"}
{"ID": 4677, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "存储器的存取周期是指 ( )。", "A": "存储器的读出时间", "B": "存储器的写入时间", "C": "存储器进行连续读或写操作所允许的最短时间间隔", "D": "存储器进行一次读或写操作所需的平均时间", "Answer": "C"}
{"ID": 4678, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机的存储系统是指 ( )。", "A": "RAM", "B": "ROM", "C": "主存储器", "D": "Cache、主存储器和外存储器", "Answer": "D"}
{"ID": 4679, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列说法中，正确的是 ( )。", "A": "半导体 RAM 信息可读可写，且断电后仍能保持记忆", "B": "DRAM是易失性RAM，而SRAM中的存储信息是不易失的", "C": "半导体 RAM 是易失性 RAM，但只要电源不断电，所存信息是不丢失的", "D": "半导体 RAM 是非易失性 RAM", "Answer": "C"}
{"ID": 4680, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列关于固态硬盘 (SSD)的说法中，错误的是 ( )。", "A": "基于闪存的存储技术", "B": "随机读写性能明显高于磁盘", "C": "随机写比较慢", "D": "不易磨损", "Answer": "D"}
{"ID": 4681, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个四体并行低位交叉存储器，每个模块的容量是 64Kx32 位，存取周期为 200ns，总线周期为 50ns，在下述说法中，( )是正确的", "A": "在200ns内，存储器能向CPU提供256位二进制信息", "B": "在200ns内，存储器能向CPU提供128位二进制信息", "C": "在50ns内，每个模块能向CPU提供32位二进制信息", "D": "以上都不对", "Answer": "B", "Explanation": "低位交叉存储器可在一个存取周期内连续访问4个模块，每个模块容量为64Kx32位，总共可提供128位二进制信息。"}
{"ID": 4682, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "关于Cache的更新策略，下列说法中正确的是( )。", "A": "读操作时，全写法和回写法在命中时应用", "B": "写操作时，回写法和写分配法在命中时应用", "C": "读操作时，全写法和写分配法在失效时应用", "D": "写操作时，写分配法、非写分配法在失效时应用", "Answer": "D", "Explanation": "写不命中时，才会加载块到Cache，因此写分配法和非写分配法在失效时应用。"}
{"ID": 4683, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "有一主存-Cache层次的存储器，其主存容量为1MB，Cache容量为16KB，每块有8个字，每字32位，采用直接地址映像方式，Cache起始字块为第0块，若主存地址为35301H，且CPU访问Cache命中，则在Cache的第( )字块中", "A": 152, "B": 153, "C": 154, "D": 151, "Answer": "A", "Explanation": "直接映像方式下，Cache起始字块为0，所以Cache的第0字块对应主存的第152字块。"}
{"ID": 4684, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "直接寻址的主要缺点是什么？()", "A": "指令执行时间长", "B": "操作数地址不易修改", "C": "需要多次访问主存", "D": "操作数的范围受限", "Answer": "B"}
{"ID": 4685, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "零地址运算类指令通常使用在哪种类型的计算机中？()", "A": "超级计算机", "B": "通用计算机", "C": "堆栈计算机", "D": "个人计算机", "Answer": "C"}
{"ID": 4686, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设P为调用过程，0为被调用过程，程序在32位x86 处理器上执行，以下是C语言程序中过程调用所涉及的操作:1.过程O保存P的现场，并为非静态局部变量分配空间2.过程P将实参存放到 O能访问到的地方3.过程 P将返回地址存放到特定处，并转跳到 O执行4.过程0取出返回地址，并转跳回到过程P执行5.过程O恢复P的现场，并释放局部变量所占空间6.执行过程O的函数体 过程调用的正确执行步骤是 ( )。", "A": "2-3-4-1-5-6", "B": "2-3-1-4-6-5", "C": "2-3-1-6-5-4", "D": "2-3-1-5-6-4", "Answer": "C", "Explanation": "过程调用的具体过程如下：过程P将实参存放到O能访问到的地方；过程P将返回地址存放到特定处，并转跳到O执行；过程O保存P的现场，并为非静态局部变量分配空间；执行过程O的函数体；过程O恢复P的现场，并释放局部变量所占空间；过程O取出返回地址，并转跳回到过程P执行。"}
{"ID": 4687, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下哪一项不是微指令的地址形成方式？()", "A": "直接由微指令的下地址字段指出", "B": "根据机器指令的操作码形成", "C": "根据程序计数器的值形成", "D": "随机产生微指令的地址", "Answer": "D"}
{"ID": 4688, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在流水线技术中，“数据相关”主要指的是什么？()", "A": "由于指令顺序错误导致的相关", "B": "由于资源分配不当导致的相关", "C": "指令之间因为数据依赖而产生的冲突", "D": "由于指令执行错误导致的相关", "Answer": "C"}
{"ID": 4689, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "CPU中的控制器的主要功能是什么？()", "A": "存储程序的指令", "B": "控制数据传输", "C": "存储程序状态信息", "D": "从主存中取出一条指令并指出下一条指令的位置", "Answer": "D"}
{"ID": 4690, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "控制器的全部功能是 ( )。", "A": "产生时序信号", "B": "从主存中取出指今并完成指令操作码译码", "C": "从主存中取出指令、分析指令并产生有关的操作控制信号", "D": "都不对", "Answer": "C"}
{"ID": 4691, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "指令周期由一个到几个机器周期组成，第一个机器周期是( ).", "A": "从主存中取出指令字", "B": "从主存中取出指令操作码", "C": "从主存中取出指令地址码", "D": "从主存中取出指令的地址", "Answer": "A"}
{"ID": 4692, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下叙述中，错误的是 ( )", "A": "取指操作是控制器固有的功能，不需要在操作码控制下完成", "B": "所有指令的取指操作是相同的", "C": "在指令长度相同的情况下，所有指令的取指操作是相同的", "D": "中断周期是在指今执行完成后出现的", "Answer": "B", "Explanation": "不同长度的指令，其取指操作可能是不同的。例如，双字指令、三字指令与单字指令的取指操作是不同的。"}
{"ID": 4693, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在总线仲裁中，采用哪种方式将所有的总线请求集中起来，利用一个特定的裁决算法进行裁决？()", "A": "离散仲裁方式", "B": "链式查询方式", "C": "单一查询", "D": "独立请求方式", "Answer": "B"}
{"ID": 4694, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准最早出现的微型计算机的系统总线标准，应用在IBM的AT机上？()", "A": "EISA总线", "B": "VESA总线", "C": "PCI总线", "D": "ISA总线", "Answer": "D"}
{"ID": 4695, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在总线操作的四个阶段中，哪个阶段主模块的有关信息均从系统总线上撤除，让出总线使用权？()", "A": "寻址阶段", "B": "传输阶段", "C": "结束阶段", "D": "申请分配阶段", "Answer": "C"}
{"ID": 4696, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列不属于计算机局部总线的是( )", "A": "VESA", "B": "PCI", "C": "AGP", "D": "ISA", "Answer": "D"}
{"ID": 4697, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下各项中，()是同步传输的特点", "A": "需要应答信号", "B": "各部件的存取时间比较接近", "C": "总线长度较长", "D": "总线周期长度可变", "Answer": "B"}
{"ID": 4698, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在一个 16 位的总线系统中，若时钟频率为 100MHZ，总线周期为 5 个时钟周期传输一个字，则总线带宽是( )。", "A": "4MB/s", "B": "40MB/s", "C": "16MB/S", "D": "64MB/s", "Answer": "B", "Explanation": "计算得到总线带宽为 40MB/s。"}
{"ID": 4699, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在多重中断情况下，当CPU正在处理一个中断请求，而又有更高优先级的中断请求到达时，会发生什么情况？()", "A": "CPU将忽略更高优先级的中断请求", "B": "CPU会暂时中止当前中断请求处理，处理更高优先级的中断", "C": "更高优先级的中断请求会被丢弃", "D": "CPU会将更高优先级的中断请求排队等待处理", "Answer": "B"}
{"ID": 4700, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在微型机系统中，I/O 设备通过( )与主板的系统总线相连接。", "A": "DMA 控制器", "B": "设备控制器", "C": "中断控制器", "D": "I/O 端口", "Answer": "B"}
{"ID": 4701, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "I/O 的编址方式采用统一编址方式时，进行输入/输出的操作的指令是( )", "A": "控制指令", "B": "访存指令", "C": "输入/输出指令", "D": "都不对", "Answer": "B"}
{"ID": 4702, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "能产生 DMA 请求的总线部件是 ( )。Ⅰ.高速外设 Ⅱ.需要与主机批量交换数据的外设 Ⅲ.具有DMA接口的设备", "A": "仅Ⅰ", "B": "仅Ⅲ", "C": "Ⅰ，Ⅲ", "D": "Ⅱ，Ⅲ", "Answer": "B"}
{"ID": 4703, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "当有中断源发出请求时，CPU 可执行相应的中断服务程序，可以提出中断的有 ( )。I，外部事件II.CacheIII，虚拟存储器失效IV.浮点数运算下溢V，浮点数运算上溢", "A": "I、III和IV", "B": "I和V", "C": "I、II和V", "D": "I、III和V", "Answer": "D", "Explanation": "外部事件如按 Esc 键以退出运行的程序等，属于外中断，I正确。Cache 完全是由硬件实现的，不会涉及中断层面，II 错误。虚拟存储器失效如缺页等，会发出缺页中断，属于内中断，III正确。浮点数运算下溢，直接当作机器零处理，而不会引发中断，IV 错误。浮点数上溢，表示超过了浮点数的表示范围，属于内中断，V正确。因此选D。"}
{"ID": 4704, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在 DMA 方式下，数据从内存传送到外设经过的路径是 ( )。", "A": "内存→数据总线→数据通路→外设", "B": "内存→数据总线→DMAC→外设", "C": "内存→数据通路→数据总线→外设", "D": "内存→CP→外设", "Answer": "B", "Explanation": "在 DMA 方式下，数据从内存传送到外设经过的路径是内存一数据总线一DMAC一外设。"}
{"ID": 4705, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "冯·诺依曼机的基本特点是多指令流单数据流。", "Answer": false}
{"ID": 4706, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个字长为4位的二进制原码小数可以表示的范围是从-8到+7。", "Answer": false}
{"ID": 4707, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在循环冗余校验码（CRC）中，校验码为4位时，用于除法的生成多项式的次数是4。", "Answer": true}
{"ID": 4708, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "关于模4补码，每个模4补码存储时只需一个符号位。", "Answer": true, "Explanation": "模4补码具有模2补码的全部优点且更易检查加减运算中的溢出问题。需要注意的是，存储模4补码仅需一个符号位，因为任何一个正确的数值，模4补码的两个符号位总是相同的。"}
{"ID": 4709, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "多体并行存储器的特点包括每个模块有独立的读写控制电路。", "Answer": false}
{"ID": 4710, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "基址寻址方式的主要用途是处理数组问题。", "Answer": false}
{"ID": 4711, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CPU执行指令的过程中，指令的地址由程序计数器(PC)给出。", "Answer": true}
{"ID": 4712, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "堆栈寻址方式中，进栈操作的动作是(A)→M_{SP},(SP)-1→SP，那么出栈操作的动作应为(SP)+1→SP,(M_{SP})→A。", "Answer": true, "Explanation": "进、出堆栈时对栈顶指针的操作顺序是不同的，进栈时是先压入数据(A)→Msp，后修改指针"}
{"ID": 4713, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在超标量流水线技术中，每个时钟周期内可以并发执行4条独立指令。", "Answer": false}
{"ID": 4714, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "CPU的读/写控制信号的作用是控制流入、流出存储器信息的方向。", "Answer": false}
{"ID": 4715, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "流水 CPU 是一种非常经济而实用的时间并行技术。", "Answer": true, "Explanation": "流水 CPU 利用的是时间并行性，不是空间并行性，因此 A 错误。RISC 机器通常采用流水线技术，但不是必然的，因此 B 错误。流水 CPU 和多媒体 CPU 没有必然联系，因此 C 错误。流水 CPU 是一种经济而实用的时间并行技术，因此 D 正确。"}
{"ID": 4716, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "硬盘中的柱面数表示硬盘每一条磁道上有多少个扇区。()", "Answer": false}
{"ID": 4717, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CPU中，跟踪下一条要执行的指令的地址的寄存器是 ( ).", "Answer": "PC"}
{"ID": 4718, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "地址总线A。(高位)~As(低位)，用4Kx4位的存储芯片组成16KB存储器，则产生片选信号的译码器的输入地址线应该是 ( )。", "Answer": "A2A3", "Explanation": "4Kx4位的存储芯片共有16片，每片16个单元，因此需要高两位地址线A2A3来产生片选信号。"}
{"ID": 4719, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "为了缩短指今中某个地址段的位数，有效的方法是采取 ()", "Answer": "寄存器寻址"}
{"ID": 4720, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "按照 Flynn 提出的计算机系统分类方法，多处理机属于 ( )。", "Answer": "MIMD"}
{"ID": 4721, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准广泛应用于笔记本电脑中的一种接口标准，可即插即用？()", "Answer": "PCMCIA"}
{"ID": 4722, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在I/O接口中，哪个部分用于实现主机和外设的通信联络控制？()", "Answer": "控制端口"}
{"ID": 4723, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "指令和数据都存于存储器中，CPU如何区分它们?", "Answer": "通常完成一条指令可分为取指阶段和执行阶段。在取指阶段通过访问存储器可将指令取出:在执行阶段通过访问存储器可以将操作数取出。因此，虽然指令和数据都以二进制代码形式存放在存储器中，但 CPU 可根据指周期的不同阶段判断从存储器取出的二进制代码是指还是数据。"}
{"ID": 4724, "Split": "Valid", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设某机器有80条指令，平均每条指令由4条微指令组成，其中有一条取指微指令是所有指令公用的。已知微指令长度为32位，请估算控制存储器CM容量.", "Answer": "总的微指令条数=(4-1)×80 +1=241条，每条微指令占一个控制存储器单元，控制存储器CM的容量为2的n次幂，而241刚好小于256，所以CM的容量=256×32位=1KB。"}
{"ID": 4725, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "DNS属于哪一层协议？", "A": "数据链路层", "B": "网络层", "C": "传输层", "D": "应用层", "Answer": "D"}
{"ID": 4726, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP数据报的标志字段中，DF和MF分别表示什么？", "A": "DF: 禁止分片，MF: 不是最后一个分片", "B": "DF: 禁止分片，MF: 最后一个分片", "C": "DF: 不是最后一个分片，MF: 允许分片", "D": "DF: 最后一个分片，MF: 不允许分片", "Answer": "A"}
{"ID": 4727, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机网络可分为通信子网和资源子网。下列属于通信子网的是( )I. 网桥 II. 交换机 III. 计算机软件 IV. 路由器", "A": "I、II、IV", "B": "II、III、IV", "C": "I、III、IV", "D": "I、II、III", "Answer": "A"}
{"ID": 4728, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "上下邻层实体之间的接口称为服务访问点，应用层的服务访问点也称( )。", "A": "用户界面", "B": "网卡接口", "C": "IP地址", "D": "MAC 地址", "Answer": "A"}
{"ID": 4729, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在计算机网络中，功能特性描述了什么？()", "A": "电气特性", "B": "机械特性", "C": "特定电平的意义", "D": "过程和时序", "Answer": "C"}
{"ID": 4730, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "集线器与交换机的主要区别是？()", "A": "半双工通信", "B": "具备信号的定向传送能力", "C": "能否互联物理层不同的网段", "D": "转发速度", "Answer": "C"}
{"ID": 4731, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "分组交换中的存储转发是指？ ()", "A": "先存储整个报文，再发送", "B": "边存储边发送", "C": "先发送头部，再发送数据", "D": "不存储直接发送", "Answer": "B"}
{"ID": 4732, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "用 PCM 对语音进行数字量化，如果将声音分为 128 个量化级，采样频率为 8000 次/秒，那么一路话音需要的数据传输速率为 ( )", "A": "56kb/s", "B": "64kb/s", "C": "128kb/s", "D": "1024kb/s", "Answer": "A", "Explanation": "声音信号需要 128 个量化级，那么每采样一次需要 log₂ 128 = 7 bit 来表示。采样频率为 8000 次/秒，那么一路话音需要的数据传输速率为 8000 × 7 = 56kb/s。"}
{"ID": 4733, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于虚电路的说法中，( )是正确的。", "A": "虚电路与电路交换没有实质性的不同", "B": "在通信的两个站点之间只可以建立一条虚电路", "C": "虚电路有连接建立、数据传输和连接拆除 3 个阶段", "D": "在虚电路上传送的同一个会话的数据分组可以走不同的路径", "Answer": "C", "Explanation": "虚电路和电路交换在机制和实现上有很大区别。电路交换是为整个会话保留一个专用的通信路径，而虚电路是在分组交换网络中模拟出一个逻辑上的通信路径，因此A不正确。在分组交换网络中，可以在两个站点之间建立多条虚电路，因此B不正确。在虚电路中，所有分组都会遵循相同的路径，从而保证有序性和可靠性，因此D不正确。"}
{"ID": 4734, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在滑动窗口机制中，GBN（后退N帧协议）采用的是哪种确认方式？ ()", "A": "累计确认", "B": "逐一确认", "C": "随机确认", "D": "选择确认", "Answer": "A"}
{"ID": 4735, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "MAC地址的长度是多少位？()", "A": "32位", "B": "48位", "C": "64位", "D": "128位", "Answer": "B"}
{"ID": 4736, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在 CSMA/CD 协议的定义中，“争议期”指的是( )", "A": " 信号在最远两个端点之间往返传输的时间", "B": " 信号从线路一端传输到另一端的时间", "C": " 从发送开始到收到应答的时间", "D": " 从发送完毕到收到应答的时间", "Answer": "A"}
{"ID": 4737, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "为实现透明传输(注:默认为异步线路)，PPP 使用的填充方法是( )", "A": "位填充", "B": "字符填充", "C": "对字符数据使用字符填充，对非字符数据使用位填充", "D": "对字符数据使用位填充，对非字符数据使用字符填充", "Answer": "B"}
{"ID": 4738, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列关于 PPP 的说法中，错误的是 ( )", "A": "具有差错控制能力", "B": "仅支持 IP 协议", "C": "支持动态分配地址", "D": "支持身份验证", "Answer": "B"}
{"ID": 4739, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列有关数据链路层差错控制的叙述中，错误的是( )", "A": "数据链路层只能提供差错检测，而不提供对差错的纠正", "B": "奇偶校验码只能检测出错误而无法对其进行修正，也无法检测出双位错误", "C": "CRC 校验码可以检测出所有的单比特错误", "D": "汉明码可以纠正一位差错", "Answer": "A", "Explanation": "链路层的差错控制有两种基本策略:检错编码和纠错编码。常见的纠错码有汉明码，它可以纠正一位差错。"}
{"ID": 4740, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "字符S的ASCII 编码从低到高依次为 1100101，采用奇校验，在下述收到的传输后字符中，错误( )不能检测。", "A": 11000011, "B": 11001010, "C": 11001100, "D": 11010011, "Answer": "D", "Explanation": "既然采用奇校验，那么传输的数据中1 的个数是数个则可测出错误，1的个数是奇数个，则检测不出错误，因此选 D。"}
{"ID": 4741, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "根据 CSMA/CD 协议的工作原理，需要提高最短帧长的是 ( )。", "A": " 网络传输速率不变，冲突域的最大距离变短", "B": " 冲突域的最大距离不变，网络传输速率提高", "C": " 上层协议使用 TCP 的概率增加", "D": " 在冲突域不变的情况下减少线路中的中继器数量", "Answer": "B", "Explanation": "根据 CSMA/CD 协议的工作原理，提高网络传输速率会使信号在冲突域内存在时间更短，因此需要增加帧的最小长度，以确保冲突信号能够被足够多的站点检测到。"}
{"ID": 4742, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在一个以太网中，有A、B、C、D四台主机，若A向B发送数据，则（)", "A": "只有 B 可以接收到数据", "B": "四台主机都能接收到数据", "C": "只有 B、C、D 可以接收到数据", "D": "四台主机都不能接收到数据", "Answer": "B", "Explanation": "在以太网中，如果一个节点要发送数据，它将以“广播”方式把数据通过作为公共传输介质的总线发送出去，连在总线上的所有节点(包括发送节点)都能“收听”到发送节点发送的数据信号。"}
{"ID": 4743, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP协议的版本字段占几位？()", "A": 2, "B": 4, "C": 8, "D": 16, "Answer": "B"}
{"ID": 4744, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "NAT工作原理中，从内网出去的IP数据报会发生什么变化？()", "A": "源IP地址替换为公共IP地址", "B": "目的IP地址替换为公共IP地址", "C": "源MAC地址替换为公共MAC地址", "D": "目的MAC地址替换为公共MAC地址", "Answer": "A"}
{"ID": 4745, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下一代因特网核心协议 IP6 的地址长度是( )", "A": "32bit", "B": "48bit", "C": "64bit", "D": "128bit", "Answer": "D"}
{"ID": 4746, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "BGP交换的网络可达性信息是 ( )", "A": "到达某个网络所经过的路径", "B": "到达某个网络的下一跳路由器", "C": "到达某个网络的链路状态摘要信息", "D": "到达某个网络的最短距离及下一跳路由器", "Answer": "A"}
{"ID": 4747, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设有4条路由 172.18.129.0/24、172.18.130.0/24、172.18.132.0/24 和 172.18.133.0/ 24，如果进行路由聚合，那么能覆盖这4条路由的地址是( )", "A": "172.18.128.0/21", "B": "172.18.128.0/22", "C": "172.18.130.0/22", "D": "172.18.132.0/23", "Answer": "A", "Explanation": "路由聚合的原则是在聚合后的网络掩码中，1的数量应该等于前4条路由中最长的掩码的1的数量加上剩下的一位，而聚合后的网络的第3个字节应该是前4条路由中最长的掩码的第3个字节。因此，答案为172.18.128.0/21。"}
{"ID": 4748, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于 IP6 地址1A22:120D:0000:0000:72A2:0000:0000:00C0的表示中，错误的是( )", "A": "1A22:120D::72A2:0000:0000:00C0", "B": "1A22:120D::72A2:0:0:C0", "C": "1A22::120D::72A2::00C0", "D": "1A22:120D:0:0:72A2::C0", "Answer": "C", "Explanation": "使用零压缩法时，双冒号“::”在一个地址中只能出现一次。也就是说，当有多处不相邻的 0 时，只能用一个双冒号“::”代表这些 0。"}
{"ID": 4749, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对路由选择协议的一个要求是必须能够快速收敛，所谓“路由收敛”是指( )", "A": "路由器能把分组发送到预定的目标", "B": "路由器处理分组的速度足够快", "C": "网络设备的路由表与网络拓扑结构保持一致", "D": "能把多个子网聚合成一个超网", "Answer": "C", "Explanation": "路由收敛是指网络设备的路由表与网络拓扑结构保持一致，即在路由环境发生变化后，各路由器调整路由表以适应网络拓扑结构的变化，达到稳定状态。"}
{"ID": 4750, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "RIP、OSPF 协议、BGP 的路由选择过程分别使用 ()", "A": "距离向量协议、链路状态协议、路径向量协议", "B": "距离向量协议、路径向量协议、链路状态协议", "C": "距离向量协议、链路状态协议、路径向量协议", "D": "距离向量协议、链路状态协议、路径向量协议", "Answer": "D", "Explanation": "RIP 是一种分布式的基于距离向量的路由选择协议，它使用跳数来度量距离。OSPF 协议使用分布式的链路状态协议，通过与相路器频繁交链路状态信息，来建立全网的拓扑结构图，然后使用 Dijkstra 算法计算从自己到各目的网络的最优路径。由于 BGP 仅力求寻找一条能够到达目的网络且较好的路由(不能兜圈子)，而并非寻找一条最佳路由，因此它采用的是路径向量路由选择协议。在 BGP 中，每个自治系统选出一个 BGP 发言人，这些发言人通过相互交换自己的路径向量(即网络可达性信息)后，就可找出到达各自治系统的较好路由。"}
{"ID": 4751, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个局域网与在远处的另一个局域网互联，则需要用到()", "A": "物理通信介质和集线器", "B": "网间连接器和集线器", "C": "路由器和广域网技术", "D": "广域网技术", "Answer": "C", "Explanation": "局域网的互联需要路由器作为连接设备，同时是远程的局域网，因此要用到广域网技术。"}
{"ID": 4752, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在TCP协议中，序列号的作用是？()", "A": "保证数据的完整性", "B": "保证数据的有序传输", "C": "保证数据的安全性", "D": "保证数据的可靠传输", "Answer": "B"}
{"ID": 4753, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "UDP协议的优势之一是？()", "A": "可靠传输", "B": "有序传输", "C": "低延迟", "D": "大带宽", "Answer": "C"}
{"ID": 4754, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "传输层的多路复用是指？ ()", "A": "多个应用程序使用同一传输层协议", "B": "一个应用程序使用多个传输层协议", "C": "多个传输层协议使用同一应用程序", "D": "一个传输层协议使用多个应用程序", "Answer": "A"}
{"ID": 4755, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在TCP 协议中，发送方的窗口大小取决于()", "A": "仅接收方允许的窗口", "B": "接收方允许的窗口和发送方允许的窗口", "C": "接收方允许的窗口和拥塞窗口", "D": "发送方允许的窗口和拥塞窗口", "Answer": "C", "Explanation": "TCP 让每个发送方仅发送正确数量的数据，保持网络资源被利用但又不会过载。为了避免网络拥塞和接收方缓冲区溢出，TCP 发送方在任一时刻可以发送的最大数据流是接收方允许的窗口和拥塞窗口中的最小值。"}
{"ID": 4756, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "TCP中滑动窗口的值设置太大，对主机的影响是( )。", "A": "由于传送的数据过多而使路由器变得拥挤，主机可能丢失分组", "B": "产生过多的ACK", "C": "由于接收的数据多，而使主机的工作速度加快", "D": "由于接收的数据多，而使主机的工作速度变慢", "Answer": "A", "Explanation": "TCP 使用滑动窗口机制来进行流控制，其窗口尺寸的设很重要，如果滑动窗口值设置得太小，那么会产生过多的ACK(因为窗口大可以累积确认，因此会有更少的ACK):如果设置得太大，那么又会由于传送的数据过多而使路由器变得拥挤，导致主机可能丢失分组。"}
{"ID": 4757, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "TCP连接的释放阶段是通过哪几次挥手完成的？()", "A": "一次挥手", "B": "两次挥手", "C": "三次挥手", "D": "四次挥手", "Answer": "D"}
{"ID": 4758, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "万维网上的每个页面都有一个唯一的地址，这些地址统称为 ( )。", "A": "IP地址", "B": "域名地址", "C": "统一资源定位符", "D": "WWW地址", "Answer": "C"}
{"ID": 4759, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "服务程序在 Windows 环境下工作，并且允许该服务器程序的计算机也作为客户访问其他计算机上提供的服务。那么，这种网络应用模型属于 ( )。", "A": "主从式", "B": "对等式", "C": "客户/服务器模型", "D": "集中式", "Answer": "B", "Explanation": "在P2P 模型中，各用户计算机共享资源，从而提供比单个用户所能提供的多得多的资源。这里，各个计算机没有固定的客户和服务器划分，任意一对计算机称为对等方。"}
{"ID": 4760, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "OSI参考模型中的数据链路层不具有拥塞控制功能。", "Answer": true}
{"ID": 4761, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "波特率等于每秒传输的字节数。", "Answer": false}
{"ID": 4762, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "MTU的路径值是由数据链路层的数据帧长度决定的。", "Answer": true}
{"ID": 4763, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "帧的CRC校验用于检测帧的错误。", "Answer": true}
{"ID": 4764, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "OSPF协议支持广播路由。", "Answer": false}
{"ID": 4765, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "IPv4分组头的长度是可变的。", "Answer": true}
{"ID": 4766, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP 规定每个C类网络最多可以有254台主机或路由器。", "Answer": true}
{"ID": 4767, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "路由器的路由选择部分仅包括路由选择处理机。", "Answer": false}
{"ID": 4768, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "UDP数据报中的长度字段不记录数据的长度。", "Answer": false}
{"ID": 4769, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在TCP协议中，发送方的窗口大小取决于发送方允许的窗口和拥塞窗口。", "Answer": false, "Explanation": "TCP 让每个发送方仅发送正确数量的数据，保持网络资源被利用但又不会过载。为了避免网络拥塞和接收方缓冲区溢出，TCP 发送方在任一时刻可以发送的最大数据流是接收方允许的窗口和拥塞窗口中的最小值。"}
{"ID": 4770, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "三次握手的第一次是由双方同时发起的。", "Answer": false}
{"ID": 4771, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "拥塞控制与流量控制的区别是拥塞控制考虑点对点通信量。", "Answer": false}
{"ID": 4772, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "DNS解决的问题是IP地址记忆问题。", "Answer": true}
{"ID": 4773, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "HTTP请求报文方式中，用于请求指定页面信息的是GET。", "Answer": true}
{"ID": 4774, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "中继器必须确保两端的网段使用相同的什么？ ()", "Answer": "物理层"}
{"ID": 4775, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于某带宽为 4000Hz 的低通信道，采用 16 种不同的物理状态来表示数据。按照奈奎斯特定理，信道的最大传输速率是 ( )。", "Answer": "32kb/s", "Explanation": "根据奈奎斯特定理，本题中 W = 4000Hz，最大码元传输速率 = 2W = 8000 Baud，16 种不同的物理状态可表示 16 = 4 比特数据，所以信道的最大传输速率 8000 × 4 = 32kb/s。"}
{"ID": 4776, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在数据链路层，广播是通过什么方式实现的？()", "Answer": "MAC地址"}
{"ID": 4777, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "数据链路层采用了后退 N 的(GBN)协议，如果发送窗口的大小是 32，那么至少需要()位的序列号才能保证协议不出错。", "Answer": "6", "Explanation": "在后退 N 的协议中，序列号个数不小于 MAX SEQ+1，题中发送窗口的大小是 32，那么序列号个数最少应该是 33 个。所以最少需要 6 位的序列号才能达到要求。"}
{"ID": 4778, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "路由器在能够开始向输出链路传输分组的第一位之前，必须先接收到整个分组，这种机制称为( )", "Answer": "存储转发机制"}
{"ID": 4779, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在TCP中，什么机制用于防止发送方速度过快导致网络拥塞？()", "Answer": "流量控制"}
{"ID": 4780, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "不能用于用户从邮件服务器接收电子邮件的协议是( )。", "Answer": "SMTP"}
{"ID": 4781, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在下列情况下，计算传送100KB文件所需要的总时间，即从开始传送时起直到文件的最后一位到达目的地为止的时间。假定往返时间RTT为100ms，一个分组是1KB(即1024B)的数据，在开始传送整个文件数据之前进行的起始握手过程需要2RTT的时间 1)带宽是1.5Mb/s，数据分组可连续发送。 2)带宽是1.5Mb/s，但在发送完每个数据分组后，必须等待一个RTT(等待来自接收方的确认)才能发送下一个数据分组。 3)假设带宽是无限大的值，即我们取发送时间为0，并在等待每个RTT后可以发送多达20个分组。", "Answer": "提示:如果题目没有说考虑排队时延，那么处理时延也无须考虑。1)由提示可知，总时延=发送时延+传播时延+握手时延，其中握手时延是题目增加的。两个起始的RTT(握手):100x2=200ms，传播时间:RTT/2=100/2=50ms，1KB=8bitx1024=8192bit，发送时间:1000KB/(1.5Mb/s)=8192000bit/(1500000b/s)=5.46s，所以总时间等于0.2+5.46+0.05=5.71s。2)在上一小题答案的基础上再增加 999个RTT，总时间为 5.71+999x0.1=105.61s。注意:1)中的发送时间是所有分组的发送时间之和。3)由于发送时延为0，只需计算传播时延。由于每个分组为1KB，所以大小为1000KB的文件应分成1000KB/1KB=1000个分组。由于每个RTT后可发送20个分组，所以共需1000/20=50次，50-1=49个RTT，最后一个分组到达目的地仅需0.5RTT(注意，在本次等待的 RTT 中一定包含了上次传输的传输时延，所以不要认为还需要另外计算传输时延)，总时间为2xRTT(握手时间)+49RTT+0.SRTT=51.5RTT=0.1x51.5=5.15s。"}
{"ID": 4782, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "以太网使用的 CSMA/CD 协议是以争用方式接个共享信道的。与传统的时分复用(TDM)相比，其优缺点如何?", "Answer": "CSMA/CD 是一种动态的介质随机接入共享信道方式，而 TDM 是一种静态的信道划分方式。所以从对信道的利用率来说，CSMA/CD 用户共享信道，更灵活，信道利用率更高。TDM 不同，它为用户按时隙固定分配信道，用户没有数据传送时，信道在用户时隙就浪费了。因为 CSMA/CD 让用户共享信道，因此同时有多个用户需要使用信道时会发生碰撞，从而降低信道的利用率；而在 TDM 中，用户在分配的时隙中不会与其他用户发生冲突。对局域网来说连入信道的是相距较近的用户，因此通常信道带宽较大。使用 TDM 方式时，用户在自己的时隙中没有发送的情况更多，不利于信道的充分利用。对于计算机通信来讲，突发式的数据更不利于使用 TDM 方式。"}
{"ID": 4783, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在某个卫星信道上，发送端从一个方向发送长度为512B的帧，且发送端的数据发送速率为 64kb/s，接收端在另一端返回一个很短的确认帧。设卫星信道端到端的单向传播延时为 270ms，对于发送窗口尺寸分别为1、7、17和 117 的情况，信道的吞吐率分别为多少?", "Answer": "数据帧的长度为512B，即512x8bit=4.096kbit，一个数据帧的发送时延为 4.096/64=0.064s。因此一个发送周期时间为0.064+2x0.27=0.604s。因此当窗口尺寸为1时，信道的吞吐率为1x4.096/0.604=6.8kb/s: 当窗口尺寸为7时，信道的吞吐率为7x4.096/0.604=47.5kb/s。 由于一个发送周期为 0.604s，发送一个帧的发送延时是0.064s，因此当发送窗口尺寸大于0.604/0.064，即大于等于 10 时，发送窗口就能保证持续发送。因此当发送窗口大小为 17和 117时，信道的吞吐率达到完全速率，与发送端的数据发送速率相等，即 64kb/s。"}
{"ID": 4784, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "若构造一个 CSMA/CD 总线网，速率为 100Mb/s，信号在电缆中的传播速率为 2x10^5 m/s，数据帧的最小长度为 125 字节。试求总线电缆的最大长度(假设总线电缆中无中继器)。", "Answer": "设总线电缆的长度为L，则(125x8)/(100*10^6)=2L/(2*10^8)，得L=1000m。"}
{"ID": 4785, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "设目的地址为 201.230.34.56，子网掩码为 255.255.240.0，试求子网地址。", "Answer": "通过将目的地址和子网掩码换算成二进制，并进行逐位与就可得到子网地址。但是通常在目的地址中，子网掩码为 255 所对应的部分在子网地址中不变，子网掩码为0所对应的部分在子网地址中为0，其他部分按二进制逐位“与”求得(也可直接截取)。本题中，子网掩码的前两部分为 255.255，因此子网地址的前两部分为201.230；子网掩码最后一部分为0，因此子网地址的最后一部分为0；子网地址的第三部分为240，进行换算有 240=(11110000)2，34=(00100010)2，逐位相“与”得(00100000)2=32。因此子网地址为 201.230.32.0。"}
{"ID": 4786, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "主机A基于 TCP 向主机B连续发送 3 个 TCP 报文段。第1个报文段的序号为90，第208个报文段的序号为 120，第3个报文段的序号为150。1)第1、2个报文段中有多少数据? 2)假设第2个报文段丢失而其他两个报文段到达主机B，在主机B发往主机A的确认报文中，确认号应是多少?", "Answer": "1)注意，TCP传送的数据流中的每个字节都有一个编号，而TCP报文段的序号为其数据部分第一个字节的编号。因此第1个报文中的数据有120-90=30B，第2个报文中的数据有150-120=30B。<br>2)由于 TCP 使用累积确认策略，因此当第2个报文段丢失后，第3个报文段就成了失序报文，B期望收到的下一个报文段是序号为120的报文段，所以确认号为120。"}
{"ID": 4787, "Split": "Valid", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "DNS 使用 UDP 而非 TCP，如果一个 DNS 分组丢失，没有自动恢复，那么这会引起问题吗?如果会，应该如何解决?", "Answer": "DNS 使用传输层的 UDP而非 TCP,因为它不需要使用 TCP 在发生传输错误时执行的自动重传功能。实际上，对于 DNS服务器的访问，多次 DNS请求都返回相同的结果，即做多次和做一次的效果一样。因此 DNS 操作可以重复执行。当一个进程做一次 DNS 请求时，它启动一个定时器。如果定时器计满而未收到回复，那么它就再请求一次，这样做不会有害处。"}
{"ID": 4788, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "()是操作系统必须提供的功能。", "A": "图形用户界面(GUI)", "B": "为进程提供系统调用命令", "C": "中断处理 ", "D": "编译源程序", "Answer": "C"}
{"ID": 4789, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "系统调用的目的是()。", "A": "请求系统服务", "B": "中止系统服务", "C": "申请系统资源", "D": "释放系统资源", "Answer": "A"}
{"ID": 4790, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在操作系统中，只能在核心态下执行的指令是()。", "A": "读时钟", "B": "取数", "C": "广义指令", "D": "寄存器清“0”", "Answer": "C"}
{"ID": 4791, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于以下四种服务，在采用微内核结构的操作系统中，()不宜放在微内核中。Ⅰ.进程间通信机制 Ⅱ.低级I/O Ⅲ.低级进程管理和调度 Ⅳ.中断和陷入处理 Ⅴ.文件系统服务", "A": "Ⅰ、Ⅱ和Ⅲ", "B": "Ⅱ和Ⅴ", "C": "仅Ⅴ", "D": "Ⅳ和Ⅴ", "Answer": "C", "Explanation": "进程(线程)之间的通信功能是微内核最频繁使用的功能，因此几乎所有微内核OS都将其放入微内核。低级I/O和硬件紧密相关，因此应放入微内核。低级进程管理和调度属于调度功能的机制部分，应将它放入微内核。微内核 OS将与硬件紧密相关的一小部分放入微内核处理，此时微内核的主要功能是捕获所发生的中断和陷入事件，并进行中断响应处理，识别中断或陷入的事件后，再发送给相关的服务器处理，故中断和陷入处理也应放入微内核。而文件系统服务是放在微内核外的文件服务器中实现的，故仅Ⅴ不宜放在微内核中。"}
{"ID": 4792, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于虚拟机的说法中，正确的是()。Ⅰ.虚拟机可以用软件实现 Ⅱ.虚拟机可以用硬件实现 Ⅲ.多台虚拟机可同时运行在同一物理机器上，它实现了真正的并行", "A": "Ⅰ和Ⅱ", "B": "Ⅰ和Ⅲ", "C": "仅Ⅰ", "D": "Ⅰ、Ⅱ和Ⅲ", "Answer": "A", "Explanation": "软件能实现的功能也能由硬件实现，因为虚拟机软件能实现的功能也能由硬件实现，软件和硬件的分界面是系统结构设计者的任务，Ⅰ 和Ⅱ正确。实现真正并行的是多核处理机，多台虚拟机同时运行在同一物理机器上，类似于多个程序运行在同一个系统中。"}
{"ID": 4793, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个计算机系统中，进程的最大数目主要受到（）限制。", "A": "内存大小", "B": "用户数目", "C": "打开的文件数", "D": "外部设备数量", "Answer": "A"}
{"ID": 4794, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个进程释放了一台打印机，它可能会改变()的状态", "A": "自身进程", "B": "输入/输出进程", "C": "另一个等待打印机的进程", "D": "所有等待打印机的进程", "Answer": "C"}
{"ID": 4795, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "通常用户进程被建立后，()。", "A": "便一直存在于系统中，直到被操作人员撤销 ", "B": "随着进程运行的正常或不正常结束而撤销", "C": "随着时间片轮转而撤销与建立 ", "D": "随着进程的阻塞或者唤醒而撤销与建立", "Answer": "B"}
{"ID": 4796, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对信号量S执行P操作后，使该进程进入资源等待队列的条件是()。", "A": "S.value <0", "B": "S.value <= 0", "C": "S.value >0", "D": "S.value >=0", "Answer": "A"}
{"ID": 4797, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面的说法中，正确的是().", "A": "不论是系统支持的线程还是用户级线程，其切换都需要内核的支持", "B": "线程是资源分配的单位，进程是调度和分派的单位", "C": "不管系统中是否有线程，进程都是拥有资源的独立单位", "D": "在引入线程的系统中，进程仍是资源调度和分派的基本单位", "Answer": "C", "Explanation": "引入线程后，进程仍然是资源分配的单位。内核级线程是处理器调度和分派的单位，线程本身不具有资源，它可以共享所属进程的全部资源，C对，B、D明显是错的。至于A，可以这样来理解:假如有一个内核进程，它映射到用户级后有多个线程，那么这些线程之间的切换不需要在内核级切换进程，也就不需要内核的支持。"}
{"ID": 4798, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "进程自身决定()。", "A": "从运行态到阻塞态", "B": "从运行态到就绪态", "C": "从就绪态到运行态", "D": "从阻塞态到就绪态", "Answer": "A", "Explanation": "只有从运行态到阻塞态的转换是由进程自身决定的。从运行态到就绪态的转换是由于进程的时间片用完，“主动”调用程序转向就绪态。虽然从就绪态到运行态的转换同样是由调度程序决定的，但进程是“被动的”。从阻塞态到就绪态的转换是由协作进程决定的。"}
{"ID": 4799, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设有4个作业同时到达，每个作业的执行时间均为2h，它们在一台处理器上按单道式运行，则平均周转时间为()。", "A": "1h", "B": "5h", "C": "2.5h", "D": "8h", "Answer": "B", "Explanation": "4个作业的周转时间分别是2h,4h,6h,8h，所以4个作业的总周转时间为2+4+6+8=20h。此时，平均周转时间=各个作业周转时间之和/作业数=20/4=5 小时。"}
{"ID": 4800, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "作业是用户提交的，进程是由系统自动生成的，除此之外，两者的区别是()。", "A": "两者执行不同的程序段", "B": "前者以用户任务为单位，后者以操作系统控制为单位", "C": "前者是批处理的，后者是分时的", "D": "后者是可并发执行，前者则不同", "Answer": "B", "Explanation": "作业是从用户角度出发的，它由用户提交，以用户任务为单位;进程是从操作系统出发的，由系统生成，是操作系统的资源分配和独立运行的基本单位。"}
{"ID": 4801, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个正在访问临界资源的进程由于申请等待I/O操作而被中断时，它()。", "A": "允许其他进程进入与该进程相关的临界区", "B": "不允许其他进程进入任何临界区", "C": "允许其他进程抢占处理器，但不得进入该进程的临界区", "D": "不允许任何进程抢占处理器", "Answer": "C", "Explanation": "进程进入临界区必须满足互斥条件，当进程进入临界区但尚未离开时就被迫进入阻塞是可以的，系统中经常出现这样的情形。在此状态下，只要其他进程在运行过程中不寻求进入该进程的临界区，就应允许其运行，即分配CPU。该进程所锁定的临界区是不允许其他进程访问的，其他进程若要访问，必定会在临界区的“锁”上阻塞，期待该进程下次运行时可以离开并将临界区交给它。所以正确答案为C。"}
{"ID": 4802, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在操作系统中，死锁出现是指()。", "A": "计算机系统发生重大故障", "B": "资源个数远远小于进程数", "C": "若干进程因竞争资源而无限等待其他进程释放已占有的资源", "D": "进程同时申请的资源数超过资源总数", "Answer": "C", "Explanation": "死锁是指多个进程因竞争系统资源或相互通信而处于永久阻塞态，若无外力作用，这些进程都将无法推进。"}
{"ID": 4803, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "动态重定位是在作业的()中进行的。", "A": "编译过程", "B": "装入过程", "C": "链接过程", "D": "执行过程", "Answer": "D"}
{"ID": 4804, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "引入段式存储管理方式，主要是为了更好地满足用户的一系列要求，下面选项中不属于这一系列要求的是()。", "A": "方便操作", "B": "方便编程", "C": "共享和保护", "D": "动态链接和增长", "Answer": "A"}
{"ID": 4805, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "存储管理方案中，()可采用覆盖技术。", "A": "单一连续存储管理", "B": "可变分区存储管理", "C": "段式存储管理", "D": "段页式存储管理", "Answer": "A", "Explanation": "覆盖技术是早期在单一连续存储管理中使用的扩大存储容量的一种技术，它同样可用于固定分区分配的存储管理。"}
{"ID": 4806, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "采用分页或分段管理后，提供给用户的物理地址空间()。", "A": "分页支持更大的物理地址空间", "B": "分段支持更大的物理地址空间", "C": "不能确定", "D": "一样大", "Answer": "C", "Explanation": "页表和段表同样存储在内存中，系统提供给用户的物理地址空间为总空间大小减去页表或段表的长度。由于页表和段表的长度不能确定，所以提供给用户的物理地址空间大小也不能确定。"}
{"ID": 4807, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "将系统中的每台设备按某种原则统一进行编号，这些编号作为区分硬件和识别设备的代号，该编号称为设备的()。", "A": "绝对号", "B": "相对号", "C": "类型号", "D": "符号", "Answer": "A"}
{"ID": 4808, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "磁盘设备的I/O控制主要采取()方式。", "A": "位", "B": "字节", "C": "帧", "D": "DMA", "Answer": "D"}
{"ID": 4809, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列关于固态硬盘的说法中，正确是的().", "A": "固态硬盘的写速度比较慢，性能甚至弱于常规硬盘", "B": "相比常规硬盘，固态硬盘优势主要体现在连续存取的速度", "C": "静态磨损均衡算法比动态磨损均衡算法的表现更优秀", "D": "写入时，每次选择使用长期存放数据而很少擦写的存储块", "Answer": "C"}
{"ID": 4810, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在以下算法中，()可能会随时改变磁头的运动方向。", "A": "电梯调度", "B": "先来先服务", "C": "循环扫描算法", "D": "以上答案都不对", "Answer": "B", "Explanation": "先来先服务算法根据磁盘请求的时间先后进行调度，因而可能随时改变磁头方向。而电梯调度、循环扫描算法均限制磁头的移动方向。"}
{"ID": 4811, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知某磁盘的平均转速为r秒/转，平均寻找时间为T秒，每个磁道可以存储的字节数为N，现向该磁盘读写b字节的数据，采用随机寻道的方法，每道的所有扇区组成一个簇，其平均访问时间是()。", "A": "(r+T)b/N", "B": "b/NT", "C": "(b/N+T)r", "D": "bT/N+r", "Answer": "A", "Explanation": "将每道的所有扇区组成一个簇，意味着可以将一个磁道的所有存储空间组织成一个数据块组，这样有利于提高存储速度。读写磁盘时，磁头首先找到磁道，称为寻道，然后才可以将信息从磁道里读出或写入。读写完一个磁道后，磁头会继续寻找下一个磁道，完成剩余的工作，所以在随机寻道的情况下，读写一个磁道的时间要包括寻道时间和读写磁道时间，即T+r秒。由于总的数据量是b字节，它要占用的磁道数为b/N个，所以总平均读写时间为(r+T)b/N秒。"}
{"ID": 4812, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设一个磁道访问请求序列为55,58,39,18,90,160,150,38,184，磁头的起始位置为100,若采用SSTF(最短寻道时间优先)算法，则磁头移动()个磁道。", "A": 55, "B": 184, "C": 200, "D": 248, "Answer": "D", "Explanation": "对于SSTF算法，寻道序列应为100,90,58,55,39,38,18,150,160,184;移动磁道次数分别为10,32,3,16,1,20,132,10,24，故磁头移动总次数为248。另外也可以画出草图来解答，从100寻道到18需要82次，然后加上从18到184需要184-18=166次，共移动166+82=248次。"}
{"ID": 4813, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "相对于微内核系统，占用内存空间大不属于大内核操作系统的缺点。", "Answer": false}
{"ID": 4814, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "线程之间的通信必须使用系统调用函数。", "Answer": false}
{"ID": 4815, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在具有通道设备的单处理器系统中实现并发技术后，各进程在某一时间段内并行运行，CPU与I/O设备间串行工作。", "Answer": false, "Explanation": "由于是单处理器，在某一时刻只有一个进程能获得处理器资源，所以是某一时间段内并发运行。此外，也正是因为 CPU 和I/O设备的并行运行，才使各进程能并发执行。"}
{"ID": 4816, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在分页存储管理中，主存的分配是以物理块为单位进行。", "Answer": true}
{"ID": 4817, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在页面置换算法中，存在Belady现象的算法是先进先出置换算法(FIFO)。", "Answer": true}
{"ID": 4818, "Split": "Valid", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件系统在创建一个文件时，为它建立一个逻辑空间。", "Answer": false}
{"ID": 4819, "Split": "Valid", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "加密保护和访问控制两种机制相比，访问控制机制必须由系统实现。", "Answer": true}
{"ID": 4820, "Split": "Valid", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "对于一个具有三级索引的文件，存取一条记录通常要访问三次磁盘。", "Answer": false}
{"ID": 4821, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "最短寻找时间优先算法用于磁盘调度。", "Answer": true}
{"ID": 4822, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "SPOOLing系统由预输入程序、井管理程序和井管理输出程序组成。", "Answer": false}
{"ID": 4823, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在SPOOLing系统中，用户程序可以随时将输出数据送到输出井中，待输出设备空闲时再由SPOOLing系统完成数据的输出操作。", "Answer": true}
{"ID": 4824, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "当()时，进程从执行状态转变为就绪态。", "Answer": "时间片到"}
{"ID": 4825, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "()优先级是在创建进程时确定的，确定之后在整个运行期间不再改变。", "Answer": "静态"}
{"ID": 4826, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "采用资源剥夺法可以解除死锁，还可以采用()方法解除死锁。", "Answer": "撤销进程", "Explanation": "资源剥夺法允许一个进程强行剥夺其他进程所占有的系统资源。而撤销进程强行释放一个进程已占有的系统资源，与资源剥夺法同理，都通过破坏死锁的“请求和保持”条件来解除死锁。拒绝分配新资源只能维持死锁的现状，无法解除死锁。"}
{"ID": 4827, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "死锁检测时检查的是（）。", "Answer": "资源有向图", "Explanation": "死锁检测一般采用两种方法:资源有向图法和资源矩阵法。前驱图只是说明进程之间的同步关系，搜索树用于数据结构的分析，安全图并不存在。注意死锁避免和死锁检测的区别:死锁避免是指避免死锁发生，即死锁没有发生;死锁检测是指死锁已出现，要把它检测出来。"}
{"ID": 4828, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "多进程在主存中彼此互不干扰的环境下运行，操作系统是通过()来实现的。", "Answer": "内存保护"}
{"ID": 4829, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在段式分配中，CPU每次从内存中取一次数据需要()次访问内存。", "Answer": "2"}
{"ID": 4830, "Split": "Valid", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件系统在创建一个文件时，为它建立一个()。", "Answer": "文件目录项"}
{"ID": 4831, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "()用作连接大量的低速或中速I/O设备。", "Answer": "字节多路通道"}
{"ID": 4832, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "为何进程之间的通信必须借助于操作系统内核功能?简单说明进程通信的几种主要方式。", "Answer": "在操作系统中，进程是竞争和分配计算机系统资源的基本单位。每个进程都有自己的独立地址空间。为了保证多个进程能够彼此互不干扰地共享物理内存，操作系统利用硬件地址机制对进程的地址空间进行了严格的保护，限制每个进程只能访问自己的地址空间。具体解答如下。每个进程有自己独立的地址空间。在操作系统和硬件的地址保护机制下，进程无法访问其他进程的地址空间，所以必须借助于操作系统的系统调用函数实现进程之间的通信。进程通信的主要方式有: 1)共享内存区。通过系统调用创建共享内存区。多个进程可以(通过系统调用)连接同一个共享内存区，通过访问共享内存区实现进程之间的数据交换。使用共享内存区时需要利用信号量解决同步互斥问题。 2)消息传递。通过发送/接收消息，系统调用实现进程之间的通信。当进程发送消息时，系统将消息从用户缓冲区复制到内核中的消息缓冲区，然后将消息缓冲区挂入消息队列。进程发送的消息保持在消息队列中，直到被另一进程接收。当进程接收消息时，系统从消息队列中解挂消息缓冲区，将消息从内核的消息缓冲区中复制到用户缓冲区，然后释放消息缓冲区。3)管道系统。管道是先进先出(FIFO)的信息流，允许多个进程向管道写入数据，允许多个进程从管道读出数据。在读/写过程中，操作系统保证数据的写入顺序和读出顺序是一致的。进程通过读/写管道文件或管道设备实现彼此之间的通信。4)共享文件。利用操作系统提供的文件共享功能实现进程之间的通信。这时，也需要信号量来解决文件共享操作中的同步和互斥问题。"}
{"ID": 4833, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "管程由几部分组成?", "Answer": "由定义可知，管程由三部分组成:1)局部于管程的共享变量说明。2)该数据结构进行操作的一组过程。3)对局部于管程的数据设置初始值的语句;此外，还需为该管程赋予一个名字。"}
{"ID": 4834, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某操作系统采用段式管理，用户区主存为512KB，空闲块链入空块表，分配时截取空块的前半部分(小地址部分)。初始时全部空闲。执行申请、释放操作序列reg(300KB)，reg(100KB),release(300KB),reg(150KB),reg(50KB),reg(90KB)后:若随后又要申请80KB，针对上述两种情况会产生什么后果?这说明了什么问题?", "Answer": "若随后又要申请80KB，则最先适配算法可以分配成功，而最佳适配算法则没有足够大的空闲区分配。这说明最先适配算法尽可能地使用了低地址部分的空闲区域，留下了高地址部分的大的空闲区，更有可能满足进程的申请。"}
{"ID": 4835, "Split": "Valid", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某分页式虚拟存储系统，用于页面交换的磁盘的平均访问及传输时间是20ms。页表保存在主存中，访问时间为1us，即每引用一次指令或数据，需要访问内存两次。为改善性能，可以增设一个关联寄存器，若页表项在关联寄存器中，则只需访问一次内存。假设80%的访问的页表项在关联寄存器中，剩下的20%中，10%的访问(即总数的2%)会产生缺页。请计算有效访问时间。", "Answer": "1)80%的访问的页表项在关联寄存器中，访问耗时1us。2)18%的访问的页表项不在关联寄存器中，但在内存中，耗时(1+ 1)μs。3)2%的访问产生缺页中断，访问耗时(1μs + 1μs + 20ms)。从而有效访问时间为80%x1+18%x2+2%x(1x2+20x1000)=401.2μs。"}
{"ID": 4836, "Split": "Valid", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "对文件的目录结构回答以下问题:若允许用户随意地读、写和修改目录项，会有什么问题?", "Answer": "用户可以通过修改目录项来改变对文件的存取权限，从而非法地使用系统的文件;另外，对目录项不负责任的修改会造成管理上的混乱。"}
{"ID": 4837, "Split": "Valid", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在实现文件系统时，为加快文件目录的检索速度，可利用“FCB分解法”。假设目录文件存放在磁盘上，每个盘块512B。FCB占64B，其中文件名占8B。通常将FCB分解成两部分，第一部分占10B(包括文件名和文件内部号)，第二部分占56B(包括文件内部号和文件的其他描述信息)。假设某一目录文件共有254个FCB，试分别给出采用分解法前和分解法后，查找该目录文件的某个FCB的平均访问磁盘次数(访问每个文件的概率相同)。", "Answer": "目录是存放在磁盘上的，检索目录时需要访问磁盘，速度很慢。利用“FCB分解法”加快目录检索速度的原理是:将FCB的一部分分解出去，存放在另一个数据结构中，而在目录中仅留下文件的基本信息和指向该数据结构的指针，这样一来就有效地缩减了目录的体积，减少了目录所占磁盘的块数，检索目录时读取磁盘的次数也减少，于是就加快了检索目录的速度。因为原本整个FCB都是在目录中的，而FCB分解法将FCB的部分内容放在了目录外，所以检索完目录后还需要读取一次磁盘，以找齐FCB的所有内容。分解法前，目录的磁盘块数为64x254/512=31.75，即 32块。前31块中每块放了512/64=8个，而最后一块放了254-31x8=6个。所以查找该目录文件的某个FCB 的平均访问磁盘次数=[8*(1+2+3+..+31)+6x32]/254 =16.38次。分解法后，目录的磁盘块数为10x254/512=4.96，即5块。前4块中每块放了512/10=51个，而最后一块放了254-4x51=50个。所找的目录项在第1,2,3,4,5块所需的磁盘访问次数分别为2,3,4，5，6次。所以查找该目录文件的某个FCB的平均访问磁盘次数=[51x(2+3+4+5)+50x6]/254=3.99次。"}
{"ID": 4838, "Split": "Valid", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在实现文件系统时，为加快文件目录的检索速度，可利用“FCB分解法”。假设目录文件存放在磁盘上，每个盘块512B。FCB占64B，其中文件名占8B。通常将FCB分解成两部分，第一部分占10B(包括文件名和文件内部号)，第二部分占56B(包括文件内部号和文件的其他描述信息)。一般地，若目录文件分解前占用n个盘块，分解后改用m个盘块存放文件名和文件内部号，请给出访问磁盘次数减少的条件(假设m和n个盘块中都正好装满)。", "Answer": "目录是存放在磁盘上的，检索目录时需要访问磁盘，速度很慢。利用“FCB分解法”加快目录检索速度的原理是:将FCB的一部分分解出去，存放在另一个数据结构中，而在目录中仅留下文件的基本信息和指向该数据结构的指针，这样一来就有效地缩减了目录的体积，减少了目录所占磁盘的块数，检索目录时读取磁盘的次数也减少，于是就加快了检索目录的速度。因为原本整个FCB都是在目录中的，而FCB分解法将FCB的部分内容放在了目录外，所以检索完目录后还需要读取一次磁盘，以找齐FCB的所有内容。分解法前，平均访问磁盘次数=(1+2+3++n)/n=(n +1)/2次。分解法后，平均访问磁盘次数=[2+3+4++(m+1)]/m=(m+3)/2次。为了使访问磁盘次数减少，显然需要(m+3)/2<(n+1)/2，即 m<n-2."}
