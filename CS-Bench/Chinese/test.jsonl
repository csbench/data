{"ID": 2420, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据结构的三个基本要素包括（）：", "A": "逻辑结构、存储结构、数据的运算", "B": "逻辑结构、算法设计、程序实现", "C": "数据类型、数据存储、数据操作", "D": "数据定义、数据实现、数据操作", "Answer": "A"}
{"ID": 2421, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据在计算机科学中是指（）：", "A": "信息的载体，描述客观事物属性的数、字符及所有能被计算机处理的符号的集合", "B": "仅限于数字和字符", "C": "信息处理的结果", "D": "计算机程序中的变量和函数", "Answer": "A"}
{"ID": 2422, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据项在数据结构中的定义是什么？", "A": "构成数据元素的不可分割的最小单位", "B": "数据处理过程中的一个步骤", "C": "数据元素的一个子集", "D": "数据库中的一个字段", "Answer": "A"}
{"ID": 2423, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据对象在数据结构中指的是什么？", "A": "具有相同性质的数据元素的集合，是数据的一个子集", "B": "计算机程序中处理的主要数据源", "C": "数据存储的主体", "D": "数据库管理系统中的基本组成部分", "Answer": "A"}
{"ID": 2424, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据类型通常包括哪些类别？", "A": "结构类型、原子类型、抽象数据类型", "B": "原子类型、数值类型、字符类型", "C": "布尔类型、复合类型、接口类型", "D": "字符类型、数值类型、枚举类型", "Answer": "C"}
{"ID": 2425, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据结构中，逻辑结构和存储结构的关系是什么？", "A": "相互独立，互不影响", "B": "逻辑结构影响存储结构，但存储结构不影响逻辑结构", "C": "存储结构影响逻辑结构，但逻辑结构不影响存储结构", "D": "密不可分，算法的设计取决于逻辑结构，实现依赖于存储结构", "Answer": "D"}
{"ID": 2426, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据的存储结构主要包括哪些类型？", "A": "顺序存储、链式存储、索引存储、散列存储", "B": "线性存储、树状存储、图状存储、网状存储", "C": "静态存储、动态存储、直接存储、间接存储", "D": "随机存储、顺序存储、直接存储、间接存储", "Answer": "A"}
{"ID": 2427, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "施加在数据上的运算主要包括哪些方面？", "A": "运算的定义和实现", "B": "运算的类型和范围", "C": "运算的频率和效率", "D": "运算的方法和工具", "Answer": "A"}
{"ID": 2428, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在存储数据时，通常需要存储什么？", "A": "仅数据元素的值", "B": "数据元素的值以及数据元素之间的关系", "C": "数据元素的类型和大小", "D": "数据的物理地址和存储方式", "Answer": "B"}
{"ID": 2429, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在链式存储设计中，关于结点的存储空间和结点内存储单元地址的描述正确的是：", "A": "各个不同结点的存储空间和结点内的存储单元地址都必须连续", "B": "各个不同结点的存储空间可以不连续，但结点内的存储单元地址必须连续", "C": "各个不同结点的存储空间必须连续，但结点内的存储单元地址可以不连续", "D": "各个不同结点的存储空间和结点内的存储单元地址都可以不连续", "Answer": "B"}
{"ID": 2430, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "算法在计算机科学中通常被定义为什么？", "A": "特定问题求解步骤的描述，包括指令的有限序列，每条指令包括一个或多个操作", "B": "计算机程序的执行顺序", "C": "数据处理的方法和技巧", "D": "软件开发的流程和规范", "Answer": "A"}
{"ID": 2431, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "当分析一个算法的空间复杂度时，若输入数据所占空间只与问题本身相关，那么应该怎样考虑？", "A": "分析整个程序占用的空间总量", "B": "仅考虑输入数据所占用的空间", "C": "分析除输入和程序本身之外的额外空间", "D": "考虑算法执行过程中动态分配的空间", "Answer": "C"}
{"ID": 2432, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "程序主要由哪些部分组成？", "A": "数据结构和用户界面", "B": "代码和文档", "C": "数据结构和算法", "D": "函数和变量", "Answer": "C"}
{"ID": 2433, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "算法在计算机科学中的定义是什么？", "A": "解决问题的方法", "B": "计算机指令的集合", "C": "对特定问题求解步骤的描述，是指令的有限序列", "D": "编程语言中的一个功能模块", "Answer": "C"}
{"ID": 2434, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "算法的时间复杂度是如何定义的？", "A": "算法执行所需的最大存储空间", "B": "算法中基本操作重复执行的次数是问题规模n的函数f(n)，表示随问题规模n的增大而增大的算法执行时间增长率", "C": "算法完成任务所需的步骤数量", "D": "算法执行所需时间与输入数据长度的比率", "Answer": "B"}
{"ID": 2435, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据运算包括哪些方面？", "A": "仅包括运算的实现，即具体操作步骤", "B": "仅包括运算的定义，即指出运算的功能", "C": "包括运算的定义和实现，其中定义针对逻辑结构，实现针对存储结构", "D": "只包括数据的计算和分析", "Answer": "C"}
{"ID": 2436, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "算法的效率与低存储量需求是如何定义的？", "A": "效率是指算法编写的简洁程度，存储量需求是指算法完成后所占用的空间大小", "B": "效率是指算法执行的时间，存储量需求是指算法执行过程中所需要的最大存储空间，这两者都与问题的规模有关", "C": "效率是指算法的执行速度，存储量需求是指算法代码使用的内存空间", "D": "效率是指算法解决问题的能力，存储量需求是指算法在内存中的占用大小", "Answer": "B"}
{"ID": 2437, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据类型是什么？", "A": "数据处理过程中产生的中间结果", "B": "一个值的集合和定义在此集合上的一组操作的总称", "C": "数据存储时所使用的格式", "D": "特定编程语言中的变量类型", "Answer": "B"}
{"ID": 2438, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下数据结构中，（）是非线性数据结构。", "A": "树", "B": "字符串", "C": "队列", "D": "栈", "Answer": "A"}
{"ID": 2439, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下与数据的存储结构无关的术语是()", "A": "循环队列", "B": "链表", "C": "哈希表", "D": "栈", "Answer": "D"}
{"ID": 2440, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下关于数据结构的说法中，正确的是()。", "A": "数据的逻辑结构独立于其存储结构", "B": "数据的存储结构独立于其逻辑结构", "C": "数据的逻辑结构唯一决定其存储结构", "D": "数据结构仅由其逻辑结构和存储结构决定", "Answer": "A"}
{"ID": 2441, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在存储数据时，通常不仅要存储各数据元的值，而且要存储（）", "A": "数据的操作方法", "B": "数据元素的类型", "C": "数据元素之间的关系", "D": "数据的存取方法", "Answer": "C"}
{"ID": 2442, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "链式存储设计时，结点内的存储单元地址（）", "A": "一定连续", "B": "一定不连续", "C": "不一定连续", "D": "部分连续，部分不连续", "Answer": "A"}
{"ID": 2443, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某算法的时间复杂度为O(n^2),表明该算法的（）", "A": "问题规模是n^2", "B": "执行时间等于n^2", "C": "执行时间与n^2成正比", "D": "问题规模与n^2成正比", "Answer": "C", "Explanation": "时间复杂度为O(n^2)，说明算法的时间复杂度T(n)满足T(n)≤cn^2（c为比例常数），即T(n)=O(n^2)，时间复杂度T(n)是问题规模n的函数，其问题规模仍然是n而不是n^2。"}
{"ID": 2444, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下算法的时间复杂度为（)。\nvoid fun(int n){\n  int i=l;\n  while(i<=n)\n  i=i*2;\n}", "A": "O(n)", "B": "O(n^2)", "C": "O(nlog2n)", "D": "O(log2n)", "Answer": "D", "Explanation": "找出基本运算i=i*2，设执行次数为t，则2^t≤n，即t≤log2n，因此时间复杂度T(n)=O(log2n).\n更直观的方法：计算基本运算i=i*2的执行次数（每执行一次主乘2），其中判断条件可理解为2^t=n，即t=log2n，则T(n)=O(log2n)。"}
{"ID": 2445, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "有以下算法，其时间复杂度为（)。\nvoid fun(int n){\n  int i=0;\n  while(i*i*i<-n)\n    i++;\n}", "A": "O(n)", "B": "O(nlog2n)", "C": "O(∛n )", "D": "O(√n )", "Answer": "C", "Explanation": "基本运算为i++，设执行次数为t，有t*t*t≤n,即t^3≤n。故有t≤∛n，则T(n)=O(∛n）"}
{"ID": 2446, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面的说法中，错误的是（）。\nⅠ.算法原地工作的含义是指不需要任何额外的辅助空间\nⅡ.在相同规模n下，复杂度为O(n)的算法在时间上总是优于复杂度为O(2^n\")的算法\nⅢ.所谓时间复杂度，是指最坏情况下估算算法执行时间的一个上界\nⅣ.同一个算法，实现语言的级别越高，执行效率越低", "A": "Ⅰ", "B": "Ⅰ,Ⅱ", "C": "Ⅰ,Ⅳ", "D": "Ⅲ", "Answer": "A", "Explanation": "Ⅰ，算法原地工作是指算法所需的辅助空间是常量。Ⅱ，本项考查算法效率的理解，时间复杂度是指渐近时间复杂度，不要想当然地去给n赋予一个特殊值，时间复杂度为O(n)的算法必然优于时间复杂度为O(2^n\")的算法。Ⅲ，时间复杂度总是考虑最坏情况下的时间复杂度，以保证算法的运行时间不会比它更长。Ⅳ为严蔚敏教材中的原话，该问题在论坛讨论过多年，对于这种在语言层次上的效率问题，建议不要以特例程序来解释其优劣，此处认为该结论是正确的。"}
{"ID": 2447, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "线性表是什么？", "A": "不同数据类型的数据元素的集合", "B": "数据元素按照键值自动排序的序列", "C": "具有相同数据类型的n个数据元素的有限序列", "D": "一组数据元素的随机集合", "Answer": "C"}
{"ID": 2448, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "关于线性表的描述，下列哪项是正确的？", "A": "每个元素有多个直接前驱和后继", "B": "第一个元素和最后一个元素是相同的", "C": "除第一个元素外，每个元素有且只有一个直接前驱", "D": "线性表中的元素可以随机存取", "Answer": "C"}
{"ID": 2449, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "线性表的哪个特点与其存储结构无关？", "A": "存在唯一的第一个元素", "B": "每个元素只有一个直接前驱", "C": "顺序存储结构使用顺序表", "D": "链式存储结构使用链表", "Answer": "A"}
{"ID": 2450, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "关于线性表的基本操作，下列说法错误的是？", "A": "ListInsert 操作用于在表 L 的指定位置插入元素", "B": "ListDelete 操作用于删除表 L 的第 i 个元素，并返回该元素值", "C": "LocateElem 操作用于在表 L 中查找具有指定值的元素", "D": "Empty 操作用于返回线性表 L 的长度", "Answer": "D"}
{"ID": 2451, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在顺序表的操作中，哪一个操作的时间复杂度通常不是O(1)？", "A": "ListInsert", "B": "GetElem", "C": "PrintList", "D": "Empty", "Answer": "C"}
{"ID": 2452, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下关于顺序表的说法中，哪项是错误的？", "A": "随机访问能力，可以快速找到任一元素", "B": "存储密度高，每个节点还存储指向下一节点的指针", "C": "容易扩展容量，动态分配时需要复制数据", "D": "插入删除操作需要移动大量元素，时间复杂度较高", "Answer": "B"}
{"ID": 2453, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在静态实现的顺序表中，下列关于初始化顺序表的说法哪个是错误的？", "A": "初始化后，顺序表的长度设置为0", "B": "顺序表最大长度是固定的", "C": "初始化函数中不需要分配内存空间", "D": "顺序表使用数组存储数据元素", "Answer": "C"}
{"ID": 2454, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在顺序表的动态实现中，当调用IncreaseSize函数时，以下哪个描述是错误的？", "A": "IncreaseSize函数用于增加顺序表的容量", "B": "新的存储空间通过malloc分配", "C": "原有数据需要复制到新的存储空间", "D": "增加后的新空间大小直接加到length属性", "Answer": "D"}
{"ID": 2455, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在顺序表的GetElem函数中，如何正确地获取第i个元素的值？", "A": "返回L.data[i+1]", "B": "返回L.data[i-1]", "C": "直接返回L.data[i]", "D": "计算L.data[i]的平均值", "Answer": "B"}
{"ID": 2456, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "单链表中的每个元素通常包含哪些部分？", "A": "数据元素和指向下一个元素的指针", "B": "仅数据元素", "C": "数据元素和指向前一个元素的指针", "D": "数据元素和两个分别指向前后元素的指针", "Answer": "A"}
{"ID": 2457, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "如何判断不带头结点的单链表是否为空？", "A": "检查链表中是否有数据元素", "B": "检查头指针是否为NULL", "C": "检查每个结点的next指针是否为空", "D": "检查链表的长度是否为0", "Answer": "B"}
{"ID": 2458, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "如何判断带头结点的单链表是否为空？", "A": "检查头结点的next指针是否为NULL", "B": "检查头结点是否为NULL", "C": "检查链表中是否有数据元素", "D": "检查链表的长度是否为0", "Answer": "A"}
{"ID": 2459, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在带头结点的单链表中，执行ListInsert插入操作的正确步骤是什么？", "A": "直接将新结点插入到链表末尾", "B": "在找到的结点之前插入新结点", "C": "首先删除第i个结点，然后插入新结点", "D": "找到第i-1个结点后，在其后插入新结点", "Answer": "D"}
{"ID": 2460, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在不带头结点的单链表中，执行ListInsert插入操作时，如何正确处理在第1个位置插入元素的情况？", "A": "直接将新结点插入到链表末尾", "B": "创建新结点并更新头指针以指向这个新结点", "C": "删除原先的第1个结点，然后插入新结点", "D": "在原先的第1个结点后插入新结点", "Answer": "B"}
{"ID": 2461, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "单链表的InsertPriorNode函数如何正确地在结点p之前插入新元素e？", "A": "将新元素e插入到链表的开头", "B": "先将新结点插入到p的后面，然后交换p和新结点的数据", "C": "删除p结点之前的结点，然后插入新结点", "D": "直接在p结点之前插入新结点", "Answer": "B"}
{"ID": 2462, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在单链表中，LocateElem函数如何正确地查找具有给定关键字值e的元素？", "A": "返回链表的第一个结点", "B": "返回具有值e的最后一个结点", "C": "返回链表的最后一个结点", "D": "从第一个结点开始查找，找到后返回该结点指针，否则返回NULL", "Answer": "D"}
{"ID": 2463, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在单链表中，Length函数是如何计算链表的长度的？", "A": "计算包括头节点在内的所有节点数", "B": "只计算头节点", "C": "从链表末尾开始逆向计算节点数", "D": "从第一个数据节点开始顺序计算节点数，不包括头节点", "Answer": "D"}
{"ID": 2464, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在头插法建立单链表的List_HeadInsert函数中，新节点是如何插入链表的？", "A": "新节点被插入到链表的末尾", "B": "新节点被插入到链表的开始处", "C": "新节点被插入到链表的中间位置", "D": "新节点随机插入链表的任意位置", "Answer": "B"}
{"ID": 2465, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在链表的逆置算法Inverse中，节点是如何被重新排列的？", "A": "从链表末尾开始逐个节点移动到新链表的开始", "B": "将每个节点插入到新链表的末尾", "C": "将每个节点从原链表删除后，头插到新链表中", "D": "节点顺序保持不变，只更改链表的头结点", "Answer": "C"}
{"ID": 2466, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在双链表中，InsertNextDNode函数如何正确地在p结点后插入s结点？", "A": "将s结点插入到链表的开始处", "B": "将s结点插入到p结点之前", "C": "在链表末尾插入s结点", "D": "将s结点插入到p结点之后并更新相应的指针", "Answer": "D"}
{"ID": 2467, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在双链表中，DeletNextDNode函数如何正确地删除p结点的后继结点？", "A": "直接删除p结点", "B": "删除p结点的后继结点并更新相应的指针", "C": "删除链表的头结点", "D": "删除链表中的所有结点", "Answer": "B"}
{"ID": 2468, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "双链表中，正确的遍历操作描述是什么？", "A": "只能从头结点开始向后遍历", "B": "只能从尾结点开始向前遍历", "C": "可以从任意结点开始，向前或向后遍历", "D": "遍历时只能访问数据结点，不能访问头结点和尾结点", "Answer": "C"}
{"ID": 2469, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在循环单链表中，以下哪个描述是正确的？", "A": "循环单链表的最后一个结点的指针指向NULL", "B": "循环单链表不能判断是否为空", "C": "循环单链表的所有结点的next指针都指向头结点", "D": "循环单链表的最后一个结点的指针指向头结点", "Answer": "D"}
{"ID": 2470, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在循环双链表中，以下哪个描述是正确的？", "A": "循环双链表的表头结点的prior指针指向NULL", "B": "循环双链表不能判断是否为空", "C": "循环双链表的所有结点的next指针都指向头结点", "D": "循环双链表的表头结点的prior指向表尾结点，表尾结点的next指向头结点", "Answer": "D"}
{"ID": 2471, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下（）是一个线性表。", "A": "由n个实数组成的集合", "B": "由100个字符组成的序列", "C": "邻接表", "D": "所有整数组成的序列", "Answer": "B"}
{"ID": 2472, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在线性表中，除开始元素外，每个元素（）。", "A": "只有唯一的前驱元素", "B": "只有唯一的后继元素", "C": "有多个前驱元素", "D": "有多个后继元素", "Answer": "A"}
{"ID": 2473, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下述（）是顺序存储结构的优点。", "A": "存储密度大", "B": "插入运算方便", "C": "删除运算方便", "D": "方便地运用于各种逻辑结构的存储表示", "Answer": "A"}
{"ID": 2474, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对于顺序表，访问第i个位置的元素和在第i个位置插入一个元素的时间复杂度为（）", "A": "O(n),O(n)", "B": "O(n),O(1)", "C": "O(1),O(n)", "D": "O(1),O(1)", "Answer": "C"}
{"ID": 2475, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对于一个线性表，既要求能够进行较快速地插入和删除，又要求存储结构能反映数据之间的逻辑关系，则应该用（）。", "A": "顺序存储方式", "B": "链式存储方式", "C": "散列存储方式", "D": "以上均可以", "Answer": "B"}
{"ID": 2476, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "单链表中，增加一个头结点的目的是（）。", "A": "使单链表至少有一个结点", "B": "标识表结点中首结点的位置", "C": "方便运算的实现", "D": "说明单链表是线性表的链式存储", "Answer": "C"}
{"ID": 2477, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "与单链表相比，双链表的优点之一是（）。", "A": "插入、删除操作更方便", "B": "可以进行随机访问", "C": "可以省略表头指针或表尾指针", "D": "访问前后相邻结点更灵活", "Answer": "D"}
{"ID": 2478, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "带头结点的双循环链表L为空的条件是（）。", "A": "L->prior==L&&L->next==NULL", "B": "L->prior==NULL&&L->next==NULL", "C": "L->prior==NULL&&L->next==L ", "D": "L->prior==L&&L->next==L", "Answer": "D"}
{"ID": 2479, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个链表最常用的操作是在末尾插入结点和删除结点，选用（）最节省时间。", "A": "带头结点的双循环链表", "B": "单循环链表", "C": "带尾指针的单循环链表", "D": "单链表", "Answer": "A"}
{"ID": 2480, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个链表最常用的操作是在最后一个元素后插入一个元素和删除第一个元素，则选用（）最节省时间。", "A": "不带头结点的单循环链表", "B": "双链表", "C": "不带头结点且有尾指针的单循环链表", "D": "单链表", "Answer": "C"}
{"ID": 2481, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在n个元素的线性表的数组表示中，时间复杂度为O(1)的操作是（）\nⅠ.访问第i（1≤i≤n）个结点和求第i（2≤i≤n）个结点的直接前驱.\nⅡ.在最后一个结点后插入一个新的结点.\nⅢ.删除第1个结点.\nⅣ.顺序输出这n个元素的值.", "A": "Ⅰ", "B": "Ⅱ,Ⅲ", "C": "Ⅰ,Ⅱ", "D": "Ⅰ,Ⅱ,Ⅲ", "Answer": "C", "Explanation": "Ⅰ解析略：Ⅱ中，在最后位置插入新结点不需要移动元素，时间复杂度为O(1)：Ⅲ中，被删结点后的结点需依次前移，时间复杂度为O(n)：Ⅳ中，需要后移n-i个结点，时间复杂度为O(n)。"}
{"ID": 2482, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设线性表有n个元素，严格说来，以下操作中，（）在顺序表上实现要比在链表上实现的效率高。\nⅠ.输出第i（1≤i≤n）个元素值\nⅡ.交换第3个元素与第4个元素的值\nⅢ.顺序输出这n个元素的值", "A": "Ⅰ", "B": "Ⅰ,Ⅲ", "C": "Ⅰ,Ⅱ", "D": "Ⅱ,Ⅲ", "Answer": "C", "Explanation": "对于Ⅱ，顺序表仅需3次交换操作：链表则需要分别找到两个结点前驱，第4个结点断链后再插入到第2个结点后，效率较低。对于Ⅲ，需依次顺序访问每个元素，时间复杂度相同。"}
{"ID": 2483, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "关于线性表的顺序存储结构和链式存储结构的描述中，正确的是（）。\nⅠ.线性表的顺序存储结构优于其链式存储结构\nⅡ.链式存储结构比顺序存储结构能更方使地表示各种逻辑结构\nⅢ.若频紧使用插入和删除结点操作，则顺序存储结构更优于链式存储结构\nⅣ.顺序存储结构和链式存储结构都可以进行顺序存取", "A": "Ⅰ,Ⅱ,Ⅲ", "B": "Ⅱ,Ⅳ", "C": "Ⅱ,Ⅲ", "D": "Ⅲ,Ⅳ", "Answer": "B", "Explanation": "两种存储结构有不同的适用场合，不能简单地说谁好谁坏，Ⅰ错误。链式存储用指针表示逻辑结构，而指针的设置是任意的，故可以很方便地表示各种逻辑结构：顺序存储只能用物理上的邻接关系来表示逻辑结构，Ⅱ正确。在顺序存储中，插入和删除结点需要移动大量元素，效率较低，Ⅲ的描述刚好相反。顺序存储结构既能随机存取又能顺序存取，而链式结构只能进行顺序存取，Ⅳ正确。"}
{"ID": 2484, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于顺序存储的线性表，其算法时间复杂度为O(1)的运算应该是（)。", "A": "将n个元素从小到大排序", "B": "删除第i（1≤i≤n）个元素", "C": "改变第i（1≤i≤n）个元素的值", "D": "在第i（1≤i≤n）个元素后插入个新元素", "Answer": "C", "Explanation": "对n个元素进行排序的时间复杂度最小也要O(n)（初始有序时）通常为O(nlog2n)或O(n^2）。B和D显然错误。顺序表支持按序号的随机存取方式。"}
{"ID": 2485, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于线性表说法中，正确的是（）。\nⅠ.顺序存储方式只能用于存储线性结构\nⅡ.取线性表的第i个元素的时间与i的大小有关\nⅢ.静态链表需要分配较大的连续空间，插入和删除不需要移动元素\nⅣ.在一个长度为n的有序单链表中插入一个新结点并仍保持有序的时间复杂度为O(n)\nⅤ.若用单链表来表示队列，则应该选用带尾指针的循环链表", "A": "Ⅰ,Ⅱ", "B": "Ⅰ,Ⅲ,Ⅳ,Ⅴ", "C": "Ⅳ,Ⅴ", "D": "Ⅲ,Ⅳ,Ⅴ", "Answer": "D", "Explanation": "顺序存储方式同样适合图和树，Ⅰ错误。线性表采用顺序存储时Ⅱ错误。Ⅲ是静态链表的特点。有序单链表只能依次查找插入位置，时间复杂度为O(n)，Ⅳ正确。队列需要在表头删除元素，表尾插入元素，采用带尾指针的循环链表较为方便，插入和删除的时间复杂度都为O(1)，Ⅴ正确。"}
{"ID": 2486, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设线性表中有2n个元素，（）在单链表上实现要比在顺序表上实现效率更高", "A": "删除所有值为x的元素", "B": "在最后一个元素的后面插入一个新元素", "C": "顺序输出前k个元素", "D": "交换第i个元素和第2n-i-1个元素的值i=0,…,n-1）\n", "Answer": "A", "Explanation": " 对于A，在单链表和顺序表上实现的时间复杂度都为O(n)，但后者要移动很多元素，因此在单链表上实现效率更高。对于B和D，顺序表的效率更高。C无区别。"}
{"ID": 2487, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面关于线性表的一些说法中，正确的是（）。", "A": "对一个设有头指针和尾指针的单链表执行删除最后一个元素的操作与链表长度无关", "B": "线性表中每个元素都有一个直接前驱和一个直接后继", "C": "为了方使插入和删除数据，可以使用双链表存放数据", "D": "取线性表第i个元素的时间与i的大小有关", "Answer": "C", "Explanation": "双链表能很方便地访问前驱和后维，故删除和插入数据较为方便。A显然错误。B表中第一个元素和最后一个元素不满足题设要求。D未考顺序存储的情况。"}
{"ID": 2488, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在双链表中向p所指的结点之前插入一个结点q的操作为（）。", "A": "p->prior=q;q->next=p;p->prior->next=q;q->prior=p->prior;", "B": "q->prior=p->prior;p->prior->next=q;q->next=p;p->prior=g->next;", "C": "q->next=p;p->next=q;q->prior->next=q;q->next=p;", "D": "p->prior->next=q;q->next=p;q->prior=p->prior;p->prior=q", "Answer": "D", "Explanation": "为了在p之前插入结点q，可以将p的前一个结点的next域指向q，将q的next域指向p，将q的prior域指向p的前一个结点，将p的prior域指向q。仅D满足条件。"}
{"ID": 2489, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设对n（n>1）个元素的线性表的运算只有4种：删除第一个元素；除最后一个元素：在第一个元素之前插入新元素：在最后一个元素之后插入新元素，则最好使用（）", "A": "只有尾结点指针没有头结点指针的循环单链表", "B": "只有尾结点指针没有头结点指针的非循环双链表", "C": "只有头结点指针没有尾结点指针的循环双链表", "D": "既有头结点指针又有尾结点指针的循环单链表", "Answer": "C", "Explanation": "对于A，删除尾结点*p时，需要找到*p的前-个结点，时间复杂度为O(n)。对于B，删除首结点*p时，需要找到*p结点，这里没有直接给出头结点指针，而通过尾结点的prior指针找到*p结点的时间复杂度为O(n)。对于D，删除尾结点*p时，需要找到*p的前一个结点，时间复杂度为O(n)。对于C，执行这4种算法的时间复杂度均为O(1)。"}
{"ID": 2490, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某线性表用带头结点的循环单链表存储，头指针为head，当head->next->next=head成立时，线性表长度可能是（）。", "A": 0, "B": 1, "C": 2, "D": "可能为0或1", "Answer": "D", "Explanation": "对一个空循环单链表，有head->next==head，推理head->next->next==head->next==head。对含有1个元素的循环单链表，头结点（头指针head指示）的next域指向该唯一元素结点，该元素结点的next域指向头结点，因此也有head->next->next=head。故选D。"}
{"ID": 2491, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "n个不同元素进栈时，出栈元素的不同排列个数是多少？", "A": "n!", "B": "卡特兰数 C(n, 2n)/(n+1)", "C": "2^n", "D": "C(n, n)", "Answer": "B"}
{"ID": 2492, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "栈的存储方式有哪些种类？", "A": "仅顺序存储", "B": "仅链式存储", "C": "顺序存储和链式存储", "D": "分布式存储", "Answer": "C"}
{"ID": 2493, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "关于顺序栈的描述，哪项是正确的？", "A": "栈空条件是S.top == 0", "B": "栈满条件是S.top < MaxSize", "C": "栈长是S.top", "D": "栈空条件是S.top == -1，栈满条件是S.top == MaxSize-1，栈长是S.top+1", "Answer": "D"}
{"ID": 2494, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "顺序栈可能遇到的一个问题是什么？", "A": "栈上溢", "B": "栈下溢", "C": "数据丢失", "D": "栈可以扩展", "Answer": "A"}
{"ID": 2495, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在顺序栈中，GetTop操作的主要目的是什么？", "A": "初始化栈", "B": "检查栈是否为空", "C": "返回栈顶元素的值而不移除它", "D": "将元素添加到栈顶", "Answer": "C"}
{"ID": 2496, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "当两个顺序栈共享同一个一维数组空间时，它们的栈底和栈顶分别如何设置？", "A": "两个栈底在同一端，栈顶向相反方向延伸", "B": "两个栈顶在同一端，栈底向相反方向延伸", "C": "栈底和栈顶都在同一端", "D": "两个栈底在两端，栈顶向中间延伸", "Answer": "D"}
{"ID": 2497, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "链栈的哪些特点区别于顺序栈？", "A": "不会出现栈满上溢，便于多个栈共享存储空间", "B": "只能存储有限数量的元素", "C": "存储空间利用率低", "D": "需要更多的时间进行数据访问", "Answer": "A"}
{"ID": 2498, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "栈和队列的主要区别是什么？", "A": "它们的存储结构不同", "B": "它们的运算方式不同", "C": "它们处理的数据类型不同", "D": "它们的应用场景完全不同", "Answer": "B"}
{"ID": 2499, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "队列的操作特性可以概括为什么？", "A": "后进先出（LIFO）", "B": "随机存取", "C": "先进先出（FIFO）", "D": "仅允许在一端进行操作", "Answer": "C"}
{"ID": 2500, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在顺序存储的队列中，队头指针front和队尾指针rear的指向是怎样的？", "A": "front和rear都指向队头元素", "B": "front和rear都指向队尾元素", "C": "front指向队头元素，rear指向队尾元素", "D": "front指向队头元素，rear指向队尾元素的下一个位置", "Answer": "D"}
{"ID": 2501, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "循环队列的EnQueue入队操作的正确描述是什么？", "A": "直接将元素添加到队尾，不检查队满条件", "B": "检查队空条件，然后添加元素", "C": "检查队满条件，然后添加元素到队尾", "D": "先删除队头元素，然后添加元素到队尾", "Answer": "C"}
{"ID": 2502, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "循环队列的DeQueue出队操作的正确描述是什么？", "A": "直接移除队尾元素", "B": "移除队头元素，不检查队空条件", "C": "检查队满条件，然后移除队头元素", "D": "检查队空条件，然后移除队头元素", "Answer": "D"}
{"ID": 2503, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "循环队列的isEmpty判队空操作的正确描述是什么？", "A": "检查队尾指针是否为0", "B": "队头和队尾指针相等表示队空", "C": "检查队头指针是否为0", "D": "队头和队尾指针不相等表示队空", "Answer": "B"}
{"ID": 2504, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "链队列为空的条件是什么？", "A": "队头指针Q.front和队尾指针Q.rear都指向NULL", "B": "队头指针Q.front指向NULL，但队尾指针Q.rear不为NULL", "C": "队尾指针Q.rear指向NULL，但队头指针Q.front不为NULL", "D": "队头指针和队尾指针指向同一个非NULL节点", "Answer": "A"}
{"ID": 2505, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "链式队列通常如何设计？", "A": "作为一个不带头结点的单链表", "B": "作为一个带头结点的单链表", "C": "作为一个双向链表", "D": "作为一个循环链表", "Answer": "B"}
{"ID": 2506, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "链式队列的EnQueue入队操作如何实现？", "A": "直接将元素添加到队头", "B": "检查队空条件，然后添加元素", "C": "创建新结点并将其添加到队尾", "D": "先删除队头元素，然后添加元素到队尾", "Answer": "C"}
{"ID": 2507, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "链式队列的DeQueue出队操作如何实现？", "A": "直接移除队尾元素", "B": "移除队头元素，不检查队空条件", "C": "检查队满条件，然后移除队头元素", "D": "检查队空条件，然后移除队头元素", "Answer": "D"}
{"ID": 2508, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在链式队列中进行删除操作时，可能需要修改什么？", "A": "头尾指针", "B": "只有头指针", "C": "只有尾指针", "D": "数据结构", "Answer": "A"}
{"ID": 2509, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "递归操作必须满足哪两个条件？", "A": "递增表达式和循环条件", "B": "递归表达式和边界条件", "C": "循环表达式和终止条件", "D": "增量表达式和限制条件", "Answer": "B"}
{"ID": 2510, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在层序遍历中，队列是如何使用的？", "A": "用于存储所有的节点", "B": "仅用于存储叶子节点", "C": "根结点入队，若队空则结束遍历，否则队列中的第一个结点出队并访问，若有左右孩子则相应入队", "D": "仅用于存储非叶子节点", "Answer": "C"}
{"ID": 2511, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在使用链式存储方式的队列进行删除操作时，通常需要修改什么？", "A": "只有数据内容", "B": "只有头指针", "C": "只有尾指针", "D": "头尾指针", "Answer": "D"}
{"ID": 2512, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "队列在计算机系统中的主要作用是什么？", "A": "数据加密和解密", "B": "作为缓冲区和处理资源竞争", "C": "数据分析和处理", "D": "程序编译和调试", "Answer": "B"}
{"ID": 2513, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "压缩矩阵的定义是什么？", "A": "存储所有元素的矩阵", "B": "为值相同的元素分配多个存储空间", "C": "为值相同的元素分配一个存储空间，不为零元素分配", "D": "仅为非零元素分配存储空间", "Answer": "C"}
{"ID": 2514, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "队列在多用户系统中用于什么目的？", "A": "管理用户权限", "B": "监控用户活动", "C": "处理资源竞争问题", "D": "控制数据访问", "Answer": "C"}
{"ID": 2515, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对n阶对称矩阵进行压缩存储需要多大的表长？", "A": "n", "B": "n(n-1)/2", "C": "n^2", "D": "n(n+1)/2", "Answer": "D"}
{"ID": 2516, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是特殊矩阵？", "A": "具有许多相同元素或零元素的矩阵", "B": "由特定规则生成的矩阵", "C": "含有随机元素的矩阵", "D": "任何非零的矩阵", "Answer": "A"}
{"ID": 2517, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "二维数组的行优先计算地址公式是什么？", "A": "LOC(i,j)=LOC(0,0)+(i+j)*L", "B": "LOC(i,j)=LOC(0,0)+(i+n+j)*L", "C": "LOC(i,j)=LOC(0,0)+(i+j*m)*L", "D": "LOC(i,j)=LOC(0,0)+(i*m+j)*L", "Answer": "D"}
{"ID": 2518, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "十字链表是如何存储稀疏矩阵的？", "A": "仅使用行单链表", "B": "仅使用列单链表", "C": "将行单链表和列单链表结合起来", "D": "使用数组存储所有元素", "Answer": "C"}
{"ID": 2519, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "三元组表通常用于存储什么类型的数据结构？", "A": "稀疏矩阵", "B": "队列", "C": "树或森林", "D": "图", "Answer": "A"}
{"ID": 2520, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "稀疏矩阵的常见存储方式是什么？", "A": "使用标准二维数组", "B": "仅存储非零元素", "C": "使用链表存储非零元素", "D": "使用特殊的数据结构如三元组表或十字链表", "Answer": "D"}
{"ID": 2521, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "二叉链表又名什么，并可用来表示什么？", "A": "左孩子右兄弟表示法，用来表示树或森林", "B": "右孩子左兄弟表示法，用来表示图", "C": "左孩子右兄弟表示法，用来表示队列", "D": "右孩子左兄弟表示法，用来表示栈", "Answer": "A"}
{"ID": 2522, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "栈和队列具有相同的（)。", "A": "抽象数据类型", "B": "逻辑结构", "C": "存储结构", "D": "运算", "Answer": "B"}
{"ID": 2523, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "栈是（）。", "A": "顺序存储的线性结构", "B": "链式存储的非线性结构", "C": "限制存取点的线性结构", "D": "限制存储点的非线性结构", "Answer": "C"}
{"ID": 2524, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "（）不是栈的基本操作。", "A": "删除栈顶元素", "B": "删除栈底元素", "C": "判断栈是否为空", "D": "将栈置为空栈", "Answer": "B"}
{"ID": 2525, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "采用共享栈的好处是（）。", "A": "减少存取时间，降低发生上溢的可能", "B": "节省存储空间，降低发生上溢的可能", "C": "减少存取时间，降低发生下溢的可能", "D": "节省存储空间、降低发生下溢的可能", "Answer": "B"}
{"ID": 2526, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "允许对队列进行的操作有（)。", "A": "对队列中的元素排序", "B": "取出最近进队的元素", "C": "在队列元素之间插入元素", "D": "删除队头元素", "Answer": "D"}
{"ID": 2527, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "已知循环队列的存储空间为数组A[21]，front指向队头元素的前个位置，rear指向队尾元素，假设当前front和rear的值分别为8和3，则该队列的长度为（)。", "A": 5, "B": 6, "C": 16, "D": 17, "Answer": "C"}
{"ID": 2528, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下面（）用到了队列。", "A": "括号匹配", "B": "迷宫求解", "C": "页面替换算法", "D": "递归", "Answer": "C"}
{"ID": 2529, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对特殊矩阵采用压缩存储的主要目的是（)。", "A": "表达变得简单", "B": "对矩阵元素的存取变得简单", "C": "去矩阵中的多余元素", "D": "减少不必要的存储空间", "Answer": "D"}
{"ID": 2530, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对称矩阵压缩存储时，需要表长为（）的顺序表。", "A": "n/2", "B": "n*n/2", "C": "n(n + 1)/2", "D": "n(n-1)/2", "Answer": "C"}
{"ID": 2531, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在一个二维数组A中，假设每个数组元素的长度为3个存储单元，行下标i为0~8，列下标i为0~9，从首地址SA开始连续存放。在这种情况下，元素A[8][5]的起始地址为（）。", "A": "SA+141", "B": "SA+144", "C": "SA+222", "D": "SA+255", "Answer": "D"}
{"ID": 2532, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定利用数组a[n]顺序存储一个栈，用top表示栈项指针，用top==-1表示栈空，并已知栈未满，当元素×进栈时所执行的操作为（）。", "A": "a[--top]=x", "B": "a[top--]=x", "C": "a[++top]=x", "D": "a[top++]=x", "Answer": "C", "Explanation": "初始时top为-1，则第一个元素入栈后，top为0，即指向栈顶元素，故入栈时应先将指针top加1，再将元素入栈，只有选项C符合题意。"}
{"ID": 2533, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设链表不带头结点且所有操作均在表头进行，则下列最不适合作为链栈的是（)。", "A": "只有表头丝点指针，没有表尾指针的双向循环链表", "B": "只有表尾结点指针，没有表头指针的双向循环链表", "C": "只有表头结点指针，没有表尾指针的单向循环链表", "D": "只有表尾结点指针，没有表头指针的单向循环链表", "Answer": "C", "Explanation": "对于双向循环链表，不管是表头指针还是表尾指针，都可以很方便地找到表头结点，方便在表头做插入或删除操作。而单循环链表通过尾指针可以很方便地找到表头结点，但通过头指针找尾结点则需要遍历一次链表。对于C，插入和删除结点后，找尾结点需要花费O(n）的时间。"}
{"ID": 2534, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "链栈（不带头结点）执行Pop操作，并将出栈的元素存在X中，应该执行（）。", "A": "x=top; top=top->next", "B": "x=top->data", "C": "top=top->next: x=top->data", "D": "x=top->data; top=top->next", "Answer": "D", "Explanation": "这里假设栈顶指针指向的是栈顶元素，所以选D；而A中首先将toP指针赋给了x，错误。B中没有修改top指针的值：C为top指针指向栈项元素的上一个元素时的答案。"}
{"ID": 2535, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设a,b,c,d,e,f以所给的次序进栈，若在进栈操作时，允许出栈操作，则下面得不到的序列为（）。", "A": "fedcba", "B": "bcafed", "C": "dcefba", "D": "cabdef", "Answer": "D", "Explanation": "根据栈“先进后出”的特点，且在进栈操作的同时允许出栈操作，显然管案D中最先出栈。"}
{"ID": 2536, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若一个栈的输入序列是1，2,3,...，n，输出序列的第一个元素是n，则第i个输出元素是（）。", "A": "不确定", "B": "n-i", "C": "n-i-1", "D": "n-i+ 1", "Answer": "D", "Explanation": "第n个元素第一个出栈，说明前n-1个元素都已经按顺序入栈，由“先进后出”的特点可知，此时的输出序列一定是输入序列的逆序，故答案选D。"}
{"ID": 2537, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个栈的输入序列为1.2.3,...，n，输出序列的第一个元素是i，则第j个输出元素是（)。", "A": "i-j-1", "B": "i-j", "C": "j-i+1", "D": "不确定", "Answer": "D", "Explanation": "当第i个元素第一个出栈时，则之前的元紊可以依次排在i之后出栈，但剩余的元素可以在此时进栈并且也会排在i之前的元素出栈，所以第j个出栈的元素是不确定的。"}
{"ID": 2538, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某栈的输入序列为a,b,c,d，下面的4个序列中，不可能为其输出序列的是（）。", "A": "a, b, c,d", "B": "c, b, d, a", "C": "d,c, a, b", "D": "a, c, b, d", "Answer": "C", "Explanation": "对于A，可能的顺序是a入，a出，b入，b出，c入，c出，d入，d出。对于B，可能的顺序是a入，b入，c入，c出，b出，d入，d出，a出。对于D，可能的顺序是a入，a出，b入，c入：c出，b出，d入，d出。C没有对应的序列。"}
{"ID": 2539, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若一个栈的输入序列是P_1,P_2,P_3，P_4,输出序列是1,2,3,...,n，若P_3=1，则P_1的值（）", "A": "可能是2", "B": "一定是2", "C": "不可能是2", "D": "不可能是3", "Answer": "C", "Explanation": "入栈序列是P_1,P_2,...,P_n。由于P_3=1，即P_1，P_2,P_3,连续入栈后，第个出栈元素是P_3，说明P_1，P_2已经按序进栈，根据先进后出的特点可知，P_2必定在P_1之前出栈，而第二个出栈元素是2，而此时P_1不是栈顶元素，因此P_1的值不可能是2。"}
{"ID": 2540, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知一个栈的入栈序列是1,2,3,4，其出栈序列为P_1,P_2,P_3,P_4，则P_2,P_4不可能是（)。", "A": "2,4", "B": "2,1", "C": "4,3", "D": "3,4", "Answer": "C", "Explanation": "逐个判断每个选项可能的入栈出栈顺序。对于A，可能的顺序是1入，1出，2入，2出，3入，3出，4入，4出。对于B，可能的顺序是1入，2入，3入，3出，2出，4入，4出，1出。对于D，可能的顺序是1入，1出，2入，3入，3出，2出，4入，4出。C没有对应的序列，因为当4在栈中时，意味着前面的所有元素（1、2、3）都已在栈中或曾经入过栈，此时若4第二个出栈，即栈中还有两个元素，且这两个元素是有序的（对应入栈顺序），只能为(1,2)、（1，3)、(2，3)，若是(1，2)这个序列，则23已在位置山栈，不可能再在位置出栈，若是(1,3)和(2,3)这种情况中的任一种，则3定是下一个出栈元素，即p3一定是3，所以P4不可能是3。"}
{"ID": 2541, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设栈的初始状态为空，当字符序列“n1_\"作为栈的输入时，输出长度为3，且可用做C语言标识符的序列有（）个。", "A": 4, "B": 5, "C": 3, "D": 6, "Answer": "C", "Explanation": "标识符只能以英文字母或下画线开头，而不能是数字开头。故由n、1、三个字符组合成的标识符有n1_，n_1，_1n和_n1四种。第一种，n进栈再出栈，1进栈再出栈，_进栈再出栈。第二种：n进栈再出栈，1进栈，_进栈，_出栈，1出栈。第三种：n进栈，1进栈，_进栈，_出栈，1出栈，n出栈。而根据栈的操作特性，_n1这种情况不可能出现，故选C。"}
{"ID": 2542, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个队列的入队顺序是1,2,3,4，则出队的输出顺序是（）。", "A": "4, 3, 2, 1", "B": "1,2,3,4", "C": "1,4,3,2", "D": "3, 2, 4, 1", "Answer": "B", "Explanation": "队列的入队顺序和出队顺序是一致的，这是和栈不同的。"}
{"ID": 2543, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若用数组A[0...5]来实现循环队列，且当前rear和front的值分别为1和5，当从队列中删除一个元素，再加入两个元素后，rear和front的值分别为()。", "A": "3和4", "B": "3和0", "C": "5和0", "D": "5和1", "Answer": "B", "Explanation": "循环队列中，每删除一个元素，队首指针front=（front+1）%6，每插入一个元素，队尾指针rear=（rear+1）%6。上述操作后，front=0，rear=3。"}
{"ID": 2544, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设一个循环队列Q[MaxSize]的队头指针为front，队尾指针为rear，队列的最大容量为MaxSize，此外，该队列再没有其他数据成员，则判断该队的列满条件是（)。", "A": "Q.front==Q.rear", "B": "Q.front+Q.rear>=Maxsize", "C": "Q.front==(Q.rear+l)%MaxSize", "D": "Q.rear=(Q.front+1)%Maxsize", "Answer": "C", "Explanation": "既然不能附加任何其他数据成员，只能采用牺性一个存储单元的方法来区分是队空还是队满，约定以“队列头指针在队尾指针的下一位置作为队满的标志”，因此选C。选项A是判断队列是否空的条件，选项B和D都是干扰项。"}
{"ID": 2545, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若以1,2,3,4作为双端队列的输入序列，则既不能由输入受限的双端队列得到，又不能由输出受限的双端队列得到的输出序列是（）。", "A": "1, 2, 3, 4", "B": "4, 1, 3, 2", "C": "4, 2, 3, 1", "D": "4, 2, 1,3", "Answer": "C", "Explanation": "使用排除法。先看可由输入受限的双端队列产生的序列：设右端输入受限，1,2,3,4依次左入，则依次左出可得4,3,2,1，排除A；右出、左出、右出、右出可得到4,1,3,2，排除B；再看可由输出受限的双端队列产生的序列：设右端输出受限，1,2,3,4依次左入、左入、右入、左入，依次左出可得到4,2,1,3，排除D。"}
{"ID": 2546, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "表达式a*（b+c)-d的后缎表达式是（)。", "A": "abcd*+-", "B": "abc+*d-", "C": "abc*+d-", "D": "-+*abcd", "Answer": "B", "Explanation": "后缀表达式中，每个计算符号均直接位于其两个操作数的后面，按照这样的方式逐步根据计算的优先级将每个计算式进行变换得到后级表达式。"}
{"ID": 2547, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "利用栈求表达式的值时，设立运算数栈OPEN，假设OPEN只有两个存储单元，则在下列表达式中，不会发生溢出的是（）。", "A": "A-B* (C-D)", "B": "(A-B)*C-D", "C": "(A-B*C)-D", "D": "(A-B) * (C-D)", "Answer": "B", "Explanation": "利用栈求表达式的值时，可以分别设立运算符栈和运算数栈，其原理不变。选项B中A入栈B入栈，计算得R1，C入栈，计算得R2，D入栈，计算得R3，由此得栈深为2。A、C、D依次计算得栈深为4、3、3。因此选B。"}
{"ID": 2548, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "执行完下列语句段后，i的值为（)。\nint f(int x){\nreturn ((x>0)? x*f(x-1):2);\n}\nint i;\ni=f(f(l));", "A": 2, "B": 4, "C": 8, "D": "无限递归", "Answer": "B", "Explanation": "栈与递归有着紧密的联系。递归模型包括递归出口和递归体两个方面。递归出口是递归算法的出口，即终止递归的条件。递归体是个递推的关系式。根据题意有\nf（0）=2;\nf (1)=1*f (0)=2;\nf (f (1))=f (2)=2*f (1)=4;\n即f（f（1））=4。因此本题答案为B。"}
{"ID": 2549, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于一个问题的递归算法求解和其相对应的非递归算法求解，（)。", "A": "递归算法通常效率高一些", "B": "非递归算法通常效率高一些", "C": "两者相同", "D": "无法比较", "Answer": "B", "Explanation": "通常情况下，递归算法在计算机实际执行的过程中包含很多的董复计算，所以效率会低。"}
{"ID": 2550, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "执行（）操作时，需要使用队列作为辅助存储空间。", "A": "查找散列（哈希）表", "B": "广度优先索图", "C": "前序（根）遍历二叉树", "D": "深度优先搜索图", "Answer": "B", "Explanation": "本题涉及第5章和第6章的内容，图的广度优先搜索类似于树的层序遍历，都要借助于队列。"}
{"ID": 2551, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列说法中，正确的是（）。", "A": "消除递归不一定需要使用栈", "B": "对同一输入序列进行两组不同的合法入栈和出栈组合操作，所得的输出序列也一定相同", "C": "通常使用队列来处理函数或过程调用", "D": "队列和栈都是运算受限的线性表,只允许在表的两端运算", "Answer": "A", "Explanation": "消除递归不一定需要使用栈"}
{"ID": 2552, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "有一个n*n的对称矩阵A，将其下三角部分接行存放在一维数组B中，而A[0][0]存放于B[0]中，则第i+1行的对角元素A[i][i]存放于B中的（）处。", "A": "(i+3)i/2", "B": "(i + 1)i/2", "C": "(2n-i+1)i/2", "D": "(2n- i-1)i/2", "Answer": "A", "Explanation": "此题要注意3个细节：矩阵的最小下标为0；数组下标也是从0开始的；矩阵按行优先存在数组中。注意到此三点，答案不难得到为A。此外，本类题建议采用特殊值代入法求解，例如，A[1][1]对应的下标应为2，代入后只有A满足条件。"}
{"ID": 2553, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若将n阶下三角矩阵A按列优先顺序压缩存放在一维数组B[1...n(n+1)/2+1]中，则存放到B[k]中的非零元素a_i,j（1≤i,j≤n）的下标i,j与k的对应关系是（)。", "A": "(j-1)(2n-j+1)/2+i-j", "B": "(j- 1)(2n -j+2)/2 +i-j +1", "C": "(j- 1)(2n - j+ 2)/2 + i-j", "D": "(j- 1)(2n -j+ 1)/2 + i-j- 1", "Answer": "B", "Explanation": "按列优先存储，故元素a_i,j之前有j-1列，共有n+(n-1)+...+(n-j+2)=(j-1)(2n-j+2)/2个元素，元素a_i,j是第j列上第i-j+1个元素，数组B下标从1开始,k=（j-1)(2n-j+2)/2+i-j+1。"}
{"ID": 2554, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是串？", "A": "任意字符的有限序列", "B": "仅由数字组成的序列", "C": "仅由特殊符号组成的序列", "D": "空格字符组成的序列", "Answer": "A"}
{"ID": 2555, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "串的长度是指什么？", "A": "串中字符的总数", "B": "串中空格字符的数量", "C": "串中特殊字符的数量", "D": "串中数字字符的数量", "Answer": "A"}
{"ID": 2556, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "空串与空格串有什么区别？", "A": "空串不包含任何字符，空格串包含空格字符", "B": "空串和空格串都不包含任何字符", "C": "空串包含空格字符，空格串不包含任何字符", "D": "空串和空格串是同一种类型的串", "Answer": "A"}
{"ID": 2557, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "子串和主串的关系是什么？", "A": "子串是主串中连续字符的序列", "B": "子串和主串是完全不同的", "C": "子串包含主串", "D": "子串比主串更长", "Answer": "A"}
{"ID": 2558, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "串和线性表的关系是什么？", "A": "串是特殊的线性表", "B": "串和线性表是完全不同的", "C": "串是线性表的子集", "D": "串是线性表的超集", "Answer": "A"}
{"ID": 2559, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "串的数据对象限定为什么？", "A": "字符集", "B": "数字集", "C": "特殊符号集", "D": "图形符号集", "Answer": "A"}
{"ID": 2560, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "串的基本操作通常以什么为对象？", "A": "子串", "B": "整个串", "C": "串中的单个字符", "D": "串中的特定部分", "Answer": "A"}
{"ID": 2561, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是串名？", "A": "串的标识符", "B": "串的长度", "C": "串的引用名称", "D": "串的类型", "Answer": "A"}
{"ID": 2562, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是空串？", "A": "串中不包含任何字符", "B": "串中只包含空格字符", "C": "串的长度为0", "D": "串中只包含特殊字符", "Answer": "A"}
{"ID": 2563, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "串作为线性表的特性是什么？", "A": "数据元素之间呈线性关系", "B": "数据元素之间无关联", "C": "数据元素之间呈非线性关系", "D": "数据元素之间随机关联", "Answer": "A"}
{"ID": 2564, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "StrAssign操作的作用是什么？", "A": "将一个字符串赋值给另一个字符串", "B": "复制一个字符串", "C": "连接两个字符串", "D": "清空一个字符串", "Answer": "A"}
{"ID": 2565, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "StrLength操作的目的是什么？", "A": "检查字符串是否为空", "B": "销毁一个字符串", "C": "比较两个字符串", "D": "求字符串的长度", "Answer": "D"}
{"ID": 2566, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "ClearString操作的作用是什么？", "A": "连接两个字符串", "B": "求子串", "C": "清空一个字符串", "D": "定位子串在主串中的位置", "Answer": "C"}
{"ID": 2567, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "Concat操作是用来做什么的？", "A": "连接两个字符串", "B": "求子串", "C": "清空一个字符串", "D": "定位子串在主串中的位置", "Answer": "A"}
{"ID": 2568, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "SubString操作的目的是什么？", "A": "定位子串在主串中的位置", "B": "连接两个字符串", "C": "销毁一个字符串", "D": "获取主串中的特定子串", "Answer": "D"}
{"ID": 2569, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "StrCompare操作是用来做什么的？", "A": "定位子串在主串中的位置", "B": "连接两个字符串", "C": "销毁一个字符串", "D": "比较两个字符串", "Answer": "D"}
{"ID": 2570, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "朴素模式匹配算法的基本过程是什么？", "A": "一次比较所有字符", "B": "逐个字符比较，匹配失败则主串和模式串指针回溯", "C": "仅比较主串和模式串的第一个字符", "D": "使用哈希函数比较主串和模式串", "Answer": "B"}
{"ID": 2571, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "朴素模式匹配算法的最坏时间复杂度是多少？", "A": "O(n)", "B": "O(nm)", "C": "O(m)", "D": "O(n+m)", "Answer": "B"}
{"ID": 2572, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "KMP算法中next数组的作用是什么？", "A": "记录模式串中每个字符的频率", "B": "指示模式串中每个字符的位置", "C": "当模式串失配时，指示下一次匹配开始的位置", "D": "存储主串中每个字符的索引", "Answer": "C"}
{"ID": 2573, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "KMP算法中求next数组的方法是什么？", "A": "根据模式串中字符的频率", "B": "根据模式串中重复子串的长度", "C": "从模式串的第三个字符开始，根据前一位进行比较和调整", "D": "比较主串和模式串中的每个字符", "Answer": "C"}
{"ID": 2574, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "串'ababaaababaa'的next数组值为（）。", "A": "01234567899", "B": "012121111212", "C": "011234223456", "D": "0123012322345", "Answer": "C", "Explanation": "计算过程如下| 编号 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 | 10 | 11 | 12 |\n|------|----|----|----|----|----|----|----|----|----|----|----|----|\n| S    | a  | b  | a  | b  | a  | a  | a  | b  | a  | b  | a  | a  |\n| PM   | 0  | 0  | 1 | 2  | 3  | 1  | 1  | 2  | 3  | 4  | 5  | 6  |\n| next | 0 | 1  | 1  | 2  | 3  | 4  | 2  | 2  | 3  | 4  | 5  | 6  |"}
{"ID": 2575, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "串'ababaaababaa'的next数组为（）。", "A": "-1, 0, 1,2,3,4, 5, 6,7, 8, 8,8", "B": "-1,0, 1,0, 1, 0, 0, 0, 0, 1, 0, 1", "C": "-1,0, 0, 1,2, 3, 1, 1,2, 3, 4, 5", "D": "-1,0, 1,2, -1, 0, 1, 2, 1, 1,2,3", "Answer": "C", "Explanation": "计算过程如下| 编号 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 | 10 | 11 | 12 |\n|------|----|----|----|----|----|----|----|----|----|----|----|----|\n| S    | a  | b  | a  | b  | a  | a  | a  | b  | a  | b  | a  | a  |\n| PM   | 0  | 0  | 1 | 2  | 3  | 1  | 1  | 2  | 3  | 4  | 5  | 6  |\n| next | -1 | 0  | 0  | 1  | 2  | 3  | 1  | 1  | 2  | 3  | 4  | 5  |"}
{"ID": 2576, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "串'ababaaababaa'的nextval数组为（)。", "A": "0, 1,0, 1, 1,2, 0, 1, 0, 1,0,2", "B": "0, 1, 0, 1, 1,4, 1, 1,0, 1,0,2", "C": "0, 1, 0, 1, 0, 4, 2, 1, 0, 1, 0, 4", "D": "0, 1, 1, 1, 0, 2, 1, 1, 0, 1, 0, 4", "Answer": "C", "Explanation": "计算过程如下| 编号 |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 | 10 | 11 | 12 |\n|------|----|----|----|----|----|----|----|----|----|----|----|----|\n| S    | a  | b  | a  | b  | a  | a  | a  | b  |a  |b  | a  | a  |\n| next | 0  | 1  | 1  | 2  | 3  | 4  | 2  | 2  | 3  | 4  | 5  | 6  |\n| nextval | 0 | 1 | 0 | 1 | 0 | 4 | 2 | 1 | 0 | 1 | 0 | 4 |"}
{"ID": 2577, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是树？", "A": "一种递归的数据结构，具有分层结构", "B": "n个节点的有限集，当n=0时为空树", "C": "一种线性结构", "D": "由双亲节点和孩子节点组成，可以形成闭环", "Answer": "A"}
{"ID": 2578, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "结点的深度和高度是如何定义的？", "A": "深度是从根到节点的路径长度，高度是从节点到叶子的最长路径长度", "B": "深度是从叶子到根的路径长度，高度是从根到节点的最长路径长度", "C": "所有节点的深度和高度相同", "D": "深度和高度无法确定", "Answer": "A"}
{"ID": 2579, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "树中路径的方向是怎样的？", "A": "从上向下，从双亲指向孩子", "B": "从下向上，从孩子指向双亲", "C": "在双亲和孩子之间可以双向行走", "D": "同一双亲的孩子之间存在路径", "Answer": "A"}
{"ID": 2580, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "度为m的树中第i层最多有多少个结点？", "A": "m的i次方", "B": "pow(m, i)", "C": "pow(m, i-1)", "D": "m的(i-1)次方", "Answer": "C"}
{"ID": 2581, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "高度为h的m叉树最多有多少个结点？", "A": "pow(m, h)-1", "B": "pow(m, h)-1/(m-1)", "C": "(pow(m, h)-1)/(m-1)", "D": "h的m次方", "Answer": "A"}
{"ID": 2582, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "树的路径长度是怎么定义的？", "A": "从树根到每个结点的路径长度的总和", "B": "从所有叶子结点到树根的路径长度的总和", "C": "所有结点之间的路径长度的总和", "D": "树中最长的路径长度", "Answer": "A"}
{"ID": 2583, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "二叉树的定义是什么？", "A": "有序树，可以为空", "B": "每个结点最多有两个孩子的树", "C": "无序树，不能为空", "D": "每个结点最多有一个孩子的树", "Answer": "A"}
{"ID": 2584, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "完全二叉树中度为1的结点的特点是什么？", "A": "只有一个孩子且是左孩子", "B": "可能有多个且在右孩子上", "C": "只有一个孩子且是右孩子", "D": "不可能有度为1的结点", "Answer": "A"}
{"ID": 2585, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "具有n个结点的完全二叉树的高度是多少？", "A": "log(n)", "B": "log(n+1)或logn+1", "C": "n", "D": "n+1", "Answer": "B"}
{"ID": 2586, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "非空二叉树上的叶子结点数与度为2的结点数的关系是什么？", "A": "叶子结点数等于度为2的结点数加1", "B": "叶子结点数等于度为2的结点数", "C": "叶子结点数少于度为2的结点数", "D": "叶子结点数多于度为2的结点数加1", "Answer": "A"}
{"ID": 2587, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "二叉树线索化的实质是什么？", "A": "在遍历过程中将空指针改为指向前驱或后继的线索", "B": "将所有空指针替换为新添加的叶子节点", "C": "创建完全二叉树", "D": "随机连接树中的空指针", "Answer": "A"}
{"ID": 2588, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "如何将普通树转换为二叉树？", "A": "在兄弟结点之间加连线，并保留与第一个孩子的连线，然后顺时针旋转45°", "B": "将树的每个结点分解为多个二叉树结点", "C": "将树中的每个结点替换为二叉树的根结点", "D": "删除所有非叶子结点", "Answer": "A"}
{"ID": 2589, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在二叉树线索化过程中，空指针是如何处理的？", "A": "替换为指向相邻结点的指针", "B": "删除所有空指针", "C": "替换为新的叶子结点", "D": "保持不变", "Answer": "A"}
{"ID": 2590, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "二叉排序树插入操作的特点是什么？", "A": "如果插入的关键字已存在，则不插入", "B": "总是创建新的树", "C": "重复插入相同的关键字", "D": "替换已存在的相同关键字", "Answer": "A"}
{"ID": 2591, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "如何构造二叉排序树？", "A": "从一个空树开始，逐个插入给定的关键字", "B": "创建一个只有根节点的树", "C": "创建一个完全二叉树", "D": "创建一个平衡二叉树", "Answer": "A"}
{"ID": 2592, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "二叉排序树的插入操作是如何进行的？", "A": "如果树为空，创建新节点；否则递归地插入左子树或右子树", "B": "总是插入为根节点", "C": "一定不插入为叶子节点", "D": "随机插入节点", "Answer": "A"}
{"ID": 2593, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在二叉排序树中进行递归查找的过程是怎样的？", "A": "沿着树不断比较关键字，向左或右移动直到找到或到达叶子节点", "B": "随机搜索树中的节点", "C": "仅比较树的根节点", "D": "比较所有节点直到找到关键字", "Answer": "A"}
{"ID": 2594, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在二叉排序树中删除只有一个子树的节点的方法是什么？", "A": "让子树代替该节点", "B": "删除整个子树", "C": "保留节点但删除其子树", "D": "替换该节点为其子树的叶节点", "Answer": "A"}
{"ID": 2595, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是节点的带权路径长度？", "A": "从根到节点的路径长度", "B": "从根到任意节点的路径长度与该节点上权值的乘积", "C": "节点的权值", "D": "所有节点的权值之和", "Answer": "B"}
{"ID": 2596, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在二叉排序树中删除叶子节点的处理方法是什么？", "A": "直接删除叶子节点", "B": "将叶子节点替换为其左孩子", "C": "将叶子节点替换为其右孩子", "D": "将叶子节点保留为一个空节点", "Answer": "A"}
{"ID": 2597, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "二叉排序树中删除一个结点的正确方法是什么？", "A": "若为叶节点则直接删除，若只有一子则让子树代替，若有两子则在右孩子找中序第一个填补", "B": "总是删除叶子节点", "C": "随机删除一个结点", "D": "替换要删除的结点与其右孩子", "Answer": "A"}
{"ID": 2598, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "树的带权路径长度是如何定义的？", "A": "树中所有叶节点的带权路径长度和", "B": "树中所有节点的带权路径长度和", "C": "树的根节点的带权路径长度", "D": "树的深度乘以所有叶节点的权值和", "Answer": "A"}
{"ID": 2599, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "二叉排序树中进行查找的效率取决于什么？", "A": "树的大小", "B": "树的深度", "C": "树的宽度", "D": "树的结点数量", "Answer": "B"}
{"ID": 2600, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "树最适合用来表示（）的数据。", "A": "有序", "B": "无序", "C": "任意元素之间具有多种联系", "D": "元素之间具有分支层次关系", "Answer": "D"}
{"ID": 2601, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "树的路径长度是从树根到每个结点的路径长度的（）。", "A": "总和", "B": "最小值", "C": "最大值", "D": "平均值", "Answer": "A"}
{"ID": 2602, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "具有10个叶子结点的二叉树中有（）个度为2的结点。", "A": 8, "B": 9, "C": 10, "D": 11, "Answer": "B"}
{"ID": 2603, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个具有1025个结点的二叉树的高h为（）。", "A": "11", "B": "10", "C": "11 ~ 1025", "D": "10 ~ 1024", "Answer": "C"}
{"ID": 2604, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "引入线索二叉树的目的是（）", "A": "加快查找结点的前驱或后继的速度", "B": "为了能在二叉树中方便插入和删除", "C": "为了能方便找到双亲", "D": "使二叉树的遍历结果唯一", "Answer": "A"}
{"ID": 2605, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "线索二叉树是一种（）结构。", "A": "逻辑", "B": "逻辑和存储", "C": "物理", "D": "线性", "Answer": "C"}
{"ID": 2606, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "利用二叉链表存储森林时，根结点的右指针是（）", "A": "指向最左兄弟", "B": "指向最右兄弟", "C": "一定为空", "D": "不一定为空", "Answer": "D"}
{"ID": 2607, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "并查集的结构是一种（)。", "A": "二叉链表存储的二叉树", "B": "双亲表示法存储的树", "C": "顺序存储的二叉树", "D": "孩子表示法存储的树", "Answer": "B"}
{"ID": 2608, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于一棵具有n个结点、度为4的树来说，（)。", "A": "树的高度至多是n-3", "B": "树的高度至多是n-4", "C": "第i层上至多有4(i-1)个结点", "D": "至少在某一层上正好有4个结点", "Answer": "A", "Explanation": "要使得具有n个结点、度为4的树的高度最大，就要使得每层的结点数尽可能少，除最后一层外，每层的结点数是1，最终该树的高度为n-3。树的度为4只能说明存在某结点正好（也最多）有4个孩子结点，D错误。"}
{"ID": 2609, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "度为4、高度为h的树，（)。", "A": "至少有h+3个结点", "B": "至多有4h-1个结点", "C": "至多有4h个结点", "D": "至少有h+4个结点", "Answer": "A", "Explanation": "要使得度为4、高度为h的树的总结点数最少，带要满足以下两个条件：\n①至少有一个结点有4个分支。\n②每层的结点数目尽可能少。"}
{"ID": 2610, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下说法中，正确的是（）。", "A": "在完全二叉树中，叶子结点的双亲的左兄弟（若存在）一定不是叶子结点", "B": "任何一棵二叉树，叶子结点个数为度为2的结点数减1，即n_0=n_2-1", "C": "完全二叉树不适合顺序存储结构，只有满二叉树适合顺序存储结构", "D": "结点按完全二叉树层序编号的二叉树中，第i个结点的左孩子的编号为2i", "Answer": "A", "Explanation": "在完全二叉树中，叶子结点的双亲的左兄弟的孩子一定在其前面（且一定存在），故双亲的左兄弟（若存在）一定不是叶结点，A正确。n_0应等于n_2+1，B错误。完全二叉树和满二叉树均可以采用顺序存储结构，C错误。第1个结点的左孩子不一定存在，D错误。选项B的这种通用公式适用于所有二叉树，我们应能立即联想到采用特殊值代入法验证，如画一个只含3个结点的满二叉树的草图来验证是否满足条件。"}
{"ID": 2611, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设高度为h的二叉树上只有度为0和度为2的结点，则此类二叉树中所包含的结点数至少为（）。", "A": "h", "B": "2h-1", "C": "2h+1", "D": "h+1", "Answer": "B", "Explanation": "除根结点层只有1个结点外，其他h一1层均有两个结点，结点总数=2(h-1)+1=2h-1。"}
{"ID": 2612, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设二叉树只有度为0和2的结点，其结点个数为15，则该二叉树的最大深度为（）。", "A": 4, "B": 5, "C": 8, "D": 9, "Answer": "C", "Explanation": "第一层有一个结点，其余h-1层上各有两个结点，总结点数=1+2(h-1)=15，h=8。"}
{"ID": 2613, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若一棵二叉树有126个结点，在第7层（根结点在第1层）至多有（）个结点。", "A": 32, "B": 64, "C": 63, "D": "不存在第7层", "Answer": "C", "Explanation": "要使二叉树第7层的结点数最多，只考虑树高为7层的情况，7层满二叉树有127个结点126仅比127少1个结点，只能少在第7层，故第7层最多有2^6-1=63个结点。"}
{"ID": 2614, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在一颗完全二叉树中，其根的序号为1，（）可判定序号为P和q的两个结点是否在同一层。", "A": "[log2p]=[log2q]", "B": "log2p=log2q", "C": "[log2p]+1=[log2q]", "D": "[log2p]+1=[log2q]+1", "Answer": "A", "Explanation": "由完全二叉树的性质，编号为i（i≥1）的结点所在的层次为[log2i]+1，若两个结点位于同一层，则定有[log2p]+1=[log2q]+1，因此成立。"}
{"ID": 2615, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定一棵三叉树的结点数为50，则它的最小高度为（）。", "A": 3, "B": 4, "C": 5, "D": 6, "Answer": "C", "Explanation": "问题是求解50≤(3^h-1)/2的最小h值,即h≥log3101，有h=[log3101]=5。"}
{"ID": 2616, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于一棵满二叉树，共有n个结点和m个叶子结点，高度为h，则（）。", "A": "n=h+m", "B": "n+m=2h", "C": "m=h-1", "D": "n=2^h-1", "Answer": "D", "Explanation": "对于高度为h的满二叉树，n=2^0+2^1+...+2^(h-1)=2^h-1,m=2^(h-1)，故选D。"}
{"ID": 2617, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在下列关于二叉树遍历的说法中，正确的是（）。", "A": "若有一个结点是二叉树中某个子树的中序遍历结果序列的最后一个结点，则它一定是该子树的前序遍历结果序列的最后一个结点", "B": "若有一个结点是二叉树中某个子树的前序遍历结采序列的最后一个结点，则它一定是该子树的中序遍历结果序列的最后一个结点", "C": "若有一个叶子结点是二叉树中某个子树的中序遍历结果序列的最后一个结点，则它一定是该子树的前序遍历结果序列的最后个结点", "D": "若有一个叶子结点是二叉树中某个子树的前序遍历结采序列的最后一个结点，则它一定是该子树的中序遍历结果序列的最后结点", "Answer": "C", "Explanation": "二叉树中序遍历的最后一个结点一定是从根开始沿右子女指针链走到底的结点，设用p指示。若结点p不是叶子结点（其左子树非空)，则前序遍历的最后一个结点在它的左子树中，A、B错：若结点P是叶子结点，则前序与中序遍历的最后一个结点就是它，C正确。若中序遍历的最后一个结点p不是叶子结点，它还有一个左子女q，结点q是叶子结点，那么结点q是前序遍历的最后一个结点，但不是中序遍历的最后一个结点，D错。"}
{"ID": 2618, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在任何一棵二叉树中，若结点a有左孩子b、右孩子C，则在结点的先序序列、中序序列、后序序列中，（）。", "A": "结点b一定在结点a的前面", "B": "结点a-一定在结点c的前面", "C": "结点b一定在结点C的前面", "D": "结点a一定在结点b的前面", "Answer": "C", "Explanation": "这三种遍历方式中，无论哪种遍历方式，都先遍历左子树，再历右子树，所以结点b一定在结点c的前面访问。"}
{"ID": 2619, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设n，m为一棵二叉树上的两个结点，在后序遍历时，n在m前的条件是（)", "A": "n在m右方", "B": "n是m祖先", "C": "n在m左方", "D": "n是m子孙", "Answer": "D", "Explanation": "后序遍历的顺序是LRN，若n在N的左子树，m在N的右子树，则在后序遍历的过程中n在m之前访问：若n是m的子孙，设m在N的位置，则n无论是在m的左子树还是在右子树，在后序遍历的过程中n都在m之前访问。其他都不可以。C要成立，要加上两个结点位于同一层。"}
{"ID": 2620, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在二叉树的前序序列、中序序列和后序序列中，所有叶子结点的先后顺序（）", "A": "都不相同", "B": "完全相同", "C": "前序和中序相同，而与后序不同", "D": "中序和后序相同，而与前序不同", "Answer": "B", "Explanation": "在三种遍历方式中，访问左右子树的先后顺序是不变的，只是访问根结点的顺序不同，因此叶子结点的先后顺序完全相同。此外，读者可以采用特殊值法，画一个结点数为3的满三叉树采用三种遍历方式来验证答案的正确性"}
{"ID": 2621, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "前序为A,B,C，后序为C.B,A的二叉树共有（）。", "A": "1棵", "B": "2 棵", "C": "3棵", "D": "4棵", "Answer": "D", "Explanation": "前序为A、B、C的不同二叉树共有5种，其中后序为C、B、A的有4种（前4种)，部是单支树"}
{"ID": 2622, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一棵非空的二叉树的先序遍历序列与后序遍历序列正好相反，则该二叉树一定满足（）", "A": "所有的结点均无左孩子", "B": "所有的结点均无右孩子", "C": "只有一个叶结点", "D": "是任意一棵二叉树", "Answer": "C", "Explanation": "非空树的先序序列和后序序列相反，即“根左右”与“左右根”顺序相反，因此树只有根结点，或者根结点只有左子树或右子树，以此类推，其子树有同样的性质。因此，树中所有非叶结点的度均为1，即二叉树仅有一个叶结点。"}
{"ID": 2623, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设结点X和Y是二叉树中任意的两个结点，在该二叉树的先序遍历序列中X在Y之前，而在其后序遍历序列中X在Y之后，则X和Y的关系是（）", "A": "X是Y的左兄弟", "B": "X是Y的右兄弟", "C": "X是Y的祖先", "D": "X是Y的后裔", "Answer": "C", "Explanation": "设二叉树的前序遍历顺序为NLR，后序遍历顺序为LRN。根据题意，在前序遍历序列中X在Y之前，在后序遍历序列中X在Y之后，若设X在根结点的位置，Y在其左子树或右子树中，即满足要求。"}
{"ID": 2624, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若二叉树中结点的先序序列是..a...b..，中序序列是..b...a..，则（)", "A": "结点a和结点b分别在某结点的左子树和右子树中", "B": "结点b在结点a的右子树中", "C": "结点b在结点a的左子树中", "D": "结点和结点b分别在某结点的两棵非空子树中", "Answer": "C", "Explanation": "先序序列是...a...b...，说明b是在a的左子树上或者a在b的祖先的左子树上。中序序列是...b...a...，说明b在a的左子树上或者a在b的右子树上，综上所述，b在a的左子树上。"}
{"ID": 2625, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一棵二叉树的前序遍历序列为1234567，它的中序遍历序列可能是（）", "A": "3124567", "B": "1234567", "C": "4135627", "D": "1463572", "Answer": "B", "Explanation": "由题可知，1为根结点，2为1的孩子。对于选项A，3应为1的左孩子，前序序列应为13...，不符。类似的选项C也错误。对于选项B，2为1的右孩子，3为2的右孩子...，满足题意。对于选项D，463572应为1的右子树，2为1的右孩子，46357为2的左子树，3为2的左孩子，46为3的左子树，57为3的右子树，前序序列4、6应相连，5、7应相连，不符。"}
{"ID": 2626, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列序列中，不能唯一地确定一棵二叉树的是（）。", "A": "层次序列和中序序列", "B": "先序序列和中序序列", "C": "后序序列和中序序列", "D": "先序序列和后序序列", "Answer": "D", "Explanation": "先序序列为NLR，后序序列为LRN，虽然可以唯一确定树的根结点，但无法划分左、右子树。例如，先序序列为AB，后序序列为BA"}
{"ID": 2627, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知一棵二叉树的层次序列为ABCDEF，中序序列为BADCFE，则先序序列为（）", "A": "ACBEDF", "B": "ABCDEF", "C": "BDFECA", "D": "FCEDBA", "Answer": "B", "Explanation": "通过构造二叉树即可得"}
{"ID": 2628, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在线索二叉树中，下列说法不正确的是（）。", "A": "在中序线索树中，若某结点有右孩子，则其后继结点是它的右子树的最左下结点", "B": "在中序线索树中，若某结点有左孩子，则其前驱结点是它的左子树的最右下结点", "C": "线索二叉树是利用二叉树的n十1个空指针来存放结点的前驱和后继信息的", "D": "每个结点通过线索都可以直接找到它的前驱和后继", "Answer": "D", "Explanation": "不是每个结点通过线索都可以直接找到它的前驱和后继。在先序线索二叉树中查找一个结点的先序后继很简单，而查找先序前驱必须知道该结点的双亲结点。同样，在后序线索二叉树中查找一个结点的后序前驱也很简单，而查找后序后继也必须知道该结点的双亲结点，二叉链表中没有存放双亲的指针。"}
{"ID": 2629, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "二叉树在线索化后，仍不能有效求解的问题是（）。", "A": "先序线索二叉树中求先序后继", "B": "中序线索二叉树中求中序后继", "C": "中序线索二叉树中求中序前驱", "D": "后序线索二叉树中求后序后继", "Answer": "D", "Explanation": "后序线索二叉树不能有效解决求后序后继的问题。结点E的右指针指向右孩子，而在后序序列中E的后继结点为B，在查找E的后继时后序线索不能起到任何作用，只能按常规方法来查找。"}
{"ID": 2630, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某二叉树的先序序列和后序序列正好相反，则该二叉树一定是（)。", "A": "空或只有一个结点", "B": "高度等于其结点数", "C": "任一结点无左孩子", "D": "任一结点无右孩子", "Answer": "B", "Explanation": "非空二叉树的先序序列和后序序列相反，即“根左右”与“左右根”顺序相反，因此树只有根结点，或根结点只有左子树或右子树，以此类推，其子树具有同样的性质，任意结点只有一个孩子，才能满足先序序列和后序序列正好相反。树形应为一个长链，因此选B"}
{"ID": 2631, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于树的说法中，正确的是（）。\nⅠ.对于有n个结点的二叉树，其高度为log2n\nⅡ.完全二叉树中，若一个结点没有左孩子，则它必是叶结点\nⅢ.高度为h（h>0）的完全二叉树对应的森林所含的树的个数一定是h\nⅣ.一棵树中的叶子数一定等于与其对应的二叉树的叶子数", "A": "Ⅰ,Ⅲ", "B": "Ⅳ", "C": "Ⅰ,Ⅱ", "D": "Ⅱ", "Answer": "D", "Explanation": "若n个结点的二叉树是一棵单支树，则其高度为n。完全二叉树中最多存在一个度为1的绍点且只有左孩子，若不存在左孩子，则一定也不存在右孩子，因此必是叶结点，Ⅰ正确。只有满二叉树才具有性质Ⅱ。在树转换为二叉树时，若有儿个叶子结点具有共同的双亲，则转换成二叉树后只有一个叶子结点（最右边的叶子结点），Ⅳ错误"}
{"ID": 2632, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设森林F对应的二叉树为B，它有m个结点，B的根为P，P的右子树结点个数为n，森林F中第一棵树的结点个数是（）", "A": "m-n", "B": "m-n-1", "C": "n+1", "D": "条件不足，无法确定", "Answer": "A", "Explanation": "森林转换成二叉树时采用孩子兄弟表示法，根结点及其左子树为森林中的第一棵树。右子树为其他剩余的树。所以，第一棵树的结点个数为m-n。"}
{"ID": 2633, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设F是一个森林，B是由F变换来的二叉树。若F中有n个非终端结点，则B中右指针域为空的结点有（）个。", "A": "n-1", "B": "n", "C": "n+1", "D": "n+2", "Answer": "C", "Explanation": "根据森林与二叉树转换规则“左孩子右兄弟”。二叉树B中右指针域为空代表该结点没有兄弟结点。森林中每棵树的根结点从第二个开始依次连接到前一棵树的根的右孩子，因此最后一棵树的根结点的右指针为空。另外，每个非终端结点，其所有孩子结点在转换之后，最后一个孩子的右指针也为空，故树B中右指针域为空的结点有n+1个"}
{"ID": 2634, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设X是树T中的1个非根结点，B是T所对应的二叉树。在B中，X是其双亲结点的右孩子，下列结论中正确的是（）", "A": "在树T中，X是其双亲结点的第一个孩子", "B": "在树T中，X一定无，右边兄弟", "C": "在树T中，X一定是叶子结点", "D": "在树T中，X一定有左边兄弟", "Answer": "D", "Explanation": "在二叉树B中，X是其双亲的右孩子，因此在树T中，X必是其双亲结点的右兑弟，换句话说，X在树中必有左兄弟。"}
{"ID": 2635, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列编码中，（）不是前缀码。", "A": "{00,01,10,11}", "B": "{0, 1, 00, 11}", "C": "{0,10,110,111}", "D": "{10,110,1110,1111}", "Answer": "B", "Explanation": "若没有一个编码是另一个编码的前缀，则称这样的编码为前缀编码。B选项中，0是00的前缀，1是11的前缀。"}
{"ID": 2636, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下对于哈夫曼树的说法中，错误的是（）", "A": "对应一组权值构造出来的哈夫曼树一般不是唯一的", "B": "哈夫曼树具有最小的带权路径长度", "C": "哈夫曼树中没有度为1的结点", "D": "哈夫曼树中除了度为1的结点外，还有度为2的结点和叶结点", "Answer": "D", "Explanation": "哈夫曼树通常是指带权路径长度达到最小的扩充二叉树，在其构造过程中每次选根的权值最小的两棵树，一棵作为左子树，一棵作为右子树，生成新的二叉树，新的二叉树根的权值应为其左右两棵子树根结点权值的和。至于谁做左子树，谁做右子树，没有限制，所以构造的哈夫曼树是不唯一的。哈夫曼树只有度为0和2的结点，度为0的结点是外结点，带有权值，没有度为1的结点。"}
{"ID": 2637, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "并查集中最核心的两个操作是：①查找，查找两个元素是否属于同一个集合：②合并如果两个元素不属于同一个集合，且所在的两个集合互不相交，则合并这两个集合，假设初始长度为10（0~9）的并查变集，按1-2、3-4、5-6、7-8、8-9、1-8、0-5、1-9的顺序进行查找和合并操作，最终并查集共有（）个集合。", "A": 1, "B": 2, "C": 3, "D": 4, "Answer": "C", "Explanation": "初始时，0～9各自成一个集合。查找1-2时，合并{1}和{2}：查找3-4时，合并{3}和{4};查找5-6时，合并{5}和{6}；查找7-8时，合并{7}和{8}；查找8-9时，合并{7，8}和{9}；查找1-8时，合并{1.2}和{7.8.9}：查找0-5时，合并{0}和{5.6}：查找1-9时，它们属于同一个集合。最终的集合为{0,5,6}、{1,2,7,8,9}和{3,4}，因此答案选C。"}
{"ID": 2638, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于并查集的叙述中，（）是错误的", "A": "并查集是用双亲表示法存储的树", "B": "并查集可用于实现克鲁斯卡尔算法", "C": "并查集可用于判断无向图的连通性", "D": "在长度为n的并查集中进行查找操作的时间复杂度为O(log2n)", "Answer": "D", "Explanation": "在用并查集实现Kruskal算法求图的最小生成树时：判断是否加入一条边之前，先查找这条边关联的两个顶点是否属于同-个集合（即判断加入这条边之后是否形成回路），若形成回路，则继续判断下一条边：若不形成回路，则将该边和边对应的顶点加入最小生成树T，并继续判断下一条边，直到所有顶点都已加入最小生成树T。B正确。用并查集判断无向图连通性的方法：遍历无向图的边，每遍历到一条边，就把这条边连接的两个顶点合并到同一个集合中，处理完所有边后，只要是相互连通的顶点都会被合并到同一个子集合中，相互不连通的项点一定在不同的子集合中。C正确。未做路径优化的并查集在最坏情况下的高度为O(n)，此时查找操作的时间复杂度为O(n)，时间复杂度通常指最坏情况下的时间复杂度。D错误。"}
{"ID": 2639, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "图是什么？", "A": "一种线性结构", "B": "一种非线性结构，顶点间关系任意，顶点之间可能存在多种关系", "C": "一种固定关系的数据结构", "D": "一种仅有单一关系的数据结构", "Answer": "B"}
{"ID": 2640, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "图的主要特点是什么？", "A": "图中的顶点之间存在固定数量的关系", "B": "图中的顶点之间关系是任意的，且任意两个顶点都可能相关", "C": "图是一种固定结构的数据集", "D": "图中的顶点不可能相互关联", "Answer": "B"}
{"ID": 2641, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "图中顶点的前驱和后继个数是如何限制的？", "A": "限制为固定数量", "B": "没有限制，可以是无限的", "C": "只能有一个前驱和一个后继", "D": "必须有两个或以上的前驱和后继", "Answer": "B"}
{"ID": 2642, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是强连通图？", "A": "一个有向图，其中任意一对顶点都是强连通的", "B": "一个无向图，其中任意一对顶点都是连通的", "C": "一个有向图，其中至少有一对顶点不是连通的", "D": "一个无向图，其中至少有一对顶点不是连通的", "Answer": "A"}
{"ID": 2643, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "连通图的生成树是什么？", "A": "一个包含全部顶点的极小连通子图，含有n-1条边", "B": "一个包含全部顶点的子图，含有n条边", "C": "一个包含部分顶点的极小连通子图", "D": "一个包含全部顶点的非连通子图", "Answer": "A"}
{"ID": 2644, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是简单路径？", "A": "顶点不重复出现的路径", "B": "任意一条路径", "C": "至少包含一个环的路径", "D": "所有顶点都重复出现的路径", "Answer": "A"}
{"ID": 2645, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是简单回路？", "A": "除第一个和最后一个顶点外，其余顶点不重复出现的回路", "B": "包含所有顶点的回路", "C": "不包含任何顶点的回路", "D": "只包含一个顶点的回路", "Answer": "A"}
{"ID": 2646, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "图的哪些存储结构分别用于无向图和有向图？", "A": "邻接多重表用于无向图，十字链表用于有向图", "B": "邻接矩阵用于无向图，邻接列表用于有向图", "C": "邻接列表用于无向图，邻接矩阵用于有向图", "D": "十字链表用于无向图，邻接多重表用于有向图", "Answer": "A"}
{"ID": 2647, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "路径长度是如何定义的？", "A": "路径上边的数目", "B": "路径上顶点的数目", "C": "从一个顶点到另一个顶点的距离", "D": "路径上所有边权值的和", "Answer": "A"}
{"ID": 2648, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是连通和强连通？", "A": "无向图中顶点间存在路径为连通，有向图中顶点间双向路径为强连通", "B": "无向图中顶点间双向路径为连通，有向图中顶点间存在路径为强连通", "C": "所有顶点都相互连通", "D": "所有顶点都不相互连通", "Answer": "A"}
{"ID": 2649, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是子图和生成子图？", "A": "子图是原图的一部分，生成子图包含原图所有顶点", "B": "子图包含原图所有顶点的一部分，生成子图是原图的一部分", "C": "子图和生成子图都包含原图所有顶点和边", "D": "子图和生成子图都不包含原图的任何顶点和边", "Answer": "B"}
{"ID": 2650, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是无向图的连通分量？", "A": "无向图中的极大连通子图", "B": "无向图中的任意连通子图", "C": "无向图中的最小连通子图", "D": "无向图中的非连通子图", "Answer": "A"}
{"ID": 2651, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是有向图的强连通分量？", "A": "有向图中的极大强连通子图", "B": "有向图中的任意强连通子图", "C": "有向图中的最小强连通子图", "D": "有向图中的非强连通子图", "Answer": "A"}
{"ID": 2652, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是连通图的生成树？", "A": "包含图中全部顶点的极小连通子图", "B": "包含图中部分顶点的极大连通子图", "C": "包含图中全部顶点的任意连通子图", "D": "包含图中全部顶点的最小连通子图", "Answer": "A"}
{"ID": 2653, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是生成森林？", "A": "非连通图中连通分量的生成树的集合", "B": "任意一个森林", "C": "由多个生成树组成的集合", "D": "非连通图中的所有顶点和边的集合", "Answer": "A"}
{"ID": 2654, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是带权图？", "A": "边上带有权值的图", "B": "所有边的权值都相同的图", "C": "一个没有边权值的图", "D": "一个只有部分边带权值的图", "Answer": "A"}
{"ID": 2655, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是带权路径长度？", "A": "在带权图中，一条路径上所有边的权值之和", "B": "路径上边的数量", "C": "路径上顶点的数量", "D": "路径的总长度", "Answer": "A"}
{"ID": 2656, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "无向图中，若顶点数为n，则边数的范围是多少？", "A": "[0, n(n-1)/2]", "B": "[0, 2n(n-1)]", "C": "[0, n]", "D": "[0, n(n+1)/2]", "Answer": "A"}
{"ID": 2657, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "何为稀疏图和稠密图？", "A": "边数少的为稀疏图，边数多的为稠密图", "B": "所有图都是稀疏图", "C": "所有图都是稠密图", "D": "无边的图为稀疏图，有边的图为稠密图", "Answer": "A"}
{"ID": 2658, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "邻接表的主要特点是什么？", "A": "空间复杂度低，适用于存储稀疏图", "B": "空间复杂度高，适用于存储稠密图", "C": "表示方式唯一", "D": "难以表示无向图", "Answer": "A"}
{"ID": 2659, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "邻接表与邻接矩阵在空间复杂度上的区别是什么？", "A": "邻接表空间复杂度低，适合稀疏图；邻接矩阵空间复杂度高，适合稠密图", "B": "邻接表空间复杂度高，适合稠密图；邻接矩阵空间复杂度低，适合稀疏图", "C": "两者空间复杂度相同", "D": "无法比较", "Answer": "A"}
{"ID": 2660, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在邻接表和邻接矩阵中，计算度、入度、出度的方便性如何？", "A": "邻接表计算有向图的度、入度不方便；邻接矩阵只需遍历对应行或列", "B": "邻接表计算度、入度、出度都很方便；邻接矩阵计算不方便", "C": "两者计算度、入度、出度都很方便", "D": "两者都不方便计算度、入度、出度", "Answer": "A"}
{"ID": 2661, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "如何在图中添加和删除顶点？", "A": "使用AddEdge(G, x, y)和RemoveEdge(G, x, y)", "B": "使用InsertVertex(G, x)和DeleteVertex(G, x)", "C": "使用Set_edge_value(G, x, y, v)", "D": "使用Get_edge_value(G, x, y)", "Answer": "B"}
{"ID": 2662, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "广度优先遍历（BFS）的主要特点是什么？", "A": "找到与一个顶点相邻的所有顶点，需要一个辅助队列", "B": "仅访问每个顶点一次", "C": "递归访问所有顶点", "D": "从最后一个顶点开始访问", "Answer": "A"}
{"ID": 2663, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在广度优先遍历中，哪些辅助操作是必需的？", "A": "FirstNeighbor和NextNeighbor", "B": "AddEdge和RemoveEdge", "C": "InsertVertex和DeleteVertex", "D": "Set_edge_value和Get_edge_value", "Answer": "A"}
{"ID": 2664, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "广度优先遍历的时间复杂度是多少？", "A": "对于邻接矩阵存储的图是O(∣V∣^2)，对于邻接表存储的图是O(∣V∣+∣E∣)", "B": "O(∣V∣)", "C": "O(∣E∣)", "D": "O(∣V∣*∣E∣)", "Answer": "A"}
{"ID": 2665, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "广度优先生成树是否唯一？", "A": "是唯一的", "B": "不唯一，基于邻接表存储的图的广度优先生成树也不唯一", "C": "只有在特定条件下不唯一", "D": "只有在无向图中唯一", "Answer": "B"}
{"ID": 2666, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "图中有关路径的定义是（）", "A": "由顶点和相邻项点序偶构成的边所形成的序列", "B": "由不同顶点所形成的序列", "C": "由不同边所形成的序列", "D": "上述定义都不是", "Answer": "A"}
{"ID": 2667, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "若一个具有n个顶点，e条边的无向图是一个森林，则该森林中必有（）棵树。", "A": "n", "B": "e", "C": "n-e", "D": 1, "Answer": "C"}
{"ID": 2668, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在含有n个顶点和e条边的无向图的邻接矩阵中，零元素的个数为（）。", "A": "e", "B": "2e", "C": "n^2-e", "D": "n^2-2e", "Answer": "D"}
{"ID": 2669, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "用邻接表法存储图所用的空间大小（）", "A": "与图的项点数和边数有关", "B": "只与图的边数有关", "C": "只与图的顶点数有关", "D": "与边数的平方有关", "Answer": "A"}
{"ID": 2670, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对邻接表的叙述中，（）是正确的。", "A": "无向图的接表中，第i不顶点的度为第i个链表中结点数的两倍", "B": "邻接表比邻接矩阵的操作更简便 ", "C": "邻接矩阵比邻接表的操作更简便", "D": "求有向图结点的度，必须遍历整个邻接表", "Answer": "D"}
{"ID": 2671, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "十字链表是（）的存储结构", "A": "无向图", "B": "有向图", "C": "无向图和有向图", "D": "都不是", "Answer": "B"}
{"ID": 2672, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "图的广度优先生成树的树高比深度优先生成树的树高（）。", "A": "小或相等", "B": "小", "C": "大或相等", "D": "大", "Answer": "A"}
{"ID": 2673, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于图的叙述中，正确的是（）。", "A": "图与树的区别在于图的边数大于等于顶点数", "B": "假设有图G=(V、(E))，顶点集V`⊆V，E`⊆E，则V`和(E`)构成G的子图", "C": "无向图的连通分量是指无向图中的极大连通子图", "D": "图的遍历就是从图中某一顶点出发访问图中其余顶点", "Answer": "C", "Explanation": "图与树的区别是逻辑上的区别，而不是边数的区别，图的边数也可能小于树的边数，故选项A错；若E`中的边对应的顶点不是V`的元素，V`和（E`)无法构成图，故选项B错；无向图的极大连通子图称为连通分量，选项C正确；图的遍历要求每个结点只能被访问一次且若图非连通，则从某一顶点出发无法访问到其他全部顶点，选项D的说法不准确。"}
{"ID": 2674, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于图的叙述中，正确的是（）", "A": "强连通有向图的任何预点到其他所有项点都有", "B": "图的任意顶点的入度等于出度", "C": "有向完全图一定是强连通有向团", "D": "有向图的边集的子集和顶点集的子集可构成原有向图的子图", "Answer": "C", "Explanation": "强连通有向图的任何项点到其他所有项点都有路径，但未必有弧：无向图任意顶点的入度等于出度，但有向图未必满足：若边集中的某条边对应的某个顶点不在对应的顶点集中，则有向图的边集的子集和顶点集的子集无法构成子图"}
{"ID": 2675, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于一个有n个顶点的图：若是连通无向图，其边的个数至少为（）若是强连通有向图，其边的个数至少为（）", "A": "n-1,n", "B": "n-1,(n-1)", "C": "n,n", "D": "n,n(n-1)", "Answer": "A", "Explanation": "对于连通无向图，边最少即构成一棵树的情形；对于强连通有向图，边最少即构成一个有向环的情形。"}
{"ID": 2676, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "无向图G有23条边，度为4的顶点有5个，度为3的项点有4个，其余都是度为2的项点，则图G有（）个顶点：", "A": 11, "B": 12, "C": 15, "D": 16, "Answer": "D", "Explanation": "由于在具有n个项点、e条边的无向图中；故可求得度为2的顶点数为7，从而共有16个顶点。"}
{"ID": 2677, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "具有6个项点的无向图，当有（）条边时能确保是一个连通图", "A": 8, "B": 9, "C": 10, "D": 11, "Answer": "D", "Explanation": "5个点构成一个完全无向图，需要10条边；再加上1条边后，能保证第6个顶点必然与此完全无向图构成一个连通图，故共需11条边。"}
{"ID": 2678, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "关于图的存储结构，（）是错误的。", "A": "使用邻接矩阵存储一个图时，在不考虑压缩存储的情况下，所占用的存储空间大小只与图中的顶点数有关，与边数无关", "B": "邻接表只用于有向图的存储，邻接矩阵适用于有向图和无向图", "C": "若一个有向图的邻接矩阵的对角线以下的元素为0，则该图的拓扑序列必定存在", "D": "存储无向图的邻接矩阵是对称的，故只需存储邻接矩阵的下（或上）三角部分", "Answer": "B", "Explanation": "n个顶点的图，若采用邻接矩阵表示，不考虑压缩存储，则存储空间大小为O(n^2)，A正确。邻接表可用于存储无向图，只是把每条边都视为两条方向相反的有向边，因此需要存储两次，B错误。由于邻接矩阵中对角线以下的元索全为0，若存在<i，j>，则必然有i<j，由传递性可知图中路径的项点编号是依次递增的，假设存在环k→...→j→k，由题设可知k<j<k，矛盾，故不存在环，拓扑序列必定存在，C正确。选项D显然正确。"}
{"ID": 2679, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若邻接表中有奇数个边表结点，则（)。", "A": "图中有奇数个结点", "B": "图中有偶数个结点", "C": "图为无向图", "D": "图为有向图", "Answer": "D", "Explanation": "无向图采用邻接表表示时，每条边存储两次，所以其边表结点的个数为偶数。题中边表结点为奇数个，故必然是有向图，且有奇数条边。"}
{"ID": 2680, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于广度优先算法的说法中，正确的是（)。\nⅠ.当各边的权值相等时，广度优先算法可以解决单源最短路径问题\nⅡ.当各边的权值不等时，广度优先算法可用来解决单源最短路径问题\nⅢ.广度优先遍历算法类似于树中的后序遍历算法\nⅣ.实现图的广度优先算法时，使用的数据结构是队列", "A": "Ⅰ,Ⅳ", "B": "Ⅱ,Ⅲ,Ⅳ", "C": "Ⅱ,Ⅳ", "D": "Ⅰ,Ⅲ,Ⅳ", "Answer": "A", "Explanation": "广度优先搜索以起始结点为中心，一层一层地向外层扩展遍历图的顶点，因此无法考虑到边权值，只适合求边权值相等的图的单源最短路径。广度优先搜索相当于树的层序遍历，Ⅲ错读。广度优先搜索要用到队列，深度优先搜索需要用到栈，Ⅳ正确。"}
{"ID": 2681, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "无向图G=(V,E)，其中V={a,b,C,d,e,，E={(a,b),(a,e),(a,c),(b,e),(c,J),(f,d),(e,d)}，对该图从a开始进行深度优先遍历，得到的顶点序列正确的是（）。", "A": "a,b,e,c,d,f", "B": "a,c,f,e,b,d", "C": "a,e,b,c,f,d", "D": "a,e,d,f,c,b", "Answer": "D", "Explanation": "从a开始，第二个遍历节点是e，继续深度遍历，依次是d，f，c，b"}
{"ID": 2682, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "无向图G=(V,E)，其中V={a,b,c,d,e,f},E={(a,b), (a,e),(a,c),(b,e),(c,J),(f,d),(e,d)}。对该图进行深度优先遍历，不能得到的序列是（）", "A": "acfdeb", "B": "aebdfc", "C": "aedfcb", "D": "abecdf", "Answer": "D", "Explanation": "从a开始，第二个遍历节点是b，继续深度遍历，依次是e，c，d，f"}
{"ID": 2683, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "使用DFS算法递归地遍历一个无环有向图，并在退出递归时输出相应顶点，这样得到的顶点序列是（)。", "A": "逆拓扑有序", "B": "拓扑有序", "C": "无序的", "D": "都不是", "Answer": "A", "Explanation": "对一个有向图做深度优先遍历，并未专门判断有向图是否有环（有向回路）存在，无论图中是否有环，都得到一个顶点序列。若无环，在退出递归过程中输出的应是逆拓扑有序序列。对有向无环图利用深度优先搜索进行拓扑排序的例子如下：如下图所示，退出DFS栈的顺序为efgdcahb，此图的一个拓扑序列为bhacdgfe。该方法的每一步均是先输出当前无后继的结点，即对每个结点v，先递归地求出v的每个后继的拓扑序列。对于一个AOV网，按此方法出的序列一个逆拓扑序列。"}
{"ID": 2684, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "任何一个无向连通图的最小生成树（）。", "A": "有一棵或多棵", "B": "只有一棵", "C": "一定有多棵", "D": "可能不存在", "Answer": "A", "Explanation": "当无向连通图存在权值相同的多条边时，最小生成树可能是不唯一的：另外，由于这是一个无向连通图，故最小生成树必定存在，从而选A。"}
{"ID": 2685, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下述中，正确的是（)。", "A": "只要无向连通图中没有权值相同的边，则其最小生成树唯一", "B": "只要无向图中有权值相同的边，则共最小生成树一定不唯一", "C": "从n个顶点的连通图中选取n-1条权值最小的边，可构成最小生成树", "D": "设连通图G含有n个顶点，则含有n个项点、n-1条边的子图一定是G的生成树", "Answer": "A", "Explanation": "选项A显然正确：选项B，若无向图本身就是一棵树，则最小生成树就是它本身，这时就是唯一的；选项C，选取的n-1条边可能构成回路：选项D，含有n个顶点、n-1条边的子图可能构成回路，也可能不连通。"}
{"ID": 2686, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下叙述中，正确的是（）", "A": "最短路径一定是简单路径", "B": "Dijkstra算法不适合求有回路的带权图的最短路径", "C": "Dijkstra算法不适合求任意两个顶点的最短路径", "D": "Floyd算法求两个项点的最短路径时，path_(k-1)一定是path_k的子集", "Answer": "A", "Explanation": "选项A正确。Dijkstra算法适合求解有回路的带权图的最短路径，也可以求任意两个顶点的最短路径，不适合求带负权值的最短路径问题。在用Floyd算法求两个顶点的最短路径时，当最短路径发生更改时，path_k-1就不是path_k的子集。"}
{"ID": 2687, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面的（）方法可以判断出一个有向图是否有环（回路)。\nⅠ.深度优先遍历\nⅡ.拓扑排序\nⅢ.求最短路径\nⅣ.求关键路径", "A": "Ⅰ,Ⅱ,Ⅳ", "B": "Ⅰ,Ⅲ,Ⅳ", "C": "Ⅰ,Ⅱ,Ⅲ", "D": "全部可以", "Answer": "A", "Explanation": "使用深度优先遍历，若从有向图上的某个顶点u出发，在DFS(u)结束之前出现一条从顶点V到u的边，由于v在生成树上是u的子孙，则图中必定存在包含u和v的环，因此深度优先遍历可以检测一个有向图是否有环。拓扑排序时，当某顶点不为任何边的头时才能加入序列，存在环时环中的顶点一直是某条边的头，不能加入拓扑序列。也就是说，还存在无法找到下一个可以加入拓扑序列的顶项点，则说明此图存在回路。求最短路径是充许图有环的。至于关键路径能否判断个图有环，则存在一些争议。关键路径本身虽然不允许有环，但求关键路径的算法本身无法判断是否有环判断是否有环是求关键路径的第一步一一拓扑排序。所以这个问题的答案主要取决于你从哪个角度出发看问题，考生需要理解问题本身，真正统考时是不会涉及一些模棱两可的问题的。"}
{"ID": 2688, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在有向图G的拓扑序列中，若顶点V_i在顶点V_j之前，则下列情形不可能出现的是（）", "A": "G中有弧<V_i,V_j>", "B": "G中有一条从V_i到V_j的路径", "C": "G中没有弧<V_i,V_j>", "D": "G中有一条从V_j到V_i的路径", "Answer": "D", "Explanation": "若图G中存在-条从V_j到V_i的路径，说明V_j是V_i的前驱，则要把V_j消去以后才能消去V_i从而拓扑序列中必然先输出V_j，再输出V_i这显然与题意矛盾。"}
{"ID": 2689, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若一个有向图的顶点不能排在一个拓扑序列中，则可判定该有向图（）", "A": "是一个有根的有向图", "B": "是一个强连通图", "C": "含有多个入度为0的顶点", "D": "含有顶点数目大于1的强连通分量", "Answer": "D", "Explanation": "若不存在拓扑排序，则表示图中必定存在回路，该回路构成一个强连通分量（不难理解项点数目大于1的强连通分量中必然存在回路）。"}
{"ID": 2690, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于拓扑排序的说法中，错误的是（）。\nⅠ.若某有向图存在环路，则该有向图一定不存在拓扑排序\nⅡ.在拓扑排序算法中为暂存入度为0的预点，可以使用栈，也可以使用队列\nⅢ.若有向图的拓扑有序序列唯一，则图中每个顶点的入度和出度最多为1", "A": "Ⅰ,Ⅲ", "B": "Ⅱ,Ⅲ", "C": "Ⅱ", "D": "Ⅲ", "Answer": "D", "Explanation": "Ⅰ中，对于一个存在环路的有向图，使用拓扑排序算法运行后，肯定会出现有环的子图，在此环中无法再找到入度为0的结点，拓扑排序也就进行不下去。Ⅱ中，注意，若两个结点之间不存在祖先或子孙关系，则它们在拓扑序列中的关系是任意的（即前后关系任意），因此使用栈和队列都可以，因为进栈或队列的都是入度为0的结点，此时入度为0的所有结点是没有关系的。Ⅲ是难点，若拓扑有序序列唯一，则很自然地让人联想到一个线性的有向图（错误）"}
{"ID": 2691, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若一个有向图的顶点不能排成一个拓扑序列，则判定该有向图（）", "A": "含有多个出度为0的顶点", "B": "是个强连通图", "C": "含有多个入度为0的顶点", "D": "含有顶点数大于1的强连通分量", "Answer": "D", "Explanation": "一个有向图中的顶点不能排成一个拓扑序列，表明其中存在一个项点数目大于1的回路（环）该回路构成一个强连通分量，从而答案选D"}
{"ID": 2692, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若一个有向图具有有序的拓扑排序序列，则它的邻接矩阵必定为（）", "A": "对称", "B": "稀疏", "C": "三角", "D": "一般", "Answer": "C", "Explanation": "可以证明，对有向图中的项点适当地编号，使其邻接矩阵为三角矩阵且主对角元全为零的充分必要条件是，该有向图可以进行拓扑排序。若这个题目把“有序”二字去掉，显然应该选D。但此题题干中已经指出是“有序的拓扑序列”，因此应该选C。需要注意的是，若一个有向图的邻接矩阵为三角矩阵（对角线上元素为0），则图中必不存在环，因此其拓扑序列必然存在。"}
{"ID": 2693, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "静态查找表和动态查找表分别适用于哪些场景？", "A": "静态查找表适用于只进行查找操作，动态查找表适用于需要进行大量插入删除操作", "B": "动态查找表适用于只进行查找操作，静态查找表适用于需要进行大量插入删除操作", "C": "两者都适用于进行大量插入删除操作", "D": "两者都只适用于查找操作", "Answer": "A"}
{"ID": 2694, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "静态查找表和动态查找表的主要特点是什么？", "A": "静态查找表不允许插入和删除，动态查找表允许插入和删除", "B": "静态查找表和动态查找表都不允许插入和删除", "C": "静态查找表和动态查找表都允许插入和删除", "D": "静态查找表允许插入和删除，动态查找表不允许", "Answer": "A"}
{"ID": 2695, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "顺序查找的基本思想是什么？", "A": "从头到尾或从尾到头逐个查找", "B": "随机查找元素", "C": "只查找数组的第一个元素", "D": "使用二分查找法", "Answer": "A"}
{"ID": 2696, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "顺序查找的代码实现中，查找成功返回什么？", "A": "数组下标", "B": -1, "C": "查找到的元素值", "D": "查找所需时间", "Answer": "A"}
{"ID": 2697, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在哨兵方式的顺序查找中，查找成功时返回什么？", "A": "数组下标", "B": -1, "C": "查找到的元素值", "D": "查找所需时间", "Answer": "A"}
{"ID": 2698, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在折半查找中，如何确定下一步查找的区间？", "A": "根据中间元素与查找元素的比较结果，选择前半部分或后半部分继续查找", "B": "总是选择前半部分继续查找", "C": "总是选择后半部分继续查找", "D": "随机选择前半部分或后半部分继续查找", "Answer": "A"}
{"ID": 2699, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "折半查找的判定树具有哪些特性？", "A": "平衡二叉树，且只有最下面一层不满", "B": "满二叉树", "C": "不平衡的二叉树", "D": "任意形态的二叉树", "Answer": "A"}
{"ID": 2700, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "分块查找中，查找目标关键字所在分块可以使用哪些方式？", "A": "顺序查找和折半查找", "B": "顺序查找和哈希查找", "C": "折半查找和哈希查找", "D": "只能使用顺序查找", "Answer": "A"}
{"ID": 2701, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "分块查找的平均查找长度（ASL）最小时，块的大小应该是多少？", "A": "等于查找表长度的平方根", "B": "等于查找表长度", "C": "等于查找表长度的一半", "D": "与查找表长度无关", "Answer": "A"}
{"ID": 2702, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在分块查找中，若使用顺序查找和折半查找对索引表进行查找，平均查找长度（ASL）分别是多少？", "A": "顺序查找的ASL为s^2+2s+n/2s，折半查找的ASL为(S+1)/2+⌈log2(b+1)⌉", "B": "顺序查找的ASL为(S+1)/2，折半查找的ASL为s^2+2s+n/2s", "C": "两者ASL相同", "D": "无法比较", "Answer": "A"}
{"ID": 2703, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "m阶B树的结点的子树数和关键字数的范围是什么？", "A": "子树数∈[⌈m/2⌉, m]，关键字数∈[⌈m/2⌉-1, m-1]", "B": "子树数∈[2, m]，关键字数∈[1, m-1]", "C": "子树数∈[1, m-1]，关键字数∈[0, m-2]", "D": "子树数和关键字数没有限制", "Answer": "B"}
{"ID": 2704, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "含n个关键字的m阶B树的高度范围是多少？", "A": "logm(n+1) ≤ h ≤ log⌈m/2⌉(n+1)/2 + 1", "B": "h = m", "C": "h = n", "D": "B树的高度不确定", "Answer": "A"}
{"ID": 2705, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "B树中关键字的特性是什么？", "A": "子树0 < 关键字1 < 子树1 < 关键字2 < 子树2 <…", "B": "所有关键字相等", "C": "所有关键字都不同，但无顺序", "D": "关键字随机分布", "Answer": "A"}
{"ID": 2706, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "B树的查找过程包括哪些基本操作？", "A": "先在B树中找结点，然后在结点中找关键字", "B": "直接在B树的根结点中找关键字", "C": "先在叶子结点中找关键字，然后向上查找", "D": "随机选择一个结点进行查找", "Answer": "A"}
{"ID": 2707, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "插入一个关键字到B树时，若插入后节点关键字个数超过上限，应如何操作？", "A": "直接删除部分关键字", "B": "从结点中间位置分裂为两个结点", "C": "将关键字移动到父结点", "D": "改变B树的阶数", "Answer": "B"}
{"ID": 2708, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在B树中删除终端结点时，若结点关键字个数小于 ⌈m/2⌉，该如何处理？", "A": "直接删除关键字", "B": "调整结点以达到新的平衡", "C": "合并结点", "D": "改变B树的结构", "Answer": "C"}
{"ID": 2709, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在B树中删除非终端结点的关键字时，应如何操作？", "A": "使用直接前驱或直接后继代替被删除关键字", "B": "直接删除关键字", "C": "改变B树的结构", "D": "调整结点以达到新的平衡", "Answer": "A"}
{"ID": 2710, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "散列查找是基于什么原理？", "A": "直接使用关键字映射到地址的方法", "B": "顺序查找", "C": "折半查找", "D": "分块查找", "Answer": "A"}
{"ID": 2711, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "除留余数法选择p的原因是什么？", "A": "使关键字通过散列函数转换后等概率地映射到散列空间的任一地址", "B": "p是一个固定的常数", "C": "减少计算时间", "D": "使散列地址更加集中", "Answer": "A"}
{"ID": 2712, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "开放定址法是如何解决散列冲突的？", "A": "通过查找空闲的散列地址进行存储", "B": "将冲突的元素存储在散列表之外", "C": "改变散列函数", "D": "重新排列散列表中的元素", "Answer": "A"}
{"ID": 2713, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "线性探测法可能导致什么问题？", "A": "大量元素在相邻的散列地址上堆积", "B": "散列表长度必须是质数", "C": "删除元素时不需要做标记", "D": "可能探测到所有位置", "Answer": "A"}
{"ID": 2714, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "平方探测法要求散列表的长度满足什么条件？", "A": "是任意质数", "B": "是任意整数", "C": "是 4k+3 的质数", "D": "无特殊要求", "Answer": "C"}
{"ID": 2715, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "拉链法适用于哪种场景？", "A": "经常进行插入和删除操作", "B": "散列表长度较短", "C": "关键字分布非常均匀", "D": "数据量非常大", "Answer": "A"}
{"ID": 2716, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "顺序查找适合于存储结构为（）的线性表。", "A": "顺序存储结构或链式存储结构", "B": "散列存储结构", "C": "索引存储结构", "D": "压缩存储结构", "Answer": "A"}
{"ID": 2717, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "采用分块查找时，数据的组织方式为（）", "A": "数据分成若干块，每块内数据有序", "B": "数据分成若干块，每块内数据不必有序，但块间必须有序，每块内最大（或最小）的数据组成索引块", "C": "数据分成若干块，每块内数据有序，每块内最大（或最小）的数据组成索引块", "D": "数据分成若干块，每块（除最后一块外）中数据个数需相同", "Answer": "B"}
{"ID": 2718, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在二叉排序树中进行查找的效率与（）有关。", "A": "二叉排序树的深度", "B": "二叉排序树的结点的个数", "C": "被查找结点的度", "D": "二叉排序树的存储结构", "Answer": "A"}
{"ID": 2719, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在常用的描述二叉排序树的存储结构中，关键字值最大的结点（）。", "A": "左指针一定为空", "B": "右指针一定为空", "C": "左右指针均为空", "D": "左右指针均不为空", "Answer": "B"}
{"ID": 2720, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "由n个数据元素组成的两个表：一个递增有序，一个无序，采用顺序查找算法，对有序表从头开始查找，发现当前元素已不小于待查元素时，停止查找，确定查找不成功，已知查找任一元素的概率是相同的，则在两种表中成功查找（）。", "A": "平均时间后者小", "B": "平均时间两者相同", "C": "平均时间前者小", "D": "无法确定", "Answer": "B", "Explanation": "对于顺序查找，不管线性表是有序的还是无序的，成功查找第一个元素的比较次数为1，成功查找第二个元素的比较次数为2，以此类推，即每个元素查找成功的比较次数只与其位置有关(与是否有序无关），因此查找成功的平均时间两者相同。"}
{"ID": 2721, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于二分查找的叙述中，正确的是（）。", "A": "表必须有序，表可以顺序方式存储，也可以链表方式存储", "B": "表必须有序且表中数据必须是整型、实型或字符型", "C": "表必须有序，而且只能从小到大排列", "D": "表必须有序，且表只能以顺序方式存储", "Answer": "D", "Explanation": "二分查找通过下标来定位中间位置元素，故应采用顺序存储，且二分查找能够进行的前提是查找表是有序的，但具体是从大到小还是从小到大的顺序则不做要求"}
{"ID": 2722, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在一个顺序存储的有序线性表上查找一个数据时，既可以采用折半查找，也可以采用顺序查找，但前者比后者的查找速度（）。", "A": "必然快", "B": "取决于表是递增还是递减", "C": "在大部分情况下要快", "D": "必然不快", "Answer": "C", "Explanation": "折半查找的快体现在一般情况下，在大部分情况下要快，但是对于某些特殊情况，顺序查找可能会快于折半查找。例如，查找一个含1000个元素的有序表中的第一个元素时，顺序查找的比较次数为1次，而折半查找的比较次数却将近10次。"}
{"ID": 2723, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "折半查找和二叉排序树的时间性能（）", "A": "相同", "B": "有时不相同", "C": "完全不同", "D": "无法比较", "Answer": "B", "Explanation": "折半查找的性能分析可以用二叉判定树来衡量，平均查找长度和最大查找长度都是O(log2n);二叉排序树的查找性能与数据的输入顺序有关，最好情况下的平均查找长度与折半查找相同，但最坏情况即形成单支树时，其查找长度为O(n)。"}
{"ID": 2724, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在有11个元素的有序表A[1，2，...，11]中进行折半查找（[（low+high）/2])，查找元素A[11]时，被比较的元素下标依次是（)。", "A": "6, 8, 10, 11", "B": "6, 9, 10, 11", "C": "6, 7, 9, 11", "D": "6, 8, 9, 11", "Answer": "B", "Explanation": "依据折半查找算法的思想，第一次mid=[(1+11)/2]=6，第二次mid=[[(6+1)+11)/2]=9第三次mid=[[(9+1)+11/2]=10，第四次mid=11"}
{"ID": 2725, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知有序表(13,18,24,35,47,50,62,83,90,115,134)，当二分查找值为90的元素时，查找成功的比较次数为（）。", "A": 1, "B": 2, "C": 4, "D": 6, "Answer": "B", "Explanation": "开始时low指向13，high指向134，mid指向50，比较第次90>50，所以将low指向62，high指向134，mid指向90，第二次比较找到90。"}
{"ID": 2726, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对表长为n的有序表进行折半查找，其判定树的高度为（）。", "A": "[log2(n+1)]", "B": "[log(n+1)]-1", "C": "[log2n]", "D": "[log2n]-1", "Answer": "A", "Explanation": "对n个结点的判定树，设结点总数n=2^h-1，则h=[log2(n+1)]"}
{"ID": 2727, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "为提高查找效率，对有65025个元素的有序顺序表建立索引顺序结构发在最好情况下查找到表中已有元素最多需要执行（)次关键字比较。", "A": 10, "B": 14, "C": 16, "D": 21, "Answer": "C", "Explanation": "为使查找效率最高，每个索引块的大小应是√65025=255，为每个块建立索引，则索引表中索引项的个数为255。若对索引项和索引块内部都采用折半查找，则查找效率最高，为[log2(255+1)]+[log2(255 +1)]= 16。"}
{"ID": 2728, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于二叉排序树，下面的说法中，（）是正确的", "A": "二叉排序树是动态树表，查找失败时插入新结点，会引起树的重新分裂和组合", "B": "对二叉排序树进行层序遍历可得到有序序列", "C": "用逐点插入法构造二叉排序树，若先后插入的关键字有序，二叉排序树的深度最大", "D": "在二叉排序树中进行查找，关键字的比较次数不超过结点数的1门", "Answer": "C", "Explanation": "二叉排序树插入新结点时不会引起树的分裂组合。对二叉排序树进行中序道历可得到有序序列。当插入的关键有序时，二叉排序树会形成一个长链，此时深度最大。在此种情况下进行查找，有可能需要比较每个结点的关键字，超过总结点数的1/2。"}
{"ID": 2729, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设二叉排序树中关键字由1到1000的整数构成，现要查找关键字为363的结点，下述关键字序列中，不可能是在二叉排序树上查找的序列是（)", "A": "2, 252, 401, 398,330, 344, 397, 363", "B": "2924,220,911,244, 898,258,362,363", "C": "925,202,911,240, 912, 245,363", "D": "2,399,387.219,266,382.381,278,363", "Answer": "C", "Explanation": "在二叉排序树上查找时，先与根结点值进行比较，若相同，则查找结束，否则根据比较结果，沿着左子树或右子树向下继续查找。根据二叉排序树的定义，有左子树结点值≤根结点值≤右子树结点值。C序列中，比较911关键字后，应转向其左子树比较240，左子树中不应出现比911更大的数值，但240竞有个右孩子结点值为912，所以不可能是正确的序列。"}
{"ID": 2730, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "分别以下列序列构造二叉排序树，与用其他3个序列所构造的结果不同的是（）。", "A": "(100, 80,90,60,120, 110,130)", "B": "(100,120,110,130,80,60,90)", "C": "(100, 60, 80,90, 120, 110, 130)", "D": "(100,80, 60, 90, 120,130, 110)", "Answer": "C", "Explanation": "按照二叉排序树的构造方法，不难得到A,B,D序列的构造结果相同。"}
{"ID": 2731, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于红黑树的说法中，不正确的是（）。", "A": "一棵含有n个结点的红黑树的高度至多为2log2(n+1)", "B": "如果一个结点是红色的，则它的父结点和孩子结点都是黑色的", "C": "从一个结点到其子孙结点的所有路径上包含相同数量的黑结点", "D": "红黑树的查询效率一般要优于含有相同结点数的AVL树", "Answer": "D", "Explanation": "选项A、B和C都是红黑树的性质。AVL是高度平衡的二叉查找树，红黑树是适度平衡的二叉查找树，从这一点也可以看出AVL的查询效率往往更优。"}
{"ID": 2732, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于红黑树和AVL树的描述中，不正确的是（）。", "A": "两者都属于自平衡的二叉树", "B": "两者查找、插入、删除的时间复杂度都相同", "C": "红黑树插入和删除过程至多有2次旋转操作", "D": "红黑树的任一结点的左右子树高度之差不超过2倍", "Answer": "C", "Explanation": "自平衡的二叉排序树是指在插入和删除时能自动调整以保持其所定义的平衡性，红黑树和AVL都属于自平衡二叉树，A正确。在红黑树中删除结点时，情况1可能变为情况2、3或4，情况2会变为情况3，可能会出现旋转次数超过2次的情况，C错误。"}
{"ID": 2733, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在一棵m阶B树中做插入操作前，若个结点中的关键字个数等于（），则必须分裂成两个结点：向一棵m阶的B树做删除操作前，若一个结点中的关键字个数等于（）则可能需要同它的左兄弟或右兄弟结点合并成一个结点。", "A": "m,[m/2]-2", "B": "m-1,[m/2]-1", "C": "m + 1, [m/2]", "D": "m/2,[m/2]+1", "Answer": "B", "Explanation": "由于B树中每个结点内的关键字个数最多为m-1，所以当关键字个数大于m-1时，就应该分裂。而每个结点内的关键字个数至少为[m/2]-1.个，所以当关键字个数少于[m/2]-1时，应与其他结点合并"}
{"ID": 2734, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "含有n个非叶结点的m阶B树中至少包含（）个关键字。", "A": "n(m + 1)", "B": "n", "C": "n([m/2]1)", "D": "(n-1)([m/2]-1)+ 1", "Answer": "D", "Explanation": "除根结点外，m阶B树中的每个非叶结点至少有[m/2]-1个关键字，根结点至少有一个关键字，所以总共包含的关键字最少个数=（n-1)([m/2]-1）+1。"}
{"ID": 2735, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于B树和B+树的叙述中，不正确的是（)。", "A": "B树和B+树都能有效地支持顺序查找", "B": "B树和B+树都能有效地支持随机查找", "C": "B树和B+树都是平衡的多叉树", "D": "B树和B+树都可以用于文件索引结构", "Answer": "A", "Explanation": "B树和B+树的差异主要体现在：①结点关键字和子树的个数：②B+树非叶结点仅起索引作用：③B树叶结点关键字和其他结点包含的关键字是不重复的：④B+树支持顺序查找和随机查找而B树仅支持随机查找。由于B+树的所有叶结点中包含了全部的关键字信息，且叶结点本身依关键字从小到大顺序链接，因此可以进行顺序查找，而B树不支持顺序查找。"}
{"ID": 2736, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "散列查找一般适用于（）的情况下的查找", "A": "查找表为链表", "B": "查找表为有序表", "C": "关键字集合比地址集合大得多", "D": "关键字集合与地址集合之间存在对应关系", "Answer": "D", "Explanation": "关键字集合与地址集合之间存在对应关系时，通过散列函数表示这种关系。这样，查找以计算散列函数而非比较的方式进行查找。"}
{"ID": 2737, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于散列表的说法中，正确的是()\nⅠ.若散列表的填装因子<1，则可避免碰撞的产生\nⅡ.散列查找中不需要任何关键字的比较\nⅢ.列表在查找成功时平均查找长度与表长有关\nⅣ.若在散列表中删除一个元素，不能简单地将该元素删除", "A": "Ⅰ,Ⅳ", "B": "Ⅱ,Ⅲ", "C": "Ⅲ", "D": "Ⅳ", "Answer": "D", "Explanation": "冲突（碰撞）是不可避免的，与装填因子无关，因此需要设计处理冲突的方法，Ⅰ错误。散列查找的思想是计算出散列地址来进行查找，然后比较关键字以确定是否查找成功，Ⅱ错误。散列查找成功的平均查找长度与装填因子有关，与表长无关，Ⅲ错误。在开放定址的情形下，不能随便删除散列表中的某个元素，否则可能会导致搜索路径被中断（因此通常的做法是在要删除的地方做删除标记，而不是直接删除），Ⅳ正确。"}
{"ID": 2738, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定有K个关键字互为同义词，若用线性探测法把这K个关键字填入散列表，至少要进行（）次探测。", "A": "K-1", "B": "K", "C": "K+ 1", "D": "K(K+ 1)/2", "Answer": "D", "Explanation": "K个关键字在依次填入的过程中，只有第一个不会发生冲突，故探测次数为(1+2+3+...+K)=K(K+1)/2，即选D。"}
{"ID": 2739, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "采用开放定址法解决冲突的散列查找中，发生聚集的原因主要是（）。", "A": "数据元素过多", "B": "负载因子过大", "C": "散列函数选择不当", "D": "解决冲突的方法选择不当", "Answer": "D", "Explanation": "聚集是因选取不当的处理冲突的方法，而导致不同关键字的元素对同一散列地址进行争夺的现象。用线性再探测法时，容易引发聚集现象。"}
{"ID": 2740, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "将10个元素散列到100000个单元的散列表中，则（）产生冲突", "A": "一定会", "B": "一定不会", "C": "仍可能会", "D": "不确定", "Answer": "C", "Explanation": "由于散列函数的选取，仍然有可能产生地址冲突，冲突不能绝对地避免"}
{"ID": 2741, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "如何定义排序算法的稳定性？", "A": "所有排序算法都是稳定的", "B": "关键字相同的元素相对位置不变的算法是稳定的", "C": "执行速度快的算法是稳定的", "D": "占用空间少的算法是稳定的", "Answer": "B"}
{"ID": 2742, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "排序算法的评价指标包括哪些？", "A": "只有时间复杂度", "B": "只有空间复杂度", "C": "时间复杂度和空间复杂度", "D": "时间复杂度、空间复杂度和稳定性", "Answer": "D"}
{"ID": 2743, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "内部排序和外部排序的主要区别是什么？", "A": "内部排序在内存中进行，外部排序在硬盘上进行", "B": "内部排序只适用于小数据集，外部排序适用于大数据集", "C": "内部排序时间复杂度高，外部排序时间复杂度低", "D": "内部排序空间复杂度高，外部排序空间复杂度低", "Answer": "A"}
{"ID": 2744, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "直接插入排序的基本思想是什么？", "A": "每次选择最小的元素放到已排序序列的末尾", "B": "通过交换相邻元素进行排序", "C": "将每个待排序记录插入到已排序子序列中", "D": "将所有元素一次归并成一个有序序列", "Answer": "C"}
{"ID": 2745, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "直接插入排序适用于哪些类型的线性表？", "A": "仅适用于顺序存储的线性表", "B": "仅适用于链式存储的线性表", "C": "适用于顺序存储和链式存储的线性表", "D": "不适用于任何线性表", "Answer": "C"}
{"ID": 2746, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在折半插入排序中，折半查找的作用是什么？", "A": "确定插入位置并减少关键字比较次数", "B": "加快查找最小元素的速度", "C": "减少元素的移动次数", "D": "确定排序的方向", "Answer": "A"}
{"ID": 2747, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "折半插入排序的时间复杂度是多少？", "A": "O(n^2)", "B": "O(n)", "C": "O(nlogn)", "D": "O(logn)", "Answer": "A"}
{"ID": 2748, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "希尔排序的基本思想是什么？", "A": "使用增量序列分割表并进行部分排序", "B": "逐个比较并交换相邻元素", "C": "选择最小的元素放到已排序序列的末尾", "D": "将所有元素一次归并成一个有序序列", "Answer": "A"}
{"ID": 2749, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在希尔排序中，增量的作用是什么？", "A": "分割表成“特殊”子表进行局部排序", "B": "控制排序的方向", "C": "决定排序的速度", "D": "用作比较的基准元素", "Answer": "A"}
{"ID": 2750, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "希尔排序的时间复杂度是多少？", "A": "O(n^2)", "B": "O(nlogn)", "C": "O(n^1.3)", "D": "O(n)", "Answer": "C"}
{"ID": 2751, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "冒泡排序的基本操作是什么？", "A": "逐个比较并交换相邻元素", "B": "使用增量序列分割表进行排序", "C": "选择最小的元素放到已排序序列的末尾", "D": "将所有元素一次归并成一个有序序列", "Answer": "A"}
{"ID": 2752, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "冒泡排序中的优化策略是什么？", "A": "交换相邻元素的顺序", "B": "使用二分查找确定交换位置", "C": "当一轮比较没有发生交换时，提前结束排序", "D": "使用哨兵元素优化比较过程", "Answer": "C"}
{"ID": 2753, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "冒泡排序的时间复杂度是多少？", "A": "O(nlogn)", "B": "O(n^1.3)", "C": "O(n)", "D": "O(n^2)", "Answer": "D"}
{"ID": 2754, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "冒泡排序算法的稳定性如何？", "A": "不稳定", "B": "依赖于输入数据", "C": "无法确定", "D": "稳定", "Answer": "D"}
{"ID": 2755, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "快速排序的基本思想是什么？", "A": "通过一趟排序将待排序表分为两部分", "B": "使用增量序列分割表进行排序", "C": "选择最小的元素放到已排序序列的末尾", "D": "将所有元素一次归并成一个有序序列", "Answer": "A"}
{"ID": 2756, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "快速排序的性能特点是什么？", "A": "最优的内部排序算法", "B": "最适合小规模数据排序", "C": "需要额外的存储空间", "D": "适用于链式存储结构", "Answer": "A"}
{"ID": 2757, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "快速排序算法的稳定性如何？", "A": "不稳定", "B": "依赖于输入数据", "C": "无法确定", "D": "稳定", "Answer": "A"}
{"ID": 2758, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "简单选择排序的基本步骤是什么？", "A": "在待排序元素中选取关键字最小的元素与第一个元素交换", "B": "依次将元素插入到已排序序列", "C": "依次比较相邻元素并交换", "D": "采用分治法对元素进行排序", "Answer": "A"}
{"ID": 2759, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "简单选择排序的时间复杂度是多少？", "A": "O(n)", "B": "O(n^2)", "C": "O(nlogn)", "D": "O(n^1.3)", "Answer": "B"}
{"ID": 2760, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "简单选择排序的稳定性如何？", "A": "稳定", "B": "不稳定", "C": "取决于具体实现", "D": "无法确定", "Answer": "B"}
{"ID": 2761, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "简单选择排序适用于哪些存储结构？", "A": "只适用于顺序存储", "B": "只适用于链式存储", "C": "适用于顺序存储和链式存储", "D": "不适用于任何存储结构", "Answer": "C"}
{"ID": 2762, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "堆排序的基本步骤包括哪些？", "A": "建立大根堆，将堆顶元素与堆底元素交换", "B": "对每个非叶子节点进行下滤", "C": "只对堆顶元素进行排序", "D": "每次选择最小的元素放在堆顶", "Answer": "A"}
{"ID": 2763, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "堆排序的稳定性如何？", "A": "稳定", "B": "不稳定", "C": "取决于具体实现", "D": "无法确定", "Answer": "B"}
{"ID": 2764, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在堆排序中，小根堆是如何定义的？", "A": "一棵每个节点都小于其孩子的完全二叉树", "B": "一棵顺序存储的完全二叉树", "C": "一棵每个节点都大于其孩子的完全二叉树", "D": "一棵树，其中任意节点的值都等于其孩子节点的值", "Answer": "A"}
{"ID": 2765, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "排序趟数与序列的原始状态有关的排序方法是（）排序法。", "A": "插入", "B": "选择", "C": "冒泡", "D": "基数", "Answer": "C"}
{"ID": 2766, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下述排序方法中，不属于内部排序方法的是（）。", "A": "插入排序", "B": "选择排序", "C": "拓扑排序", "D": "冒泡排序", "Answer": "C", "Explanation": "拓扑排序是将有向图中所有结点排成一个线性序列，虽然也是在内存中进行的，但它不属于我们这里所提到的内部排序范畴，也不满足前面排序的定义。"}
{"ID": 2767, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于排序的叙述中，正确的是（）", "A": "稳定的排序方法优于不稳定的排序方法", "B": "对同一线性表使用不同的排序方法进行排序，得到的排序结果可能不同", "C": "排序方法都是在顺序表上实现的，在链表上无法实现排序方法", "D": "在顺序表上实现的排序方法在链表上也可以实现", "Answer": "B", "Explanation": "算法的稳定性与算法优劣无关，A排除。使用键表也可以进行排序，只是有些排序算法不再适用，因为这时定位元素只能顺序逐链查找，如折半插入排序。"}
{"ID": 2768, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对任意7个关键字进行基于比较的排序，至少要进行（）次关键字之间的两两比较", "A": 13, "B": 14, "C": 15, "D": 6, "Answer": "A", "Explanation": "对于任意序列进行基于比校的排序，求最少的比较次数应考最坏情况。对任意个关键字\n排序的比较次数至少为[log(n!)]。将n=7代入公式，答案为13。"}
{"ID": 2769, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "数据序列{8,10,13,4,6,7,22,2,3)只能是（）两趟排序后的结果", "A": "简单选择排序", "B": "起泡排序", "C": "直接插入排序", "D": "堆排序", "Answer": "C", "Explanation": "冒泡排序和选择排序经过两趟排序后，应该有两个最大（或最小）元素放在其最终位置;插入排序经过两趟排序后，前3个元素应该是局部有序的。只有可能是快速排序。"}
{"ID": 2770, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在下列算法中，（）算法可能出现下列情况；在最后一趟开始之前，所有元素都不在最终位置上。", "A": "推排序", "B": "冒泡排序", "C": "直接插入排序", "D": "快速排序", "Answer": "C", "Explanation": "在直接插入排序中，若待排序列中的最后一个元素应插入表中的第一个位置，则前面的有序子序列中的所有元素都不在最终位置上。"}
{"ID": 2771, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "希尔排序属于（）。", "A": "插入排序", "B": "交换排序", "C": "选择排序", "D": "归并排序", "Answer": "A", "Explanation": "希尔排序是对直接插入排序算法改进后提出来的，本质上仍属于插入排序的范畴。"}
{"ID": 2772, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于序列(15,9,7,8,20,-1,4)，经一趟排序后序列变成{9,15,7,8,20,-1,4}，则采用的是下列的（)。", "A": "选择排序", "B": "快速排序", "C": "直接插入排序", "D": "冒泡排序", "Answer": "C", "Explanation": "前两个元素局部已经有序，很明显一趟直接插入排序算法有效。再排除其他算法即可。"}
{"ID": 2773, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对序列{98,36,-9,0,47,23,1,8,10,7}采用希尔排序，下列序列（）是增量为4的一趟排序结果。", "A": "{10, 7, -9, 0, 47,23, 1, 8, 98, 36}", "B": "{-9,0,36,98,1,8,23,47,7,10}", "C": "{36, 98, 9, 0, 23, 47, 1, 8, 7, 10}", "D": "以上都不对", "Answer": "A", "Explanation": "增量为4意味着所有相距为4的记录构成一组，然后在组内进行直接插入排序，经观察，只有选项A满足要求。"}
{"ID": 2774, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "折半插入排序算法的时间复杂度为（）", "A": "O(n)", "B": "O(nlog2n)", "C": "O(n^2)", "D": "O(n^3)", "Answer": "C", "Explanation": "虽然折半插入排序是对直接插入排序的改进，但它改进的只是比较的次数，而移动次数未发生变化，时间复杂度仍为O(n^2)。"}
{"ID": 2775, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "有些排序算法在每趟排序过程中，都会有一个元素被放置到其最终位置上，（）算法不会出现此种情况", "A": "希尔排序", "B": "堆排序", "C": "冒泡排序", "D": "快速排序", "Answer": "A", "Explanation": "由于希尔排序是基于插入排序算法而提出的，它不一定在每趟排序过程后将某一元素放置到最终位置上。"}
{"ID": 2776, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下排序算法中， 不稳定的是（）。", "A": "冒泡排序", "B": "直接插入排序", "C": "希尔排序", "D": "归并排序", "Answer": "C", "Explanation": "希尔排序是一种复杂的插入排序方法，它是一种不稳定的排序方法"}
{"ID": 2777, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下排序算法中， 稳定的是（）。", "A": "快速排序", "B": "堆排序", "C": "直接插入排序", "D": "简单选择排序", "Answer": "C", "Explanation": "基于插入、交换、选择的三类排序方法中通常简单方法是稳定的下直接插入折半插入、冒泡），但有一个例外就是简单选择，复杂方法都是不稳定的（希尔、快排、堆排）。"}
{"ID": 2778, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对n个不同的元素利用冒泡法从小到大排序，在（）情况下元素交换的次数最多。", "A": "从大到小排列好的", "B": "从小到大排列好的", "C": "元素无序", "D": "元素基本有序", "Answer": "A", "Explanation": "通常情况下，冒泡排序最少进行1次冒泡，最多进行n-1次冒泡。初始序列为逆序时，需进行n-1次冒泡，并且需要交换的次数最多。初始序列为正序时，进行1次冒泡（无交换）就可以终止算法。"}
{"ID": 2779, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "用某种排序方法对线性表{25,84,21,47,15,27,68,35,20}进行排序时，元素序列的变化情况如下：\n(1) 25,84,21,47,15,27,68,35,20\n(2) 20,15,21,25,47,27,68,35,84\n(3)15,20,21,25,35,27,47,68,84\n(4) 15,20,21,25,27,35,47,68,84\n则所采用的排序方法是（）。", "A": "选择排序", "B": "插入排序", "C": "2路归并排序", "D": "快速排序", "Answer": "D", "Explanation": "选择排序在每趟结束后可以确定一个元素的最终位置，不对插入排序第趟后前i+1个元素应该是有序的，不对。第2趟{20,15}和{21,25}是反序的，因此不是归并排序。快速排序每趟都将基准元素放在其最终位置，然后以它为基准将序列划分为两个序序列观察题中的排序过程，可知是快速排序。"}
{"ID": 2780, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一组记录的关键码为（46，79，56，38，40，84)，则利用快速排序的方法，以第一个记录为基准，从小到大得到的一次划分结果为（)", "A": "(38, 40,46, 56, 79,84)", "B": "(40, 38,46, 79, 56, 84)", "C": "(40, 38, 46, 56, 79, 84)", "D": "(40,38.146.84.56,79)", "Answer": "C", "Explanation": "以46为基准元素，首先从后向前扫描比46小的元素，并与之进行交换，而后从前向后扫描比46大的元素并将46与该元累交换，得到{40，46，56，38，79，84}。此后，继续重复从后向前扫描与从前往后扫描的操作，直到46处于最终位置，答案选C。"}
{"ID": 2781, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "数据序列F={2,1,4,9,8,10,6,20}只能是下列排序算法中的（）两趟排序后的结果", "A": "快速排序", "B": "冒泡排序", "C": "选择排序", "D": "插入排序", "Answer": "A", "Explanation": "若为插入排序，则前三个元素应该是有序的，显然不对。而冒泡排序和选择排序经过两趟排序后应该有两个元素处于最终位置（最左/右端），无论是按从小到大还是从大到小排序，数据序列中都没有两个满足这样的条件的元素，因此只可能选A。"}
{"ID": 2782, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对数据序列{8,9,10,4,5,6,20,1,2}采用冒泡排序（从后向前次序进行，要求升序），需要进行的趟数至少是（）。", "A": 3, "B": 4, "C": 5, "D": 8, "Answer": "C", "Explanation": "从后向前“冒泡”的过程为，第1趟(1,8,9,10,4,5,6,20,2)，第2趟（1,2,8,9,10,4,5,6,20)，第3趟{1,2,4,8,9,10,5,6,20)，第4趟(1,2,4,5,8,9,10,6,20),第5趟(1,2,4,5,6,8,9,10,20)，经过第5趟胃泡后，序列已经全局有序，故选C。实际每超冒泡发生交换后可以判断是否会导致新的逆序对，如果不会产生，则本趟冒泡之后序列全局有序，所以最少5趟即可。"}
{"ID": 2783, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对下列4个序列，以第一个关键字为基准用快速排序算法进行排序，在第一趟过程中移动记录次数最多的是（）。", "A": "92,96,88,42,30,35,110,100", "B": "92,96,100,110,42,35,30,88", "C": "100,96,92,35,30,110,88,42", "D": "42,30,35,92,100,96,88,110", "Answer": "B", "Explanation": "对各序列分别执行一趟快速排序，可做如下分析（以A为例）：基于枢轴值为92，因此35移动到第一个位置，96移动到第六个位置，30移动到第二个位置，再将枢轴值移动到30所在的单元，即第五个位置，所以A中序列移动的次数为4。同样，可以分析出B中序列的移动次数为8，C中序列的移动次数为4，D中序列的移动次数为2。"}
{"ID": 2784, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列序列中，（）可能是执行第一趟快速排序后所得到的序列\nⅠ.{68,11,18,69,23,93,73}\nⅡ.{68,11,69,23,18,93,73}\nⅢ.{93,73, 68,11,69,23,18}\nⅣ.{68,11,69,23,18,73,93}", "A": "Ⅰ,Ⅳ", "B": "Ⅱ,Ⅲ", "C": "Ⅲ,Ⅳ", "D": "Ⅳ", "Answer": "C", "Explanation": "显然，若按从小到大排序，则最终有序的序列是{11,18,23,68,69,73,93};着按从大到小排序，则最终有序的序列是{93,73,69,68,23,18,11}。对比可知Ⅰ、Ⅱ中没有处于最终位置的元素，故Ⅰ、Ⅱ都不可能。Ⅲ中73和93处于从大到小排序后的最终位置，而且73将序列分割成大于73和小于73的两部分，故III是有可能的。Ⅳ中73和93处于从小到大排列后的最终位置，73也将序列分割成大于73和小于73的两部分。"}
{"ID": 2785, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在以下排序算法中，每次从未排序的记录中选取最小关键字的记录，加入已排序记录的末尾，该排序方法是（）。", "A": "简单选择排序", "B": "冒泡排序", "C": "堆排序", "D": "直接插入排序", "Answer": "A", "Explanation": "简单选择排序"}
{"ID": 2786, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "简单选择排序算法的比较次数和移动次数分别为（）", "A": "O(n), O(log2n)", "B": "O(log2n),O(n^2)", "C": "O(n^2),O(n)", "D": "O(nlog2n),O(n)", "Answer": "C", "Explanation": "简单选择排序的比较次数是O(n^2)，移动次数是O(n)"}
{"ID": 2787, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对关键码序列{23,17,72,60,25,8,68,71,52}进行堆排序，输出两个最小关键码后的剩余堆是（）", "A": "{23, 72, 60,25, 68, 71, 52}", "B": "{23,25, 52, 60, 71, 72, 68}", "C": "{71, 25,23, 52, 60, 72, 68}", "D": "{23, 25, 68, 52, 60, 72, 71}", "Answer": "D", "Explanation": "筛选法初始建堆为{8,17,2352,25,72,6871,60}，输出8后重建的堆为{17,25,23,52,60,72,68,71}，输出17后重建的堆为{23,25,68,52,60,72,71}。"}
{"ID": 2788, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下排序算法中，（）不需要进行关键字的比较", "A": "快速排序", "B": "归并排序", "C": "基数排序", "D": "堆排序", "Answer": "C", "Explanation": "基数排序是基于关键字各位的大小进行排序的，而不是基于关键字的比较进行的"}
{"ID": 2789, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列排序方法中，排序过程中比较次数的数量级与序列初始状态无关的是（）。", "A": "归并排序", "B": "插入排序", "C": "快速排序", "D": "冒泡排序", "Answer": "A", "Explanation": "归并排序的比较次数与序列初始状态无关。"}
{"ID": 2790, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "2路归并排序中，归并趟数的数量级是（）。", "A": "O(n)", "B": "O(log2n)", "C": "O(nlog2n)", "D": "O(n^2)", "Answer": "B", "Explanation": "对于N个元素进行k路归并排序时，排序的趟数m满足k^m=N，所以m=[logkW]，本题中即为[log2n]"}
{"ID": 2791, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一组经过第一趟2路归并排序后的记录的关键字为{25,50,15,35,80,85,20,40,36,70}其中包含5个长度为2的有序表，用2路归并排序方法对该序列进行第二趟归并后的结果为（）。", "A": "15,25,35,50,80.20,85,40,70,36", "B": "15,25,35,50,20,40,80,85,36,70", "C": "15,25,50,35,80,85,20,36,40,70", "D": "15,25,35,50,80,20,36,40,70,85", "Answer": "B", "Explanation": "由于这里采用2路归并排序算法，而且是第二趟排序，因此每4个元素放在一起归并，可将序列划分为{25,50,15,35}，{80,85,20,40}和{36,70},分别对它们进行排序后有{15,25,35,50},{20,40,80,85}和{36,70}，故选B。\n"}
{"ID": 2792, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若将中国人按照生日（不考虑年份，只考虑月、日）来排序，则使用下列排序算法时最快的是（）。", "A": "归并排序", "B": "希尔排序", "C": "快速排序", "D": "基数排序", "Answer": "D", "Explanation": "按照所有中国人的生日排序，一方面N是非常大的，另一方面关键字所含的排序码数为2且一个排序码的基数为12，另一个排序码的基数为31，都是较小的需数值，因此采用基数排序可以在O(N)内完成排序过程。"}
{"ID": 2793, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若要求排序是稳定的，且关键字为实数，则在下列排序方法中应选（）。", "A": "直接插入排序", "B": "选择排序", "C": "基数排序", "D": "快速排序", "Answer": "A", "Explanation": "采用排除法。由于题目要求是稳定排序，排除选项B和D，又由于基数排序不能对float和doub1e类型的实数进行排序，故排除选项C。"}
{"ID": 2794, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下排序方法中时间复杂度为O(nlog2n)且稳定的是（)", "A": "堆排序", "B": "快速排序", "C": "归并排序", "D": "直接插入排序", "Answer": "C", "Explanation": "堆排序和快速排序不是稳定排序方法，而直接插入排序算法的时间复杂度为O(n^2)。"}
{"ID": 2795, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设被排序的结点序列共有个结点，在该序列中的结点已十分接近有序的情况下，用直接插入排序、归并排序和快速排序对其进行排序，这些算法的时间复杂度应为（）", "A": "O(N),O(N), O(N)", "B": "O(N), O(Nlog2N), O(Nlog2N)", "C": "O(N),O(Nlog2N), O(N^2)", "D": "O(N^2),O(Nlog2N), O(N^2)", "Answer": "C", "Explanation": "在序列中的结点已十分接近有序的情况下，用直接插入排序、归并排序和快速排序对其进行排序，这些算法的时间复杂度分别为O(N),O(Nlog2N), O(N^2)"}
{"ID": 2796, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "就排序算法所用的辅助空间而言，堆排序、快速排序和归并排序的关系是()", "A": "堆排序<快速排序<归并排序", "B": "堆排序<归并排序<快速排序", "C": "堆排序>归并排序>快速排序", "D": "堆排序>快速排序>归并排序", "Answer": "A", "Explanation": "由于堆排序的空间复杂度为O(1)，快速排序的空间复杂度在最坏情况下为O(n),平均空间复杂度为O(log2n)，归并排序的空间复杂度为O(n)，所以不难得出正确选项是A"}
{"ID": 2797, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "排序趟数与序列的原始状态无关的排序方法是（)。\nⅠ.直接插入排序\nⅡ.简单选择排序\nⅢ.冒泡排序\nⅣ.基数排序", "A": "Ⅰ,Ⅱ", "B": "Ⅰ,Ⅱ,Ⅳ", "C": "Ⅰ,Ⅱ,Ⅲ", "D": "Ⅰ,Ⅳ", "Answer": "B", "Explanation": "交换类的排序，其越数和原始序列状态有关，故冒泡排序与初始序列有关。直接插入排序;每趟排序都插入一个元素，所以排序超数固定为n-1;简单选择排序;每趟排序都选出一个最小（或最大）的元素，所以排序趟数固定为n-1；基数排序：每趟排序都要进行“分配”和“收集”，排序趟数固定为d。"}
{"ID": 2798, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设在磁盘上存放有375000个记录，做5路平衡归并排序，内存工作区能容纳600个记录，为把所有记录排好序，需要做（）趟归并排序。", "A": 3, "B": 4, "C": 5, "D": 6, "Answer": "B", "Explanation": "初始归并段的个数r=375000/600=625，因此，归并趟数S=[logmr]=[log5625]=4。第一趟把625个归并段归并成625/5=125个；第二趟把125个归并段归并成125/5=25个；第三趟把25个归并段归并成25/5=5个；第四趟把5个归并段归并成5/5=1个。"}
{"ID": 2799, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "置换-选择排序的作用是（）", "A": "用于生成外部排序的初始归并段", "B": "完成将一个磁盘文件排序成有序文件的有效的外部排序算法", "C": "生成的初始归并段的长度是内存工作区的2倍", "D": "对外部排序中输入/归并/输出的并行处理", "Answer": "A", "Explanation": "置换-选择排序是外部排序中生成初始归并段的方法，用此方法得到的初始归并段的长度是不\n等长的，其长度平均是传统等长初始归并段的2倍，从而使得初始归并段数减少到原来的近二分之一。但是，置换-选择排序不是一种完整的生成有序文件的外部排序算法。"}
{"ID": 2800, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "最佳归并树在外部排序中的作用是（）。", "A": "完成m路归并排序", "B": "设计m路归并排序的优化方案", "C": "产生初始归并段", "D": "与锦标赛树的作用类似", "Answer": "B", "Explanation": "最佳归并树在外部排序中的作用是设计m路归并排序的优化方案，仿照构造哈夫曼树的方法，以初始归并段的长度为权值，构造具有最小带权路径长度的m叉哈夫曼树，可以有效地减少归并过程中的读写记录数，加快外部排序的速度。"}
{"ID": 2801, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在下列关于外部排序过程输入/输出缓冲区作用的叙述中，不正确的是（）。", "A": "暂存输入/输出记录", "B": "内部归并的工作区", "C": "产生初始归并段的工作区", "D": "传送用户界面的消息", "Answer": "D", "Explanation": "在外部排序过程中输入/输出缓冲区就是排序的内存工作区，例如做m路平衡归并需要m个输入缓冲区和1个输出缓冲区，用以存放参加归并的和归并完成的记录。在产生初始归并段时也可用作内部排序的工作区。它没有传送用户界面的消息的任务。"}
{"ID": 2802, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据结构中的逻辑结构可以分为线性结构和非线性结构。", "Answer": true}
{"ID": 2803, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据元素在数据结构中指的是数据的基本单位，可由若干数据项组成。", "Answer": true}
{"ID": 2804, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据类型在计算机科学中是指数据存储格式的分类。", "Answer": false}
{"ID": 2805, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据结构主要包括逻辑结构、存储结构和数据运算这三个方面的内容。", "Answer": true}
{"ID": 2806, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "算法具有有穷性、确定性、可行性、输入和输出等特性。", "Answer": true}
{"ID": 2807, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "设计一个好的算法通常需要考虑正确性、可读性、健壮性、效率以及低存储量需求。", "Answer": true}
{"ID": 2808, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "算法的空间复杂度是根据算法执行过程中产生的临时数据所占用的空间来定义的。", "Answer": false}
{"ID": 2809, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "可以用抽象数据类型定义一个完整的数据结构。", "Answer": true}
{"ID": 2810, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "单链表属于逻辑结构。", "Answer": false}
{"ID": 2811, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在顺序表的ListInsert函数中，当插入元素到表的中间位置时，需要移动插入位置之后的所有元素。", "Answer": true}
{"ID": 2812, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在顺序表的LocateElem函数中，正确地查找元素e的位置是在找到元素后返回i+1。", "Answer": true}
{"ID": 2813, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在带头结点的单链表中，执行ListDelete函数删除第i个元素时，操作步骤是找到第i-1个结点，然后断开第i个结点并连接到第i+1个结点。", "Answer": true}
{"ID": 2814, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在单链表中，GetElem函数能够正确地按位查找并返回第i个元素的值，它会返回指向第i个结点的指针。", "Answer": true}
{"ID": 2815, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在尾插法建立单链表的 List_TailInsert 函数中，新节点是插入链表的末尾。", "Answer": true}
{"ID": 2816, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在双链表的初始化操作中，头结点的prior指针指向NULL，next指针指向NULL。", "Answer": true}
{"ID": 2817, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "线性表是具有n个数据项的有限序列。", "Answer": false}
{"ID": 2818, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "顺序表是一个线性表最常用的操作是存取任一指定序号的元素并在最后进行插入、删除操作的存储方式，可以节省时间。", "Answer": true}
{"ID": 2819, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在一个长度为n的非空线性表采用顺序存储结构时，在表的第i个位置插入一个数据元素时，合法的i的取值范围应该是1≤i≤n。", "Answer": false}
{"ID": 2820, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在静态链表中，指针表示的是左链或右链指向的元素的地址。", "Answer": false}
{"ID": 2821, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "顺序表的插入算法中，当n个空间已满时，可再中请增加分配m个空间，若申请失败则说明系统没有m个连续可分配的存储空间。", "Answer": false, "Explanation": "顺序存储需要连续的存储空间，在申请时需申请n+m个连续的存储空间，然后将线性表原来的n个元素复制到新申请的n+m个连续的存储空间的前n个单元。"}
{"ID": 2822, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在一个单链表中，已知q所指结点是p所指结点的前驱结点，若在q和P之间插入结点S，则执行q->next=s; s->next=p;。", "Answer": true, "Explanation": "s插入后，q成为s的前驱，而p成为s的后继"}
{"ID": 2823, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在一个长度为n的带头结点的单链表h上，设有尾指针r，则执行删除单链表中的最后一个元素操作与链表的表长有关。", "Answer": true, "Explanation": "删除单链表的最后一个结点需置其前驱结点的指针域为NULL，需要从头开始依次遍历找到该前驱结点，需要Q(n)的时间，与表长有关。其他操作均与表长无关，读者可自行模拟。"}
{"ID": 2824, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "页面置换算法中队列的应用是管理内存页面。", "Answer": true}
{"ID": 2825, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "特殊矩阵通常使用压缩存储以节省空间。", "Answer": true}
{"ID": 2826, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "和顺序栈相比，链栈有一个比较明显的优势，即通常不会出现栈空的情况。", "Answer": true}
{"ID": 2827, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "循环队列存储在数组A[0...n]中，入队时的操作为rear=(rear+1) mod (n+1)。", "Answer": true}
{"ID": 2828, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "最适合用作链队的链表是带队首指针和队尾指针的非循环单链表。", "Answer": true}
{"ID": 2829, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "用链式存储方式的队列进行删除操作时需要头尾指针都要修改。", "Answer": false}
{"ID": 2830, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "经过执行Push、Push、Pop、Push、Pop、Push、Pop、Push操作后，栈顶指针的值为1005H。", "Answer": false, "Explanation": "每个元素需要1个存储单元，所以每入栈一次top加1，出栈一次top减1。指针top的值依次为1001H,1002H,1001H,1002H,1001H,1002H,1001H,1002H。"}
{"ID": 2831, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "向一个栈顶指针为top的链栈（不带头结点）中插入一个X结点，则执行x=>next=top->next; top->next=x。", "Answer": false, "Explanation": "链栈采用不带头结点的单链表表示时，进栈操作在首部插入一个结点x（即x->next=top）插入完后需将top指向该插入的结点x。请思考当链栈存在头结点时的情况。"}
{"ID": 2832, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "用S表示进栈操作，用X表示出栈操作，若元素的进栈顺序是1234，则为了得到1342的出栈顺序，相应的S和X的操作序列为SXSSXXSX。", "Answer": false, "Explanation": null}
{"ID": 2833, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "顺序共享栈Share[0：n-1]的栈满条件是top1等于top2。", "Answer": false, "Explanation": null}
{"ID": 2834, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设循环单链表表示的队列长度为n，队头固定在链表尾，若只设头指针，则进队操作的时间复杂度为O(n)。", "Answer": true, "Explanation": "依题意，进队操作是在队尾进行，即链表表头。题中已明确说明链表只设头指针，也即没有头结点和尾指针，进队后，循环单链表必须保持循环的性质，在只带头指针的循环单链表中寻找表尾结点的时间复杂度为O(n)，故进队的时间复杂度为O(n)。"}
{"ID": 2835, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "字符在主串中的位置是指字符在串中的频率。", "Answer": false}
{"ID": 2836, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "StrCopy操作的作用是将一个字符串赋值给另一个字符串。", "Answer": false}
{"ID": 2837, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "StrEmpty操作是用来检查字符串是否为空的。", "Answer": true}
{"ID": 2838, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "朴素模式匹配算法的最好时间复杂度是O(m)。", "Answer": true}
{"ID": 2839, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "KMP算法的最坏时间复杂度是O(mn)。", "Answer": false}
{"ID": 2840, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "连接的运算是指求串S_1在串S_2中首次出现的位置。", "Answer": false, "Explanation": "链接是拼接两个字符串"}
{"ID": 2841, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "String", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "KMP算法的特点是在模式匹配时指示主串的指针不会变小。", "Answer": true, "Explanation": "在KMP算法的比较过程中，主串不会回溯，所以主患的指针不会变小。"}
{"ID": 2842, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "树的递归特性是树是由多个分支组成的。", "Answer": false}
{"ID": 2843, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "树的结点数等于所有结点的度数和减1。", "Answer": false}
{"ID": 2844, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "满二叉树是每个结点都有两个孩子的二叉树。", "Answer": false}
{"ID": 2845, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "二叉树遍历的时间复杂度和空间复杂度分别是O(n)和O(n)。", "Answer": true}
{"ID": 2846, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一棵有124个叶子节点的完全二叉树，最多有250个节点。", "Answer": false}
{"ID": 2847, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "n个结点的线索二叉树上含有的线索数为n + 1。", "Answer": true}
{"ID": 2848, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在完全二叉树中，一个结点如果没有左孩子，那么它必定是叶结点。", "Answer": true, "Explanation": "在完全二叉树中，若有度为1的结点，则只可能有一个，且该结点只有左孩子而无右孩子"}
{"ID": 2849, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "设二叉树有2n个结点，且m<n，则不可能存在2m个度为0的结点。", "Answer": false, "Explanation": "由二叉树的性质1可知n_0=n_2+1，结点总数=2n=n_0+n_1+n_2=n_1+2n_2+1,则n_1=2(n-n_2)-1，所以n_1为奇数，说明该二叉树中不可能有2m个度为1的结点。"}
{"ID": 2850, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "若一棵深度为6的完全二叉树的第6层有3个叶子结点，则该二叉树共有17个叶子结点。", "Answer": true, "Explanation": "深度为6的完全二叉树，第5层共有2^4=16个结点。第6层最左边有3个叶子结点，其对应的双亲结点为第5层最左边的两个结点，所以第5层剩余的结点均为叶子结点，共有16-2=14个，加上第6层的3个叶子结点，共有17个叶子结点。"}
{"ID": 2851, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在中序遍历时，n在m前的条件是n是m子孙。", "Answer": false, "Explanation": "中序遍历时，先访问左子树，再访问根结点，后访问右子树"}
{"ID": 2852, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "这棵二叉树的后序遍历结果为FEDCBA。", "Answer": false, "Explanation": "对于这种遍历序列向题，根据遍历结果得到二叉树，找到对应遍历序列。例如，在本题中，已知先序和中序遍历结果，可知本树的根结点为A，左子树有C和B，其余为右子树，则后序逾历结果中，A一定在最后，并且C和B一定在前面，又因先序中有DEF，中序中有EDF，则D为这个子树的根，所以D在后序中排在EF之后，故答案为false"}
{"ID": 2853, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "要判断线索二叉树中*P结点有右孩子结点的条件是当P不为空。", "Answer": false, "Explanation": "线索二叉树中用ltag/rtag标识结点的左/右指针域是否为线索，其值为1时，对应指针域为线索，其值为0时，对应指针域为左/右孩子。"}
{"ID": 2854, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "前序线索树的遍历仍需要栈的支持。", "Answer": false, "Explanation": "前序线索树的遍历不需要栈的支持。"}
{"ID": 2855, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "森林F中有3棵树，第一、第二、第三棵树的结点个数分别为M_1、M_2和M_3。与森林F对应的二叉树根结点的右子树上的结点个数是M_2+M_3。", "Answer": true, "Explanation": "森林与二叉树的转换规则同样是“左孩子右兄弟”，不过与普通树不同，森林中的每棵树是独立的，因此先要将每棵树的根结点全部视为兄弟结点的关系。所以，题中森林转换后，树2作为树1的根结点的右子树，树3作为树2的根结点的右子树。所以，森林F对应的二叉树根结点的右子树上的结点个数是M_2+M_3。"}
{"ID": 2856, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "图的顶点和边集的特性是，它们都可以为空。", "Answer": false}
{"ID": 2857, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "连通图的特性是任意两个顶点都是连通的，且无向图最少有n-1条边。", "Answer": true}
{"ID": 2858, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "边的权值是指边连接的顶点数量。", "Answer": false}
{"ID": 2859, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在有向完全图中，边数的范围是从0到n。", "Answer": false}
{"ID": 2860, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "邻接表表示图的方式特点是只能表示无向图。", "Answer": false}
{"ID": 2861, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "十字链表是一种存储方法，其空间复杂度最高。", "Answer": false}
{"ID": 2862, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "使用NextNeighbor(G, x, y)操作可以判断图中是否存在从顶点x到顶点y的边。", "Answer": false}
{"ID": 2863, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "要获取和设置图中边的权值，可以使用Get_edge_value(G, x, y)来获取图G中节点x和节点y之间的边的权值，也可以使用Set_edge_value(G, x, y, v)来设置图G中节点x和节点y之间的边的权值为v。", "Answer": true}
{"ID": 2864, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "要寻找图中顶点的第一个邻接点和下一个邻接点，可以使用FirstNeighbor(G, x)来找到顶点x的第一个邻接点，然后使用NextNeighbor(G, x, y)来找到顶点x的邻接点y的下一个邻接点。", "Answer": true}
{"ID": 2865, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个有n个顶点和n条边的无向图一定是有环的。", "Answer": true}
{"ID": 2866, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在有n个顶点的有向图中，每个顶点的度最大可达2n。", "Answer": false}
{"ID": 2867, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "若从无向图的任意顶点出发进行一次深度优先搜索即可访问所有顶点，则该图一定是强连通图。", "Answer": false, "Explanation": "强连通图是有向图，与题意矛盾；对无向连通图做一次深度优先搜索，可以访问到该连通图的所有顶点；有回路的无向图不一定是连通图，因为回路不一定包含图的所有结点，；连通图可能是树，也可能存在环。"}
{"ID": 2868, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个图的邻接矩阵表示是唯一的，而邻接表表示是不唯一的。", "Answer": true, "Explanation": "邻接矩阵表示唯一是因为图中边的信息在矩阵中有确定的位置，邻接表不唯一是因为邻接表的建立取决于读入边的顺序和边表中的插入算法。"}
{"ID": 2869, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于一个非连通无向图G，采用深度优先遍历访问所有顶点，在DFSTraverse函数中调用DFS的次数正好等于连通分量数。", "Answer": true, "Explanation": "DFS（或BFS）可用来计算图的连通分量数，因为一次遍历必然会将个连通图中的所有顶点都访问到，而对于已被访问的顶点将不再调用DFS，故计算图的连通分量数正好是DFSTraverse（)中DFS被调用的次数。"}
{"ID": 2870, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "除可以利用拓扑排序外，还可以利用求最短路径的Dijkstra算法来判断有向图中是否存在回路。", "Answer": false, "Explanation": "Dijkstra算法不可以用来判断有向图中是否存在回路"}
{"ID": 2871, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "对有n个顶点、e条边且使用邻接表存储的有向图进行广度优先遍历，其算法的时间复杂度是O(e)。", "Answer": false, "Explanation": "广度优先遍历蓄要借助队列实现。采用邻接表存储方式对图进行广度优先遍历时，每个顶点均需入队一次（项点表遍历），故时间复杂度为O(n)，在搜索所有顶点的邻接点的过程中，每条边至少访问一次（出边表遍历），所以时间复杂度为O(e)，算法总的时间复杂度为O(n+e)。"}
{"ID": 2872, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "查找的过程是随机访问数据集合。", "Answer": false}
{"ID": 2873, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "查找表是任意的数据集合。", "Answer": false}
{"ID": 2874, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "常见的对查找表的操作包括删除数据元素。", "Answer": false}
{"ID": 2875, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "查找长度指的是查找过程的时间长度。", "Answer": false}
{"ID": 2876, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "平均查找长度（ASL）是通过计算所有查找过程中访问的记录数的平均值来确定的。", "Answer": false}
{"ID": 2877, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "折半查找适用于有序的顺序表。", "Answer": true}
{"ID": 2878, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "分块查找的特点是块内和块间都有序。", "Answer": false}
{"ID": 2879, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "直接定址法的散列函数特点是简单且不会产生冲突，但可能造成存储空间浪费。", "Answer": true}
{"ID": 2880, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "平方取中法适用于只有少数几位关键字有意义的情况。", "Answer": false}
{"ID": 2881, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于长度为n的有序单链表，若查找每个元素的概率相等，则顺序查找表中任一元素的查找成功的平均查找长度为(n + 1)/2。", "Answer": true, "Explanation": "在有序单链表上做顺序查找，查找成功的平均查找长度与在无序顺序表或有序顺序表上做顺序查找的平均查找长度相同，都是（n+1)/2。"}
{"ID": 2882, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "散列查找法是只能在顺序存储结构上进行的查找方法。", "Answer": false, "Explanation": "折半查找只能是顺序存储且要求关键字有序。"}
{"ID": 2883, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在开放定址法中散列到同一个地址而引起的“堆积”问题是由于同义词之间或非同义词之间发生冲突引起的。", "Answer": true, "Explanation": "在开放定址法中散列到同一个地址而产生的“堆积”问题，是同义词冲突的探查序列和非同义词之间不同的探查序列交织在一起，导致关键字查询需要经过较长的探测距离，降低了散列的效率。因此要选择好的处理冲突的方法来避免“堆积”。"}
{"ID": 2884, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "采用链地址法处理冲突时，若限定在链首插入，则插入任一个元素的时间是相同的，同时采用链地址法处理冲突易引起聚集现象。", "Answer": false, "Explanation": "同义词冲突不等于聚集，链地址法处理冲突时将同义词放在同一个链表中，不会引起聚集现象"}
{"ID": 2885, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "排序是将表中的元素随机排列。", "Answer": false}
{"ID": 2886, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在带哨兵的直接插入排序中，哨兵的作用是加快查找速度。", "Answer": true}
{"ID": 2887, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "直接插入排序的平均时间复杂度是O(n^2)。", "Answer": true}
{"ID": 2888, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "快速排序的最好情况时间复杂度是O(n^1.3)。", "Answer": false}
{"ID": 2889, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在含有n个关键字的小根堆中，关键字最大的记录有可能存储在n/2位置。", "Answer": false}
{"ID": 2890, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "用直接插入排序算法对21,32,46,40,80,69,90,94进行排序，比较次数是9。", "Answer": false, "Explanation": "第一趟，插入32比较1次；第二越，插入46，比较1次：第三趟，插入40，由于40比46小但比32大，所以比较2次；第四趟，插入80，比较1次；第五趟，插入69，比较2次......共比较9次。同理求出C的比较次数为11次。故选B。"}
{"ID": 2891, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "若对27个元素只进行三趟多路归并排序，则选取的归并路数最少为3。", "Answer": true, "Explanation": "利用公式logk27，这里要求的是k，代入可得归并路数为3。"}
{"ID": 2892, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "对{05,46,13,55,94,17,42}进行基数排序，一趟排序的结果是42, 13, 94, 05, 55, 46, 17。", "Answer": true, "Explanation": "模拟基数排序过程即可"}
{"ID": 2893, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "一般情况下，二叉排序树是查找效率最低的数据结构。", "Answer": false, "Explanation": "二叉排序树效率较高"}
{"ID": 2894, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "若线性表最常用的操作是存取第i个元素及其前驱和后继元素的值，为了提高效率，应采用（）的存储方式。", "Answer": "顺序表"}
{"ID": 2895, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在一个长度为n的顺序表中删除第i（1≤i≤n）个元素时，需向前移动()个元素", "Answer": "n-i"}
{"ID": 2896, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "需要分配较大空间，插入和删除不需要移动元紊的线性表，其存储结构为（）。", "Answer": "静态链表"}
{"ID": 2897, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "将长度为 n 的单链表链接在长度为 m 的单链表后面，其算法的时间复杂度采用大于O形式表示应该是（）。", "Answer": "O(m)", "Explanation": "先遍历长度为m的单链表，找到该单链表的尾结点，然后将其next域指向另一个单链表的首结点，其时间复杂度为O（m）。"}
{"ID": 2898, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Linear List", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "在长度为n的有序单链表中插入一个新结点，并仍然保持有序的时间复杂度是（）。", "Answer": "O(n)", "Explanation": "设单链表递增有序，首先要在单链表中找到第一个大于×的结点的直接前驱p，在p之后插入该结点。查找的时间复杂度为O(n)，插入的时间复杂度为O(1)，总时间复杂度为O(n)。"}
{"ID": 2899, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在用单链表实现队列时，队头设在链表的（）位置。", "Answer": "链头"}
{"ID": 2900, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "执行函数时，其局部变量一般采用（）进行存储。", "Answer": "栈结构"}
{"ID": 2901, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "3个不同元素依次进，能得到（）种不同的出栈序列。", "Answer": "5", "Explanation": "因此可采用例举方法。如a,b,c依次进栈的出栈序列有abc,acb,bac,bca,cba另外，在一些考题中可能会问符合某个特定条件的出栈序列有多少种，比如此题中的间以b开头的出栈序列有几种，这种类型的题目一般都使用穷举法"}
{"ID": 2902, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "将三对角矩阵A[1...100][1...100]按行优先存入一维数组B[1...298］中，A中元素A[66][65]在数组B中的位置k为（)。", "Answer": "195", "Explanation": "对于三对角矩阵，将A[1...n][1...n]压缩至B[1...3n-2]时.a_i,j与b_k,的对应关系为k=2i+j-2。则A中的元素A「66][65]在数组B中的位置k为2*66+65-2=195"}
{"ID": 2903, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "构造哈夫曼树时，如果原始集合有n个结点，那么哈夫曼树的结点总数是多少？", "Answer": "2n-1"}
{"ID": 2904, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "一颗有n个结点的树的所有结点的度数之和为（）", "Answer": "n-1"}
{"ID": 2905, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "一棵完全二叉树上有1001个结点，其中叶结点的个数是（）。", "Answer": "501"}
{"ID": 2906, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "一颗有n个结点的二叉树采用二叉链存储结点，其中空指针数为（)。", "Answer": "n+1"}
{"ID": 2907, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定一棵度为3的树中，结点数为50，则其最小高度为（）。", "Answer": "5", "Explanation": "要求满足条件的树，那么该树是一棵完全三叉树。在度为3的完全三叉树中，第1层有1个结点，第2层有3^1=3个结点，第3层有3^2=9个结点，第4层有3^3=27个结点，因此结点数之和为1+3+9+27=40，第5层的结点数=50-40=10个，因此最小高度为5。"}
{"ID": 2908, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设一课二叉树的结点个数为50，则它的最小高度是（)。", "Answer": "6", "Explanation": "要求满足条件的树，分析可知，当这50个结点构成一棵完全二叉树时高度最小，h=[log2n]+1=[log250]+ 1 =6。"}
{"ID": 2909, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知一探有2011个结点的树，其叶结点个数是116，该树对应的二叉树中无右孩子的结点个数是（）。", "Answer": "1896", "Explanation": "其对应的二叉树中仅有前115个叶结点有右孩子结点，其余1896个结点均无右孩子结点。"}
{"ID": 2910, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "对二叉树的结点从1开始进行连续编号，要求每个结点的编号大于其左、右孩子的编号同一结点的左、右孩子中，其左孩子的编号小于其右孩子的编号，可采用（）次序的遍历实现编号。", "Answer": "后序遍历", "Explanation": "对每个顶点从1开始按序编号，要求结点编号大于其左、右孩子编号，并且左孩子编号小于右孩子编号。编号越大说明遍历顺序越靠后，因此，三者遍历顺序为先左子树、再右子树、后根结点，仅后序遍历满足要求"}
{"ID": 2911, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知一棵二叉树的后序序列为DABEC，中序序列为DEBAC，则先序序列为（）。", "Answer": "CEDBA", "Explanation": "根据后序序列与中序序列可构造出二叉树"}
{"ID": 2912, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "一棵左子树为空的二叉树在先序线索化后，其中空的链域的个数是（）", "Answer": "2个", "Explanation": "对左子树为空的二叉树进行先序线索化，根结点的左子树为空并且也没有前驱结点（先遍历根结点），先序遍历的最后一个元素为叶结点，左、右子树均为空且有前驱无后继结点，故线索化后，树中空链域有2个。"}
{"ID": 2913, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "若T_1是由有序树T转换而来的二叉树，则T中结点的后根序列就是中结点的()序列。", "Answer": "中序", "Explanation": "在树T中，叶子结点B应最先访问，在T_1中，B的右兄弟C转换为它的右孩子，若对应T_1的后序序列，则C应在B的前面访问，所以T的后根序列不可能对应T_1，的后序序列。"}
{"ID": 2914, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "在有n个叶子结点的哈夫曼树中，非叶子结点的总数是（）", "Answer": "n-1", "Explanation": "由哈夫曼树的构造过程可知，哈夫曼树中只有度为0和2的结点：在非空二叉树中，有n_0=n_2+1,故n_2=n-1"}
{"ID": 2915, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "设哈夫曼编码的长度不超过4，若已对两个字符编码为1和01，则还最多可对（）个字符编码。", "Answer": "4", "Explanation": "在哈夫曼编码中，一个编码不能是任何其他编码的前缀。3位编码可能是001，对应的4位编码只能是0000和0001。3位编码也可能是000，对应的4位编码只能是0010和0011。若全采用4位编码，则可以为0000，0001，0010和0011。"}
{"ID": 2916, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "一棵哈夫要树共有215个结点，对其进行哈夫曼缩码，共能得到（）个不同的字。", "Answer": "108", "Explanation": "叶子结点数为(215+1)/2=108，所以共有108个不同的码字。"}
{"ID": 2917, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "构造哈夫曼树过程中共新建了多少个结点？", "Answer": "n-1"}
{"ID": 2918, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "十字链表适用于存储什么类型的图？", "Answer": "有向图"}
{"ID": 2919, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "邻接多重表适用于存储什么类型的图？", "Answer": "无向图"}
{"ID": 2920, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "邻接矩阵最适合用于存储哪种类型的图？", "Answer": "稠密图"}
{"ID": 2921, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个有28条边的非连通无向图至少有（）个顶点。", "Answer": "9"}
{"ID": 2922, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "若具有n个顶点的图是一个环，则它有（）棵生成树", "Answer": "n"}
{"ID": 2923, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "n个顶点的无向图的邻接表最多有（）个边表结点", "Answer": "n(n-1)"}
{"ID": 2924, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "邻接多重表是（）的存储结构。", "Answer": "无向图"}
{"ID": 2925, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "若图的邻接矩阵中主对角线上的元素皆为0，其余元素全为1，则可以断定该图一定是（）。", "Answer": "完全图", "Explanation": "除主对角线上的元素外，其余元素全为1，说明任意两个顶点之间都有边相连，因此该图一定是完全图。"}
{"ID": 2926, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设有n个顶点、e条边的有向图用邻接表表示，则删除与某个顶点V相关的所有边的时间复杂度为（）。", "Answer": "O(n+e)", "Explanation": "与顶点v相关的边包括出边和入边，对于出边，只需遍历v的顶点表结点和其指向的边表;对于入边，则需遍历整个边表。先删除出边：删除v的顶点表结点的单链表，出边数最多为n-1时间复杂度为O(n);再删除入边：扫描整个边表（即扫描剩余全部顶点表结点及其指向的边表），删除所有的顶点v的入边，时间复杂度为O(n+e)。故总的时间复杂度为O(n+e)。"}
{"ID": 2927, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "用DFS遍历一个无环有向图，并在DFS算法退栈返回时打印相应的顶点，则输出的顶点序列是（）。", "Answer": "逆拓扑有序", "Explanation": "设在图中有顶点V_i，它有后继顶点V_j：即存在边<V_i，V_j>。根据DFS的规则，V_i入栈后，必先遍历完其后继顶点后V_i才会出栈，也就是说V_i会在V_j之后出栈，在如题所指的过程中，V_i在V_j后打印。由于V_i和V_j具有任意性，可以从上面的规律看出，输出顶点的序列是逆拓扑有序序列。"}
{"ID": 2928, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "顺序查找通常适用于哪种数据结构？", "Answer": "线性表"}
{"ID": 2929, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "按（）遍历二叉排序树得到的序列是一个有序序列", "Answer": "中序"}
{"ID": 2930, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "含有20个结点的平衡二叉树的最大深度为（）", "Answer": "6"}
{"ID": 2931, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "对有2500个记录的索引顺序表（分块表）进行查找，最理想的块长为（）", "Answer": "50", "Explanation": "设块长为b，索引表包含n/b项，索引表的ASL=(n/b+1)/2，块内的ASL=(b+1)2，总ASL索引表的ASL+块内的ASL=(b+n/b+2)/2，其中对于b+n/b，由均值不等式知b=n/b时有最小值，此时b=√n。则最理想块长为√2500=50。"}
{"ID": 2932, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "具有n个关健字的m阶B树，应有（）个叶结点。", "Answer": "n+1", "Explanation": "B树的叶结点对应查找失败的情况，对有n个关键字的查找集合进行查找，失败可能性有n+1种。"}
{"ID": 2933, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在待排序的元素序列基本有序的前提下，效率最高的排序方法是（)", "Answer": "直接插入排序"}
{"ID": 2934, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "对5个不同的数据元素进行直接插入排序，最多需要进行的比较次数是（）。", "Answer": "10", "Explanation": "直接插入排序在最坏的情况下要做n(n-1)/2次关键字的比较，当n=5时，关键字的比较次数为10（未考虑与哨兵的比较）。"}
{"ID": 2935, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "若用冒泡排序算法对序列{10,14,26,29,41，52}从大到小排序，则需进行（）次比较。", "Answer": "15", "Explanation": "冒泡排序始终在调整“逆序”，因此交换次数为排列中逆序的个数。对逆序序列进行管泡持序，每个元素尚后调整时都需要进行比较，因此共需要比较5+4+3+2+1=15次"}
{"ID": 2936, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "就平均性能而言，目前最好的内部排序方法是（）。", "Answer": "快速排序", "Explanation": "虽然众多排序算法的平均时间复杂度也是O(nlog2n)，但快速排序算法的常数因子是最小的。"}
{"ID": 2937, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "若只想得到1000个元素组成的序列中第10个最小元素之前的部分排序的序列，用（）方法最快。", "Answer": "堆排序", "Explanation": "希尔排序和快速排序要等排序全部完成之后才能确定最小的10个元素冒泡排序需要从后向前执行10趟冒泡才能得到10个最小的元素，而堆排序只需调整10-次小根堆，调整时间与树高成正比。显然堆排序所需的时间更短。"}
{"ID": 2938, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "若序列的原始状态为{1,2,3,4,5,10,6,7,8,9}，要想使得排序过程中的元素比较次数最少，则应该采用（）方法。", "Answer": "插入排序", "Explanation": "初始序列基本有序时，插入排序比较次数较少。"}
{"ID": 2939, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Overview", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "试举一例，说明对相同的逻辑结构，同一种运算在不同的存储方式下实现时，其运算效率不同。", "Answer": "线性表既可以用顺序存储方式实现，又可以用链式存储方式实现。在顺序存储方式下，在线性表中插入和删除元素，平均要移动近一半的元素，时间复杂度为O(n)：而在链式存储方式下，插入和删除的时间复杂度都是O(1)。"}
{"ID": 2940, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Stack, Queue, and Array", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "若元素的进栈序列为A,B,C,D,E，运用栈操作，能否得到出栈序列B,C,A,E,D和D,B,A,C,E?为什么?", "Answer": "能得到出栈序列BCAED。可由A进，B进，B出，C进，C出，A出，D进，E进，E出，D出得到。不能得到出栈序列DBACE。若出栈序列以D开头，说明在D之前的入栈元素是A、B和C，三个元素中C是栈顶元素，B和A不可能早于C出栈，故不可能得到出栈序列DBACE。"}
{"ID": 2941, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "有n个元素已构成1个小根堆，现在要增加一个元素K_n+1，请用文字简要说明如何在log2n的时间内将其重新调整为一个堆。", "Answer": "将K_n+1插入数组的第n+1个位置（即作为一个树叶插入)然后将其与双亲比较若它大于其双亲则停止调整，否则将K_n+1与其双亲交换，重复地将K与其新的双亲比较，算法终止于K_n+1大于等于其双亲或K_n+1本身已上升为根。"}
{"ID": 2942, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "含有n个结点的三叉树的最小高度是多少？", "Answer": "要求含有n个结点的三叉树的最小高度，那么满足条件的一定是一棵完全三叉树，设含有个结点的完全三叉树的高度为h，第h层至少有1个结点，至多有3^(h-1)个结点。则有\n1 + 3^1+ 3^2 +...+ 3^(h-2) < n ≤1 + 3^1 + 3^2 +...+ 3^(h-2)  + 3^(h-1) \n由于h只能为正整数，h=[log3(2n+1)]，故这样的三叉树的最小高度是[log3(2n+1)]"}
{"ID": 2943, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在一棵完全二叉树中，含有n_0个叶子结点，当度为1的结点数为1时，该树的高度是多少？当度为1的结点数为0时，该树的高度是多少？", "Answer": "①当n_1=1时，n=2n_0,h=[log2(n+1)]=[log2(2n_0+1)]。\n②当 n_1=0时，n=2n_0-1,h=[log2(n+1)]=[log2(2n_0)=[log2(n_0)]+ 1"}
{"ID": 2944, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知完全二叉树的第9层有240个结点，则整个完全二叉树有多少个结点？有多少个叶子结点？", "Answer": "在完全二叉树中，若第9层是满的，则结点数=2^(9-1)=256，而现在第9层只有240个结点，说明第9层未满，是最后一层。1～8层是满的，所以总结点数=281+240=495。因为第9层是最后一层，所以第9层的结点都是叶子结点。且第9层的240个结点的双亲在第8层中，其双亲个数为120，即第8层有120个分支结点，其余为叶子结点，所以第8层的叶子结点个数为2^(8-1)_120=8。因此，总的叶子结点个数=8+240=248。"}
{"ID": 2945, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "若某非空二叉树的先序序列和后序序列正好相反，则该二叉树的形态是什么？", "Answer": "二叉树的先序序列是NLR，后序序列是LRN。要使NLR=NRL（后序序列反序）成立，L或R应为空，这样的二叉树每层只有一个结点，即二叉树的形态是其高度等于结点个数。"}
{"ID": 2946, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Tree", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "若某非空二叉树的先序序列和后序序列正好相同，则该二叉树的形态是什么？", "Answer": "二叉树的先序序列是NLR，后序序列是LRN。要使NLR=LRN成立，L和R应均为空，所以满足条件的二叉树只有一个根结点。"}
{"ID": 2947, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "图G是一个非连通无向图，共有28条边，该图至少有多少个顶点？", "Answer": "由于图G是一个非连通无向图，在边数固定时，顶点数最少的情况是该图由两个连通子图构成，且其中之一只含一个顶点，另个为完全图。其中只含一个顶点的子图没有边，另一个完全图的边数为n(n-1)/2=28，得n=8。所以该图至少有1+8=9个顶点。"}
{"ID": 2948, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Graph", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "如何对无环有向图中的项点号重新安排可使得该图的邻接矩阵中所有的1都集中到对角线以上？", "Answer": "按各项点的出度进行排序。n个顶点的有向图，其顶点的最大出度是n-1，最小出度为0，这样排序后，出度最大的顶点编号为1，出度最小的项点编号为n。之后，进行调整，即只要存在弧<i，j>，就不管顶点j的出度是否大于顶点1的出度，都把1编号在顶点j的编号之前，因为只有i≤i，弧<i、j>对应的1才能出现在邻接矩阵的上三角。"}
{"ID": 2949, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "若要在散列表中删除一个记录，应如何操作？为什么？", "Answer": "在散列表中删除一个记录，在拉链法情况下可以物理地删除。但在开放定址法情况下，不能物理地除，只能做删除标记。该地址可能是该记录的同义词查找路径上的地址，物理地删除就中断了查找路径，因为查找时碰到空地址就认为是查找失败。"}
{"ID": 2950, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "若对有n个元素的有序顺序表和无序顺序表进行顺序查找，试就下列三种情况分别讨论两者在相等查找概率时的平均查找长度是否相同\n(1）查找失败。\n(2）查找成功，且表中只有一个关键字等于给定值k的元素\n(3）查找成功，且表中有若干关键字等于给定值k的元素，要求一次查找能找出所有元素。", "Answer": "(1）平均查找长度不同。因为有序顺序表查找到其关键字值比要查找值大的元素时就停止查找，并报告失败信息，不必查找到表尾；而无序顺序表必须查找到表尾才能确定查找失败。\n(2）平均查找长度相同。两者查找到表中元素的关键学值等于给定值时就停止查找。\n(3）平均查找长度不同。有序顺序表中关键学相等的元素相继排列在一起，只要查找到第一个就可以连续查找到其他关键字相同的元素。而无序顺序表必须查找全部表中的元素才能找出相同关键字的元素，因此所需的时间不同。"}
{"ID": 2951, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "类比二分查找算法，设计k分查找算法（k为大于2的整数）如下：首先检查nk处（）为查找表的长度）的元素是否等于要搜索的值，然后检查2n/k处的元素.....这样，或者找到要查找的元素，或者把集合缩小到原来的1/k，若未找到要查找的元素，则继续在得到的集合上进行k分查找；如此进行，直到找到要查找的元素或查找失败，试求查找成功和查找失败的时间复杂度。", "Answer": "与二分查找类似，表分查找法可用k叉树来描述。在最坏情况下，从第2层开始每层都比较k-1次，具有n个结点的k叉树的深度为[logkn]+1，所以k分查找法在查找成功时和给定关键字进行比较的次数至多为(k-1)×[logkn]，即时间复杂度为O(logkn)。同理，查找不成功时，和给定关键字进行比较的次数也至多为(k-1)x[logkn]，故时间复杂度也为O(logkn)。"}
{"ID": 2952, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "利用B树做文件索引时，若假设磁盘页块的大小是4000B（实际应是2的次幂，此处是为了计算方便)，指示磁盘地址的指针需要5B。现有20000000个记录构成的文件，每个记录为200B，其中包括关键字5B，试问在这个采用B树作索引的文件中，B树的阶数应为多少？假定文件数据部分未按关键字有序排列，则索引部分需要占用多少磁盘页块？", "Answer": "根据B树的概念，一个索引结点应适应操作系统一次读写的物理记录大小，其大小应取不超过但最接近一个磁盘页块的大小。假设B树为m阶，1个B树结点最多存放m-1个关键字（5B）和对应的记录地址（5B）、m个子树指针（5B）和1个指示结点中的实际关键字个数的整数（2B），则有\n(2*(m-1)+m)*5 +2≤4000计算结果为m≤267。一个索引结点最多可以存放m-1=266个紧引项，最少可以存放m/2|-1=133个索引项。全部有n=20000000个记录，每个记录占用空间200B，每个页块可以存放4000/200=20个记录，则全部记录分布在20000000/20=1000000个页块中，最多需要占用1000000/133=7519个磁盘页块作为B树索引，最少需要占用1000000/2663760个磁盘页块作为B树索引（注意B树与B+树的不同，B树所有对数据记录的索引项分布在各个层次的结点中，B+树所有对数据记录的索引项都在叶结点中）。"}
{"ID": 2953, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Searching", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定把关键字key散列到有n个表项（从0到n-1编址）的散列表中。对于下面的每\n个函数H（key）（key为整数），这些函数能够当作散列函数吗？若能，它是一个好的散列函数吗？说明理由.设函数random(n)返回个0到n一1之问的随机整数（包括0与n-1在内）。\n(1) H(key)=key/n.\n(2) H(key)=1\n(3) H(key)=(key+random(n) ) %n\n(4）H(key)=key%p(n);其中p(n）是不大于n的最大素数", "Answer": "(1）不能作为散列函数，因为key/n可能大于n，这样就无法找到适合的位置。\n(2）能够作为散列函数，但不是一个好的散列函数，自因为所有关键字都映射到同一位置，造成大量的冲突机会。\n(3）不能当作散列函数，因为该函数的返回值不确定，这样无法进行需的查找\n(4）能够作为散列函数，是一个好的散列函数。"}
{"ID": 2954, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "多路平衡归并排序是外部排序的主要方法，试问多路平衡归并排序包括哪两个相对独立的阶段？每个阶段完成何种工作？", "Answer": "多路平衡归并排序由两个相对独立的阶段组成;生成初始归并段阶段和多趟归并排序阶段。生成初始归并段阶段根据内存工作区的大小，将有n个记录的磁盘文件分批输入内存，采用有效的内部排序方法分别进行排序，生成若干有序的子文件，即初始归并段。多趟归并排序阶段采用多路归并方法将这些归并段逐趟归并，最后归并成一个有序文件。"}
{"ID": 2955, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在使用非递归方法实现快速排序时，通常要利用一个栈记忆待排序区间的两个端点，能否用队列来实现这个栈？为什么？", "Answer": "可以用队列来代替栈。在快速排序的过程中，通过一趟划分，可以把与个待排序区间分为两个子区间，然后分别对这两个子区间施行同样的划分。栈的作用是在处理一个子区间时，保存另一个子区间的上界和下界（排序过程中可能产生新的左、右子区间），待该区间处理完后再从栈中取出另一子区间的边界，对其进行处理。这个功能用队列也可以实现，只不过处理子区间的顺序有所变动而已。"}
{"ID": 2956, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "若只想得到一个序列中第k（k≥5）个最小元素之前的部分排序序列，则最好采用什么排序方法？", "Answer": "在基于比较的排序方法中，插入排序、快速排序和归并排序只有在将元素全部排完序后，才能得到前小的元素序列，算法的效率不高。\n冒泡排序、堆排序和简单选择排序可以，因为它们在每一越中都可以确定一个最小的元素。采用堆排序最合适，对于n个元素的序列，建立初始堆的时间不超过4n，取得第k个最小元素之前的排序序列所花的时间为klog2n，总时间为4n+klog2n；冒泡和简单选择排序完成此功能所花时间为n，当k≥5时，通过比较可以得出堆排序最优。"}
{"ID": 2957, "Split": "Test", "Domain": "Data Structure and Algorithm", "SubDomain": "Sorting", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "设关键字序列为{3,7,6,9,7,1,4,5,20}，对其进行排序的最小交换次数是多少？", "Answer": "由于关键字序列数较小，采用直接插入排序或简单选择排序，直接插入排序的交换次数更多选择简单选择排序。\n初始序列：3,7,6.9,7,1,4,5,20\n第一次：1,7,6,9,7,3,4,5,20交换1,3\n第二次：1,3,6,9,7,7,4,5,20交换3,7\n第二次：1,3,4,9,7,7,6,5,20交换4,6\n第四次：1,3,4,5,7,7,6,9,20交换5,9\n第五次：1,3,4,5,6,7,7,9,20交换6,7\n所以最小交换次数为5（注意这里是交换次数，不是移动次数或比较次数）。"}
{"ID": 2958, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机的哪种分类基于指令和数据流？()", "A": "电子模拟计算机和电子数字计算机", "B": "专用计算机和通用计算机", "C": "单指令流和单数据流系统（SISD），单指令流和多数据流系统（SIMD）", "D": "巨型机、大型机、中型机、小型机、微型机和单片机", "Answer": "C"}
{"ID": 2959, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在早期的冯诺依曼机中，计算机硬件系统由哪些部件组成？()", "A": "算术逻辑单元、控制单元、存储器", "B": "运算器、存储器、控制器、输入设备、输出设备", "C": "程序计数器、指令寄存器、控制单元", "D": "主存储器、辅助存储器、缓存", "Answer": "B"}
{"ID": 2960, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "机器字长指的是什么？()", "A": "CPU中最小的时间单位", "B": "存储器地址寄存器MAR的位数", "C": "计算机进行一次整数运算所能处理的二进制数据的位数", "D": "存储器中每个存储单元存储的二进制代码长度", "Answer": "C"}
{"ID": 2961, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "32位和64位计算机主要指的是什么？()", "A": "CPU时钟频率", "B": "操作系统的类型", "C": "计算机的存储容量", "D": "机器字长", "Answer": "D"}
{"ID": 2962, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "电子数字计算机和电子模拟计算机的主要区别在于什么？()", "A": "数据处理方式", "B": "存储容量大小", "C": "运算速度", "D": "应用领域", "Answer": "A"}
{"ID": 2963, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "冯诺依曼体系结构的计算机，其特点是什么？()", "A": "多指令流和多数据流系统", "B": "指令和数据均用二进制代码表示", "C": "主要用于图形处理", "D": "以运算器为中心的设计", "Answer": "B"}
{"ID": 2964, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在现代计算机系统中，输入/输出设备与存储器之间的数据传输是如何进行的？()", "A": "通过运算器", "B": "直接在I/O设备和存储器之间完成", "C": "通过专用的外部设备", "D": "需要人工干预", "Answer": "B"}
{"ID": 2965, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据库管理系统DBMS和数据库系统DBS的区别是什么？()", "A": "DBMS是硬件设备，DBS是软件系统", "B": "DBMS是应用软件，DBS是系统软件", "C": "DBMS是系统软件，DBS包括数据库和数据库管理系统", "D": "DBMS是编程语言，DBS是数据库的集合", "Answer": "C"}
{"ID": 2966, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机中，“透明”一词通常用来指什么？()", "A": "数据的可视化", "B": "某些部件对用户不可见", "C": "系统的开放性", "D": "网络的连接性", "Answer": "B"}
{"ID": 2967, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "微型计算机的发展以 ( )技术为标志", "A": "操作系统", "B": "微处理器", "C": "磁盘", "D": "软件", "Answer": "B"}
{"ID": 2968, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "完整的计算机系统应包括()", "A": "运算器、存储器、控制器", "B": "外部设备和主机", "C": "主机和应用程序", "D": "配套的硬件设备和软件系统", "Answer": "D"}
{"ID": 2969, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下说法错误的是 ( )", "A": "硬盘是外部设备", "B": "软件的功能与硬件的功能在逻辑上是等效的", "C": "硬件实现的功能一般比软件实现具有更高的执行速度", "D": "软件的功能不能用硬件取代", "Answer": "D"}
{"ID": 2970, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "CPU不包括()", "A": "地址寄存器", "B": "地址译码器", "C": "指令寄存器 (IR)", "D": "通用寄存器", "Answer": "B"}
{"ID": 2971, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在运算器中，不包含( )。", "A": "状态寄存器", "B": "数据总线", "C": "ALU", "D": "地址寄存器", "Answer": "D"}
{"ID": 2972, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列( )属于应用软件", "A": "连接程序", "B": "操作系统", "C": "编译程序", "D": "文本处理", "Answer": "D"}
{"ID": 2973, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列( )不属于系统软件。", "A": "数据库系统", "B": "操作系统", "C": "编译程序", "D": "以上3种都属于系统程序", "Answer": "A"}
{"ID": 2974, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "关于相联存储器，下列说法中正确的是( )。", "A": "只可以按地址寻址", "B": "只可以按内容寻址", "C": "既可按地址寻址又可按内容寻址", "D": "以上说法均不完善", "Answer": "C"}
{"ID": 2975, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机系统的层次结构可以分为 6 层，其层次之间的依存关系是 ( ).", "A": "上下层之间相互无关", "B": "上层实现对下层的功能扩展，而下层是实现上层的基础", "C": "上层实现对下层的扩展作用，而下层对上层有限制作用", "D": "上层和下层的关系是相互依存、不可分割的", "Answer": "B"}
{"ID": 2976, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下说法中，错误的是 ( ).", "A": "计算机的机器字长是指数据运算的基本单位长度", "B": "寄存器由触发器构成", "C": "计算机中一个字的长度都是 32 位", "D": "磁盘可以永久性存放数据和程序", "Answer": "C"}
{"ID": 2977, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "用于科学计算的计算机中，标志系统性能的最有用的参数是 ( )", "A": "主时钟频率", "B": "主存容量", "C": "MFLOPS", "D": "MIPS", "Answer": "C"}
{"ID": 2978, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "若一台计算机的机器字长为 4 字节，则表明该机器 ( )", "A": "能处理的数值最大为 4 位十进制数", "B": "能处理的数值最多为 4 位二进制数", "C": "在 CPU 中能够作为一个整体处理 32 位的二进制代码", "D": "在 CPU 中运算的结果最大为 2^32", "Answer": "C"}
{"ID": 2979, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机操作的最小单位时间是 ( )", "A": "时钟周期", "B": "指令周期", "C": "CPU 周期", "D": "中断周期", "Answer": "A"}
{"ID": 2980, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机中，CPU 的 CPI 与下列( ) 因素无关。", "A": "时钟频率", "B": "系统结构", "C": "指令集", "D": "计算机组织", "Answer": "A"}
{"ID": 2981, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列关于“兼容”的叙述，正确的是 ()", "A": "指计算机软件与硬件之间的通用性，通常在同一系列不同型号的计算机间存在", "B": "指计算机软件或硬件的通用性，即它们在任何计算机间可以通用", "C": "指计算机软件或硬件的通用性，通常在同一系列不同型号的计算机间通用", "D": "指软件在不同系列计算机中可以通用，而硬件不能通用", "Answer": "C"}
{"ID": 2982, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "关于编译程序和解释程序，下列说法中错误的是 ( ).", "A": "编译程序和解释程序的作用都是将高级语言程序转换成机器语言程序", "B": "编译程序编译时间较长，运行速度较快", "C": "解释程序方法较简单，运行速度也较快", "D": "解释程序将源程序翻译成机器语言，并且翻译一条以后，立即执行这条语句", "Answer": "C", "Explanation": "编译程序是先完整编译后运行的程序，如C、C++等；解释程序是一句一句翻译且边翻译边执行的程序，如JavaScript、Python等。由于解释程序要边翻译成机器语言边执行，因此一般速度较编译程序慢。"}
{"ID": 2983, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "只有当程序执行时才将源程序翻译成机器语言，并且一次只能翻译一行语句，边翻译边执行的是()程序，把汇编语言源程序转变为机器语言程序的过程是()\nⅠ.编译 Ⅱ.目标 Ⅲ.汇编 Ⅳ.解释", "A": "Ⅰ、Ⅱ", "B": "Ⅳ、Ⅱ", "C": "Ⅳ、Ⅰ", "D": "Ⅳ、Ⅲ", "Answer": "D", "Explanation": "解释程序的特点是翻译一句执行一句，边翻译边执行；由高级语言转化为汇编语言的过程称为编译，把汇编语言源程序翻译成机器语言程序的过程称为汇编。"}
{"ID": 2984, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列叙述中，正确的是 ( )\nⅠ.实际应用程序的测试结果能够全面代表计算机的性能\nⅡ.系列机的基本特性是指令系统向后兼容\nⅢ.软件和硬件在逻辑功能上是等价的", "A": "Ⅱ", "B": "Ⅲ", "C": "Ⅱ和Ⅲ", "D": "Ⅰ、Ⅱ和Ⅲ", "Answer": "C", "Explanation": "全面代表计算机性能的是实际软件的运行情况。向后兼容指的是时间上向后兼容，即新机器兼容使用以前机器的指令系统。软件和硬件在逻辑功能上是等价的，如浮点运算即可以用专门的浮点运算器实现，也可以通过编写一段子程序实现。"}
{"ID": 2985, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "关于 CPU 主频、CPI、MIPS、MFLOPS，说法正确的是( )。", "A": "CPU 主频是指 CPU 系统执行指令的频率，CPI 是执行一条指令平均使用的频率", "B": "CPI 是执行一条指令平均使用 CPU 时钟的个数，MIPS 描述一条 CPU 指令平均使用的 CPU 时钟数", "C": "MIPS 是描述 CPU 执行指令的频率，MFLOPS 是计算机系统的浮点数指令", "D": "CPU 主频指 CPU 使用的时钟脉冲频率, CPI 是执行一条指令平均使用的 CPU 时钟数", "Answer": "D", "Explanation": "CPI 是执行一条指令平均使用 CPU 时钟的个数，MIPS 描述一条 CPU 指令平均使用的 CPU 时钟数。"}
{"ID": 2986, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于机器字长、指今字长和存储字长的说法中，正确的是 ( )Ⅰ.三者在数值上总是相等的 Ⅱ.三者在数值上可能不等 Ⅲ.存储字长是存放在一个存储单元中的二进制代码位数 Ⅳ.数据字长就是MDR 的位数", "A": "Ⅰ、Ⅲ", "B": "Ⅰ、Ⅳ", "C": "Ⅱ、Ⅲ", "D": "Ⅱ、Ⅳ", "Answer": "C", "Explanation": "机器字长、指令字长和存储字长，三者在数值上可以相等也可以不等。存储字长等于 MDR 的位数，而数据字长是数据总线一次能并行传送信息的位数，它可以不等于 MDR 的位数。"}
{"ID": 2987, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在奇校验码中，若信息位为1100101，则校验位应为多少？()", "A": "0", "B": "1", "C": "2", "D": "3", "Answer": "B"}
{"ID": 2988, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "若浮点数的指数采用移码表示，且机器字长为8位，则最大能表示的正指数是多少？()", "A": 127, "B": 128, "C": -127, "D": -128, "Answer": "A"}
{"ID": 2989, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "补码定点数加减运算中，若符号位的进位与最高数位的进位不同，说明发生了什么？()", "A": "只是下溢", "B": "溢出", "C": "无溢出", "D": "错误", "Answer": "B"}
{"ID": 2990, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在并行加法器中，进位传递函数Pi的表达式是什么？()", "A": "AiBi", "B": "Ai+Bi", "C": "Ai+Bi+Ci", "D": "Ai-Bi", "Answer": "B"}
{"ID": 2991, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在循环冗余校验码（CRC）中，若信息码为8位，校验码为4位，那么整个编码的长度是多少位？()", "A": "8位", "B": "12位", "C": "16位", "D": "4位", "Answer": "B"}
{"ID": 2992, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "若一个字长为8位的二进制机器数表示的是一个负数，其最高位是多少？()", "A": 0, "B": 1, "C": 2, "D": 3, "Answer": "B"}
{"ID": 2993, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对于余3码，数字5的表示是什么？()", "A": "1000", "B": "1001", "C": "1010", "D": "1011", "Answer": "A"}
{"ID": 2994, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在数据的表示中，小端模式（Little-endian）是指什么？()", "A": "先存储高位字节", "B": "先存储低位字节", "C": "随机存储字节", "D": "交替存储字节", "Answer": "B"}
{"ID": 2995, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在2421码中，数字7的正确表示是什么？()", "A": 111, "B": 1111, "C": 1011, "D": 1101, "Answer": "D"}
{"ID": 2996, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在算术逻辑单元ALU中，一位全加器的和表达式是什么？()", "A": "Ai + Bi", "B": "Ai ⊕ Bi", "C": "Ai ⊕ Bi ⊕ Ci-1", "D": "AiBi + (Ai ⊕ Bi)Ci-1", "Answer": "D"}
{"ID": 2997, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在数据表示中，关于符号位的移码表示法，以下哪项是正确的？()", "A": "移码中零的表示不唯一", "B": "移码的符号位取反即得补码", "C": "移码全1时，对应真值的最大值", "D": "移码全0时，对应真值的最小值", "Answer": "B"}
{"ID": 2998, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在IEEE754标准中，规格化的长浮点数的尾数部分使用了多少位二进制表示？()", "A": "11位", "B": "23位", "C": "52位", "D": "64位", "Answer": "C"}
{"ID": 2999, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在IEEE754标准中，非规格化的短浮点数的真值表示是什么？()", "A": "(-1)^S × 1.M × 2^(E-127)", "B": "(-1)^S × 1.M × 2^(E-1023)", "C": "(-1)^S × 0.M × 2^(-126)", "D": "(-1)^S × 0.M × 2^(-1022)", "Answer": "C"}
{"ID": 3000, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对于循环移位，当向右循环移动一位时，原来最低位的值将被移动到哪里？()", "A": "最高位", "B": "丢弃", "C": "次高位", "D": "次低位", "Answer": "A"}
{"ID": 3001, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在数据的表示中，大端模式（Big-endian）是指什么？()", "A": "先存储高位字节", "B": "先存储低位字节", "C": "随机存储字节", "D": "交替存储字节", "Answer": "A"}
{"ID": 3002, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在逻辑移位运算中，逻辑左移一位的结果是什么？()", "A": "高位移出，低位补1", "B": "高位移出，低位补0", "C": "低位移出，高位补1", "D": "低位移出，高位补0", "Answer": "B"}
{"ID": 3003, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在算术逻辑单元ALU的运算中，进位表达式Ci的正确表达式是什么？()", "A": "Ai + Bi", "B": "Ai ⊕ Bi", "C": "Ai ⊕ Bi ⊕ Ci-1", "D": "AiBi + (Ai ⊕ Bi)Ci-1", "Answer": "D"}
{"ID": 3004, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对真值0表示形式唯一的机器数是 ( )", "A": "原码", "B": "补码和移码", "C": "反码", "D": "以上都不对", "Answer": "B"}
{"ID": 3005, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列为8位移码机器数[x]移，求[-x]移时，( ) 将会发生溢出。", "A": "11111111", "B": "00000000", "C": "10000000", "D": "01111111", "Answer": "B"}
{"ID": 3006, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在浮点数编码表示中，( ) 在机器数中不出现，是隐含的。", "A": "阶码", "B": "符号", "C": "尾数", "D": "基数", "Answer": "D"}
{"ID": 3007, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "采用规格化的浮点数最主要是为了 ( )。", "A": "增加数据的表示范围", "B": "方便浮点运算", "C": "防止运算时数据溢出", "D": "增加数据的表示精度", "Answer": "D"}
{"ID": 3008, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列各种数制的数中，最小的数是 ( )。", "A": "(101001)_2", "B": "(101001)_{BCD}", "C": "(52)_8", "D": "(233)_16", "Answer": "B", "Explanation": "A为29H，B为 29D，C写成二进制数为 101010，即 2AH，显然最小的为 29D。注意，没有特殊说明时，可默认BCD码就是8421码"}
{"ID": 3009, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列说法有误的是 ( )", "A": "任何二进制整数都可以用十进制表示", "B": "任何二进制小数都可以用十进制表示", "C": "任何十进制整数都可以用二进制表示", "D": "任何十进制小数都可以用二进制表示", "Answer": "D", "Explanation": "选项A、B、C明显正确，二进制整数和十进制整数可以相互转换，仅仅是每位的位权不同。而二进制的小数位只能表示1/2,1/4,1/8,...,1/2^n，因此无法表示所有的十进制小数，D错误"}
{"ID": 3010, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "计算机内部的定点数大多用补码表示，以下是一些关于补码特点的叙述:<br>I，零的表示是唯一的<br>II.符号位可以和数值部分一起参加运算<br>IIl.和其真值的对应关系简单、直观<br>IV.减法可用加法来实现.<br>在以上叙述中，()是补码表示的特点。", "A": "I和II", "B": "I和 III", "C": "I和II和III", "D": "I和II和IV", "Answer": "D", "Explanation": "[0]补和[-0]补是相同的，所以I正确。在进行补码定点数的加减运算时，符号作为数的一部分参加运算，所以II正确，[A]补- [B]补 = [A]补+ [-B]补，即将减法采用加法实现，所以IV正确。实际上，补码和其真值的对应关系远不如原码和其真值的对应关系简单直观，所以III错误."}
{"ID": 3011, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "并行加法器中，每位全和的形成除与本位相加二数数值位有关外，还与()有关？", "A": "低位数值大小", "B": "低位数的全和", "C": "高位数值大小", "D": "低位数送来的进位", "Answer": "D", "Explanation": "在二进制加法中，本位运算的结果与参与运算的两数数值位有关，还和低位送来的进位有关。"}
{"ID": 3012, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在串行进位的并行加法器中，影响加法器运算速度的关键因素是什么？", "A": "门电路的级延迟", "B": "元器件速度", "C": "进位传递延迟", "D": "各位加法器速度的不同", "Answer": "C", "Explanation": "进位传递延迟是影响并行加法器运算结果的关键因素，虽然其他因素也会产生影响。"}
{"ID": 3013, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "补码定点整数 01010101左移两位后的值是什么？", "A": "0100 0111", "B": "0101 0100", "C": "0100 0110", "D": "0101 0101", "Answer": "B", "Explanation": "补码左移时，最高位移出，低位添0，所以01010101左移两位后的值为01010100。"}
{"ID": 3014, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "补码定点整数10010101右移一位后的值是什么？", "A": "1100 1010", "B": "0100 1010", "C": "1001 0101", "D": "1100 1010", "Answer": "D", "Explanation": "补码右移时，最高位添1，低位符号位不变，所以10010101右移一位后的值为11001010。"}
{"ID": 3015, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个8位寄存器内的数值为11001010，进位标志寄存器C为0，若将此8位寄存器循环左移(不带进位位)1位，则该8位寄存器和标志寄存器内的数值分别为什么？", "A": "10010100 1", "B": "10010101 0", "C": "10010101 1", "D": "10010100 0", "Answer": "C", "Explanation": "循环左移不带进位位，最高位进入最低位，标志寄存器C位保持。"}
{"ID": 3016, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设机器数字长8位(含1位符号位)，若机器数 BAH 为原码，算术左移1位和算术右移1位分别得什么？", "A": "F4H, EDH", "B": "B4H, 6DH", "C": "F4H, 9DH", "D": "B5H, EDH", "Answer": "C", "Explanation": "原码左移右移均补0，符号位不变。算术左移1位得F4H，算术右移1位得9DH。"}
{"ID": 3017, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若机器数BAH为补码，设机器数字长8位(含1位符号位)，算术左移1位和算术右移1位分别得()？", "A": "F4H, EDH", "B": "B4H, 6DH", "C": "F4H, 9DH", "D": "B5H, EDH", "Answer": "A", "Explanation": "补码负数左移右移时，左移补0，右移补1。算术左移1位得F4H，算术右移1位得EDH。"}
{"ID": 3018, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "16位补码 0x8FA0 扩展为32位应该是 ( )。", "A": "0x0000 8FA0", "B": "0XFFFF 8FA0", "C": "0XFFFF FFA0", "D": "0x8000 8FA0", "Answer": "B", "Explanation": "16位扩展为32位，符号位不变，附加位是符号位的扩展。这个数是一个负数，需用1来补附加位。"}
{"ID": 3019, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在定点运算器中，无论是采用双符号位还是采用单符号位，必须有 ( )。", "A": "译码电路，它一般用“与非”门来实现", "B": "编码电路，它一般用“或非”门来实现", "C": "溢出判断电路，它一般用“异或”门来实现", "D": "移位电路，它一般用“与或非”门来实现", "Answer": "C", "Explanation": "三种溢出判别方法，均须有溢出判别电路，可用“异或”门来实现。"}
{"ID": 3020, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "原码乘法是 ( )。", "A": "先取操作数绝对值相乘，符号位单独处理", "B": "用原码表示操作数，然后直接相乘", "C": "被乘数用原码表示，乘数去绝对值，然后相乘", "D": "乘数用原码表示，被乘数去绝对值，然后相乘", "Answer": "A", "Explanation": "原码一位乘法中，符号位与数值位是分开进行运算的。运算结果的数值部分是乘数与被乘数数值位的乘积，符号是乘数与被乘数符号位的异或。"}
{"ID": 3021, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "x、y为定点整数，其格式为 1位符号位、n位数值位，若采用补码一位乘法实现乘法运算，则最多需要 ( )次加法运算", "A": "n-1", "B": "n", "C": "n+1", "D": "n+2", "Answer": "C", "Explanation": "补码一位乘法中，最多需要 n 次移位，n+1 次加法运算。"}
{"ID": 3022, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在原码一位乘法中，( )。", "A": "符号位参加运算", "B": "符号位不参加运算", "C": "符号位参加运算，并根据运算结果改变结果中的符号位", "D": "符号位不参加运算，并根据运算结果确定结果中的符号", "Answer": "B", "Explanation": "在原码一位乘法中，符号位不参加运算，符号位单独处理，同号为正，异号为负。"}
{"ID": 3023, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "原码乘法时，符号位单独处理乘积的方式是 ( )", "A": "两个操作数符号相“与”", "B": "两个操作数符号相“或”", "C": "两个操作数符号相“异或”", "D": "两个操作数中绝对值较大数的符号", "Answer": "C", "Explanation": "原码乘法时，符号位单独处理，乘积的符号是两个操作数符号相“异或”，同号为正，异号为负。"}
{"ID": 3024, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在原码不恢复余数法 (又称原码加减交替法)的算法中，( )", "A": "每步操作后，若不够减，则需恢复余数", "B": "若为负商，则恢复余数", "C": "整个算法过程中，从不恢复余数", "D": "仅当最后一步不够减时，才恢复一次余数", "Answer": "D", "Explanation": "原码不恢复余数法即加减交替法，只在最终余数为负时，才需要恢复余数。"}
{"ID": 3025, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于补码除法的说法中，正确的是 ( )", "A": "补码不恢复除法中，够减商 0，不够减商 1", "B": "补码不恢复余数除法中，异号相除时，够减商 0，不够减商 1", "C": "补码不恢复除法中，够减商 1，不够减商 0", "D": "以上都不对", "Answer": "B", "Explanation": "补码除法(不恢复余数法)，异号相除是看够不够减，然后上商，够减商0，不够减商1."}
{"ID": 3026, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于各种移位的说法正确的是 ( )\\nI.假设机器数采用反码表示，当机器数为负时，左移时最高数位丢结果出错;右移时最低数位丢 0，影响精度\\nII.在算术移位的情况下，补码左移的前提条件是其原最高有效位与原符号位要相同\\nIII，在算术移位的情况下，双符号位的移位操作只有低符号位需要参加移位操作", "A": "I、III", "B": "仅 II", "C": "只有 III", "D": "I、II、III", "Answer": "D", "Explanation": "I，负数的反码除符号位外其他位与负数的原码相反，不难推出 I 正确。如 S 位反码 10010 表示 -13，右移 1 位变成 11001 为 -6，影响精度:左移 1 位变成 10101 为 -10，数据丢失。1 补码表示时，正数的符号位为 0，左移最高位为 0 时，数据不会丢失；负数的符号位为 1，左移最高位为 1 时，数据不会丢失。因此左移移走的最高位要与符号位相同。II。双符号位的最高符号位代表真正的符号，而低位符号位用于参与移位操作以判断是否发生溢出，如 01 表示结果正溢出，10 表示结果负溢出。I、II、II 都正确。"}
{"ID": 3027, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在按字节编址的计算机中，若数据在存储器中以小端方案存放。假定 int 型变量 i 的地址为 08000000H，i 的机器数为 01234567H，地址 08000000H 单元的内容是()。", "A": "01H", "B": "23H", "C": "45H", "D": "67H", "Answer": "D", "Explanation": "小端方案是将最低有效字节存储在最小位置。在数 01234567H 中，最低有效字节为 67H"}
{"ID": 3028, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某计算机字长为 8 位，CPU 中有一个 8 位加法器。已知无符号数 x = 69，y = 38，如果在该加法器中计算 x - y，则加法器的两个输入端信息和输入的低位进位信息分别为()。", "A": "0100 0101、0010 0110、0", "B": "0100 0101、1101 1001、1", "C": "0100 0101、1101 1010、0", "D": "0100 0101、1101 1010、1", "Answer": "B", "Explanation": "不管是补码减法，还是无符号数减法，都是用被减数加上减数的负数的补码来实现的。根据求补公式，减数的负数的补码为[-y]补 = Y + 1，因此，在加法器的 Y' 输入端用一个反向器实现，并用控制端 Sub 控制多路选择器是否将 y 的各位取反后，输入 Y'' 端，同时将 Sub 作为低位进位送到加法器。当 Sub 为 1 时，做减法，当 Sub 为 0 时，做加法。69 的二进制数为 0100 0101；38 的做减法时，低位进位为 Sub，即为 1 二进制数为 0010 0110，各位取反得 1101 1001。"}
{"ID": 3029, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某计算机中有一个 8 位加法器，带符号整数 X 和 y 的机器数用补码表示，[x]补 = F5H，[y]补 = 7EH，如果在该加法器中计算 X - y，则加法器的低位进位输入信息和运算后的溢出标志 OF 分别是()。", "A": "1、1", "B": "1、0", "C": "0、1", "D": "0、0", "Answer": "C", "Explanation": "对于补码减法运算，控制信号 Sub 为 1，故低位进位输入为 Sub = 1。[x]补 = 11110101，[y]补 = 01111110，[-y]补 = 10000001 + 1，[x]补 - [-y]补 = [x]补 + [-y]补 = 11110101 + 10000010 = 01110111，进位丢掉，参与运算的两个数均为 1，结果的符号位为 0，故溢出标志 OF 为 1。"}
{"ID": 3030, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某8位计算机中，x 和 y 是两个带符号整数，用补码表示，[x]补 = 44H，[y]补 = DCH，则 x/2+2y 的机器数及相应的溢出标志 OF 分别是( )。", "A": "CAH、0", "B": "CAH、1", "C": "DAH、0", "D": "DAH、1", "Answer": "C", "Explanation": "[x/2+2y]补 = [x]补 >> 1 + [y]补 << 1 = 0100 0100 >> 1 + 1101 1100 << 1 = 0010 0010 1011 1000 = 1101 1010 = DAH，从最后一步加法操作来看，是一个正数和一个负数相加，必定不会溢出。"}
{"ID": 3031, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在 C 语言的不同类型的数据混合运算中，要先转换成同一类型后进行运算。设一表达式中包含有 int、long、char 和 double 类型的变量与数据，则表达式最后的运算结果是()，这4种类型数据的转换规律是( )。", "A": "long，int→char→double→long", "B": "long，char→int→long→double", "C": "double，char→int→long→double", "D": "double，char→int→double→long", "Answer": "C", "Explanation": "不同类型的数据混合运算时，遵循的原则是“类型提升”，即较低类型转换为较高类型，最终结果为double类型。4种类型数据的转换规律为 char int long double。"}
{"ID": 3032, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "长度相同但格式不同的两种浮点数，假设前者阶码长、尾数短，后者阶码短、尾数长，其他规定均相同，则它们可表示的数的范围和精度为 ( )。", "A": "两者可表示的数的范围和精度相同", "B": "前者可表示的数的范围大但精度低", "C": "后者可表示的数的范围大且精度高", "D": "前者可表示的数的范围大且精度高", "Answer": "B", "Explanation": "在浮点数总位数不变的情况下，阶码位数越多，尾数位数越少；即表示的数的范围越大精度越差（数变稀疏）。"}
{"ID": 3033, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列说法中正确的是( )。", "A": "只有定点数运算才可能溢出，浮点数运算不会产生溢出", "B": "采用变形补码进行加减法运算可以避免溢出", "C": "定点数和浮点数运算都可能产生溢出", "D": "两个正数相加时一定产生溢出", "Answer": "C", "Explanation": "变形补码，即用两个二进制位来表示数字的符号位，其余与补码相同，所以并不能避免溢出，A错误。定点数和浮点数运算都可能产生溢出，但是溢出判断有区别，因此B错误、C正确。在定点运算中，当运算结果超出数的表示范围时，就发生溢出；在浮点运算中，运算结果超出尾数表示范围却不一定溢出，只有规格化后阶码超出所能表示的范围时，才发生溢出，D错误。"}
{"ID": 3034, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在规格化浮点运算中，若某浮点数为 2^{5}x1.10101 ,其中尾数为补码表示则该数()", "A": "不需规格化", "B": "需右移规格化", "C": "需将尾数左移一位规格化", "D": "需将尾数左移两位规格化", "Answer": "C", "Explanation": "考查浮点数的规格化，当尾数为补码表示，且为1.0××“形式时为规格化数，因此该尾数需左移一位，阶码同时应减1，才为规格化数。"}
{"ID": 3035, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某浮点机，采用规格化浮点数表示，阶码用移码表示(最高位代表符号位)，尾数用原码表示。下列 ( )的表示不是规格化浮点数。", "A": "11111111,1.1000···00", "B": "0011111,1.0111···01", "C": "1000001.0.1111···01", "D": "0111111,0.1000···10", "Answer": "B", "Explanation": "原码表示时，正数的规格化形式为0.1×····x，负数的规格化形式为1.1×····x，因此B错误"}
{"ID": 3036, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于对阶操作说法正确的是 ()", "A": "在浮点加减运算的对阶操作中，若阶码减小，则尾数左移", "B": "以上都不对", "C": "在浮点加减运算的对阶操作中，若阶码增大，则尾数右移", "D": "在浮点加减运算的对阶操作中，若阶码增大，则尾数右移；若阶码减小，则尾数左移", "Answer": "C", "Explanation": "对阶操作，是将较小的阶码调整到与较大的阶码一致，因此不存在阶码减小、尾数左移的情况，因而A、B项错"}
{"ID": 3037, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在IEEE 754标准规定的 64位浮点数格式中，符号位为1位，阶码为11位，尾数为52位，则它所能表示的最小规格化负数为 ( ).", "A": "-(2 - 2^{52})x2^{-1023}", "B": "-(2- 2-^{-52})x2{+1023}", "C": "-1x2^{-1024}", "D": "-(1- 2^{-52})x2^{+2047}", "Answer": "B", "Explanation": "长浮点数，其阶码 11 位，尾数 52 位，采取隐藏位策略，因此其最小规格化负数为阶码取最大值 2+1023(1023 =21-1- 1)尾数取最大2-2-2(注其有隐加 1，符号位为负"}
{"ID": 3038, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "如果某单精度浮点数、某原码、某补码、某移码的 32 位机器数均为0xF0000000。这些数从大到小的顺序是 ( )。", "A": "浮点，原码，补码，移码", "B": "浮点，移码，补码，原码", "C": "移码，原码，补码，浮点", "D": "移码，补码，原码，浮点", "Answer": "D", "Explanation": "这个机器数的最高位为1，对于原码、补码、单精度浮点数而言为负数，对于移码而言为正数，所以移码最大，而补码为-2^28，原码为-(2^30+2^29+2^28)，单精度点数为-1.0x2^97，大小依次递减。"}
{"ID": 3039, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在浮点运算中，下溢指的是 ( )。", "A": "运算结果的绝对值小于机器所能表示的最小绝对值", "B": "运算的结果小于机器所能表示的最小负数", "C": "运算的结果小于机器所能表示的最小正数", "D": "运算结果的最低有效位产生的错误", "Answer": "A", "Explanation": "运算结果在 0至规格化最小正数之间时称为正下溢，运算结果在 0至规格化最大负数之间时称为负下溢，正下溢和负下溢统称下溢。"}
{"ID": 3040, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设浮点数共12位。其中阶码舍1位阶符共4位，以2为底，补码表示;尾数含1位数符共8位，补码表示，规格化。则该浮点数所能表示的最大正数是 ( ).", "A": "2^7", "B": "2^8", "C": "2^8- 1", "D": "2^7-1", "Answer": "D", "Explanation": "为使浮点数取正数最大，可使尾数取正数最大，阶码取正数最大。尾数为 8 位补码(含符号位)，正值最大为0.1111111，即1- 2^{-7}，阶码为4位补码(含符号位)，正值最大为 0111，即7，则最大正数为(1-2^{-7})x2^7 = 2^7-1。"}
{"ID": 3041, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "计算机在进行浮点数的加减运算之前先进行对阶操作，若x的阶码大于 y 的阶码，则应将( )。", "A": "x的阶码缩小至与y的阶码相同，且使x的尾数部分进行算术左移", "B": "x的阶码缩小至与y的阶码相同，且使x的尾数部分进行算术右移", "C": "y的阶码扩大至与x的阶码相同，且使y的尾数部分进行算术左移", "D": "y的阶码扩大至与X的阶码相同，且使y的尾数部分进行算术右移", "Answer": "D", "Explanation": "浮点数加减运算时，首先要进行对阶，根据对阶的规则，阶码和尾数将进行相应的操作。对阶的规则是，小阶向大阶看齐。即阶码小的数的尾数算术右移，每右移一位，阶码加 1直到两数的阶码相等为止"}
{"ID": 3042, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若浮点数的尾数用补码表示，则下列( )中的尾数是规格化数形式", "A": "1.11", "B": "0.0111", "C": "0.0101", "D": "1.00010", "Answer": "D", "Explanation": "补码的规格化表示是小数点后一位与符号位不同，因此选择 D"}
{"ID": 3043, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于舍入的说法，正确的是 ( )。I.不仅仅只有浮点数需要舍入，定点数在运算时也可能要舍入 II.在浮点数舍入中，只有左规格化时可能要舍入 III.在浮点数舍入中，只有右规格化时可能要舍入 IV.在浮点数舍入中，左、右规格化均可能要舍入 V.舍入不一定产生误差", "A": "I、II、V", "B": "II、III", "C": "I、III、IV", "D": "V", "Answer": "D", "Explanation": "舍入是浮点数的概念，定点数没有舍入的概念，因此I错误。浮点数舍入的情况有两种:对阶、右规格化，因此II、III、IV 错。舍入不一定产生误差，如向下舍入 11.00到11.0 时是有误差的，因此V正确。"}
{"ID": 3044, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "存储器的存储容量如何计算？()", "A": "存储容量 = 存储字数 × 字长", "B": "存储容量 = 存储周期 × 数据宽度", "C": "存储容量 = 存储字数 / 存储周期", "D": "存储容量 = 存取时间 × 存储周期", "Answer": "A"}
{"ID": 3045, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "动态随机存储器DRAM的特点不包括：()", "A": "利用存储元电路中栅极电容上的电荷来存储信息", "B": "需要定期刷新", "C": "用双稳态触发器来记忆信息", "D": "一般用来组成大容量主存系统", "Answer": "C"}
{"ID": 3046, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "可擦除可编程只读存储器EPROM的特点是什么？()", "A": "写入后内容无法改变", "B": "写入后可以进行多次内容改写", "C": "仅用于临时存储，电源断开后内容消失", "D": "无法进行电子擦除和重写", "Answer": "B"}
{"ID": 3047, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "主存和CPU的连接方式不包括哪一项？()", "A": "数据总线", "B": "地址总线", "C": "控制总线", "D": "电源线", "Answer": "D"}
{"ID": 3048, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "双端口RAM允许两个独立的控制器同时异步访问存储单元，但会出现问题的情况是：()", "A": "两个端口同时对同一地址单元写入数据", "B": "两个端口不同时对同一地址单元存取数据", "C": "两个端口同时对同一地址单元读出数据", "D": "两个端口对不同地址单元进行读写操作", "Answer": "A"}
{"ID": 3049, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "多体并行存储器中，低位交叉编址的特点是什么？()", "A": "高位地址表示体号，低位地址为体内地址", "B": "低位地址为体号，高位地址为体内地址", "C": "所有体号和体内地址都是顺序排列的", "D": "每个模块只能顺序存取", "Answer": "B"}
{"ID": 3050, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下哪一种不是高速缓冲存储器Cache的映射方式？()", "A": "直接映射", "B": "全相联映射", "C": "组相联映射", "D": "顺序映射", "Answer": "D"}
{"ID": 3051, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在高速缓冲存储器Cache的写策略中，写不命中的情况下，“非写分配法”指的是什么？()", "A": "只写入主存，不进行块加载", "B": "加载主存中的块到Cache中，然后更新这个Cache块", "C": "必须把数据同时写入Cache和主存", "D": "只修改Cache的内容，而不立即写入主存", "Answer": "A"}
{"ID": 3052, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "Cache命中率与平均访问时间之间的关系是什么？()", "A": "Cache命中率越高，平均访问时间越长", "B": "Cache命中率与平均访问时间无关", "C": "Cache命中率越低，平均访问时间越短", "D": "Cache命中率越高，平均访问时间越短", "Answer": "D"}
{"ID": 3053, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "静态随机存储器SRAM的主要用途是什么？()", "A": "组成大容量主存系统", "B": "作为高速缓存存储器", "C": "用于外部存储设备", "D": "作为只读存储器", "Answer": "B"}
{"ID": 3054, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "固态硬盘SSD的主要组成部分是什么？()", "A": "磁盘和磁头", "B": "控制单元和存储单元（Flash芯片）", "C": "光盘和激光头", "D": "磁带和读写头", "Answer": "B"}
{"ID": 3055, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "主存带宽Bm的定义是什么？()", "A": "每秒从主存进出信息的最大数量", "B": "存储周期内存储器的数据传输率", "C": "存取周期内存储器的数据传输率", "D": "主存和CPU之间的通信速率", "Answer": "A"}
{"ID": 3056, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "存储器的存取周期Tm是指什么？()", "A": "连续两次存储操作之间所需的最小时间间隔", "B": "从启动一次存储操作到完成所经历的时间", "C": "一次完整的读写操作所需的全部时间", "D": "数据从存储器传输到CPU所需的时间", "Answer": "A"}
{"ID": 3057, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下哪一种不是存储器的分类方式？()", "A": "按存取方式分类", "B": "按存储介质分类", "C": "按操作系统兼容性分类", "D": "按在计算机中的作用（层次）分类", "Answer": "C"}
{"ID": 3058, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "译码驱动在半导体随机存储器中的作用是什么？()", "A": "决定哪个存储芯片被选中", "B": "确定单向输入的地址线", "C": "控制数据的读写操作", "D": "将输入地址转换为存储器地址", "Answer": "D"}
{"ID": 3059, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在主存储器与CPU的连接中，控制总线的功能是什么？()", "A": "传输数据", "B": "定义可寻址的最大内存空间", "C": "指出总线周期的类型和本次输入/输出操作完成的时刻", "D": "提供电源供应", "Answer": "C"}
{"ID": 3060, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "页式虚拟存储器中，虚拟地址的组成包括哪两部分？()", "A": "虚页号和页内地址", "B": "段号和段内地址", "C": "体号和体内地址", "D": "块号和块内地址", "Answer": "A"}
{"ID": 3061, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在存储系统中，辅助存储器的主要作用是什么？()", "A": "提高数据处理速度", "B": "扩大主存容量", "C": "存储临时数据", "D": "解决主存与CPU速度不匹配的问题", "Answer": "B"}
{"ID": 3062, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "闪速存储器Flash Memory的特点是什么？()", "A": "需要定期刷新", "B": "在不加电时不能保存信息", "C": "可长期保存信息且能进行快速擦除重写", "D": "一次写入后内容无法改变", "Answer": "C"}
{"ID": 3063, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "非易失性存储器的一个例子是什么？()", "A": "动态RAM", "B": "静态RAM", "C": "光存储器", "D": "磁芯存储器", "Answer": "C"}
{"ID": 3064, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "磁表面存储器的主要类型是什么？()", "A": "静态RAM和动态RAM", "B": "磁盘和磁带", "C": "光盘和固态硬盘", "D": "只读存储器和随机存储器", "Answer": "B"}
{"ID": 3065, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在主存储器的容量扩展技术中，位扩展法的特点是什么？()", "A": "增加存储单元的数量", "B": "增加每个存储单元的存储位数", "C": "同时增加存储单元数量和存储位数", "D": "降低存储单元的访问速度", "Answer": "B"}
{"ID": 3066, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "多体并行存储器中，高位交叉编址的特点是什么？()", "A": "低位地址为体号，高位地址为体内地址", "B": "高位地址表示体号，低位地址为体内地址", "C": "所有地址按顺序排列", "D": "各体存储器地址完全相同", "Answer": "B"}
{"ID": 3067, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "虚拟存储器系统中，TLB（快表）的主要作用是什么？()", "A": "存储长期数据", "B": "提高地址转换的速度", "C": "扩大物理存储容量", "D": "缓存虚拟地址到物理地址的映射", "Answer": "B"}
{"ID": 3068, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "段式虚拟存储器的主要缺点是什么？()", "A": "页面长度固定，造成内存浪费", "B": "段的长度可变，分配空间不便", "C": "地址变换过程中需要查表", "D": "不便于编译、管理、修改和保护", "Answer": "B"}
{"ID": 3069, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "磁盘属于()类型的存储器", "A": "随机存取存储器(RAM)", "B": "只读存储器(ROM)", "C": "顺序存取存储器 (SAM)", "D": "直接存取存储器(DAM)", "Answer": "D"}
{"ID": 3070, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "相联存储器是按()进行寻址的存储器", "A": "地址指定方式", "B": "堆栈存储方式", "C": "内容指定方式和堆栈存储方式相结合", "D": "内容指定方式和地址指定方式相结合", "Answer": "D"}
{"ID": 3071, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在下列几种存储器中，CPU 不能直接访问的是 ( )", "A": "硬盘", "B": "内存", "C": "Cache", "D": "寄存器", "Answer": "A"}
{"ID": 3072, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "设机器字长为64 位，存储容量为 128MB，若按字编址，它可寻址的单元个数是 ( ).", "A": "16MB", "B": "16M", "C": "32M", "D": "32MB", "Answer": "B"}
{"ID": 3073, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机的存储器采用分级方式是为了 ( )。", "A": "方便编程", "B": "解决容量、速度、价格三者之间的矛盾", "C": "保存大量数据方便", "D": "操作方便", "Answer": "B"}
{"ID": 3074, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "某存储器容量为32Kx16位，则( )。", "A": "地址线为 16根，数据线为 32根", "B": "地址线为 32根，数据线为 16根", "C": "地址线为 15根，数据线为 16 根", "D": "地址线为 15根，数据线为 32根", "Answer": "C"}
{"ID": 3075, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "若RAM中每个存储单元为 16位，则下面所述正确的是 ( )", "A": "地址线是 16位", "B": "数据线是16位", "C": "指令长度是16位", "D": "以上说法都不正确", "Answer": "B"}
{"ID": 3076, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "DRAM 的刷新是以 ( )为单位的。", "A": "存储单元", "B": "行", "C": "列", "D": "存储字", "Answer": "B"}
{"ID": 3077, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "动态 RAM采用下列哪种刷新方式时，不存在死时间 ( )。", "A": "集中刷新", "B": "分散刷新", "C": "异步刷新", "D": "都不对", "Answer": "B"}
{"ID": 3078, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "某一 DRAM 芯片，采用地址复用技术，其容量为 1024x8 位，除电源和接地端外，该芯片的引脚数最少是 (读写控制线为两根)()", "A": 16, "B": 17, "C": 19, "D": 21, "Answer": "B"}
{"ID": 3079, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列几种存储器中，( )是易失性存储器", "A": "Cache", "B": "EPROM", "C": "Flash存储器", "D": "CD-ROM", "Answer": "A"}
{"ID": 3080, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "某计算机字长为16位，存储器容量为256KB，CPU按字寻址，其寻址范围是 ( )。", "A": "0~2^19-1", "B": "0~2^20-1", "C": "0~2^18-1", "D": "0~2^17-1", "Answer": "D"}
{"ID": 3081, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "16片2Kx4位的存储器可以设计为 ( )存储容量的16位存储器", "A": "16K", "B": "32K", "C": "8K", "D": "2K", "Answer": "C"}
{"ID": 3082, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "若内存地址区间为4000H~43FFH，每个存储单元可存储16位二进制数，该内存区域用4片存储器芯片构成，构成该内存所用的存储器芯片的容量是 ( )。", "A": "512x16bit", "B": "256x8bit", "C": "256x16bit", "D": "1024x8bit", "Answer": "C"}
{"ID": 3083, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "访问Cache系统失效时，通常不仅主存向CPU传送信息，同时还需要将信息写入Cache，在此过程中传送和写入信息的数据宽度各为( )。", "A": "块、页", "B": "字、字", "C": "字、块", "D": "块、块", "Answer": "C"}
{"ID": 3084, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "虚拟存储管理系统的基础是程序访问的局部性原理，此理论的基本含义是()", "A": "在程序的执行过程中，程序对主存的访问是不均匀的", "B": "空间局部性", "C": "时间局部性", "D": "代码的顺序执行", "Answer": "A"}
{"ID": 3085, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "虚拟存储器的常用管理方式有段式、页式、段页式，对于它们在与主存交换信息时的单位，以下表述正确的是()", "A": "段式采用“页”", "B": "页式采用“块”", "C": "段页式采用“段”和“页”", "D": "页式和段页式均仅采用“页”", "Answer": "D"}
{"ID": 3086, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列关于虚存的叙述中，正确的是( )。", "A": "对应用程序员透明，对系统程序员不透明", "B": "对应用程序员不透明，对系统程序员透明", "C": "对应用程序员、系统程序员都不透明", "D": "对应用程序员、系统程序员都透明", "Answer": "A"}
{"ID": 3087, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设机器字长为32 位，一个容量为 16MB 的存储器，CPU 按半字寻址，其可寻址的单元数是( ).", "A": "2^24", "B": "2^23", "C": "2^22", "D": "2^21", "Answer": "B", "Explanation": "16MB = 2^24B，由于字长为32位，现按半字(2B)寻址可寻址单元数为2^24B/2B=2^23"}
{"ID": 3088, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若某存储器存储周期为 250ns，每次读出 16位，该存储器的数据传输率是( )", "A": "4x10^6B/s", "B": "4MB/s", "C": "8x10^6B/s", "D": "8x2^20B/s", "Answer": "C", "Explanation": "数据传输率是 2B / (250 x 10^{-9}s)，即 8x10^6B/s。"}
{"ID": 3089, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在多级存储体系中，“Cache-主存”结构的作用是解决 ( )的问题", "A": "主存容量不足", "B": "主存与辅存速度不匹配", "C": "辅存与 CPU 速度不匹配", "D": "主存与 CPU 速度不匹配", "Answer": "D", "Explanation": "Cache 中的内容只是主存内容的部分副本，因而“Cache-主存”结构并未增加主存容量，目的是解决主存与 CPU 速度不匹配的问题。"}
{"ID": 3090, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在 Cache 和主存构成的两级存储体系中，主存与 Cache 同时访问，Cache 的存取时间是100ns，主存的存取时间是 1000ns，设 Cache 和主存同时访问，若希望有效 (平均)存取时间不超过 Cache 存取时间的 115%，则 Cache 的命中率至少应为 ( )", "A": "0.9", "B": "0.98", "C": "0.95", "D": "0.99", "Answer": "D", "Explanation": "命中率至少为 99%。"}
{"ID": 3091, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面是有关DRAM和SRAM存储器芯片的叙述: I. DRAM 芯片的集成度比 SRAM 芯片的高 II. DRAM芯片的成本比 SRAM芯片的高 III. DRAM 芯片的速度比 SRAM 芯片的快 IV. DRAM 芯片工作时需要刷新，SRAM 芯片工作时不需要刷新 通常情况下，错误的是 ( )。", "A": "I和II", "B": "II和III", "C": "III和IV", "D": "I和IV", "Answer": "B", "Explanation": "DRAM的集成度高于SRAM，SRAM的速度高于DRAM，因此II和III句错误。"}
{"ID": 3092, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知单个存储体的存储周期为 110ns，总线传输周期为 10ns，采用低位交叉编址的多模块存储器时，存储体数应 ( )", "A": "小于11", "B": "等于11", "C": "大于11", "D": "大于等于11", "Answer": "D", "Explanation": "为保证第二次启动某个体时，其上次存取操作已完成，存储体的数量应大于等于11（110ns/10ns = 11）。"}
{"ID": 3093, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列说法中，正确的是 (I.高位多体交叉存储器能很好地满足程序的局部性原理II.高位四体交叉存储器可能在一个存储周期内连续访问 4 个模块III.双端口存储器可以同时访问同一区间、同一单元IV.双端口存储器当两个端口的地址码相同时，必然会发生冲突", "A": "I、III", "B": "II、III", "C": "II、III和IV", "D": "III、IV", "Answer": "B", "Explanation": "高位交叉存储器在单个存储器中的字是连续存放的，不满足程序的局部性原理:而低位交又存储器是交叉存放，很好地满足了程序的局部性原理，I 错误。高位四体交叉存储器虽然不能满足程序的连续读取，但仍可能一次连续读出彼此地址相差一个存储体容量的 4 个字，只是这么读的概率较小，II正确。双端口存储器具有两套独立读/写口，具有各自的地址寄存器和译码电路，所以可以同时访问同一区间、同一单元，III 正确。当两个端口同时对相同的单元进行读操作时，则不会发生冲突，IV 错误。"}
{"ID": 3094, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "用存储容量为 16Kx1 位的存储器芯片来组成一个 64Kx8 位的存储器，则在字方向和位方向分别扩展了 ( )倍。", "A": "4,2", "B": "8,4", "C": "2,4", "D": "4,8", "Answer": "D", "Explanation": "字方向扩展了4倍，位方向扩展了8倍。"}
{"ID": 3095, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若片选地址为111时，选定某一32Kx16位的存储芯片工作，则该芯片在存储器中的首地址和末地址分别为 ( )。", "A": "00000H、01000H", "B": "38000H,3FFFFH", "C": "3800H,3FFFH", "D": "0000H,0100H", "Answer": "B", "Explanation": "32Kx16位的存储芯片有地址线15根(片内地址)，片选地址为3位，地址总位数为18位。根据给定的片选地址111，首地址为111000000000000000=38000H，末地址为111111111111111111=3FFFFH。"}
{"ID": 3096, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个磁盘的转速为 7200 转/分，每个磁道有 160 个扇区，每个扇区有 512 字节，则在理想情况下，其数据传输率为 ( )。", "A": "7200x160KB/s", "B": "7200KB/s", "C": "9600KB/s", "D": "19200KB/s", "Answer": "C", "Explanation": "磁盘的转速为7200转/分= 120转/秒，转一圈经过160个扇区，每个扇区为512B，所以数据传输率为 120x160×512/1024=9600KB/s."}
{"ID": 3097, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于磁盘的说法中，错误的是 ( )。", "A": "本质上，U盘(闪存)是一种只读存储器", "B": "RAID 技术可以提高磁盘的磁记录密度和磁盘利用率", "C": "未格式化的硬盘容量要大于格式化后的实际容量", "D": "计算磁盘的存取时间时，“寻道时间”和“旋转等待时间”常取其平均值", "Answer": "B", "Explanation": "闪存是在可PROM的基础上发展起来的，本质上是只读存储器。RAID将多个物理盘组成像单个逻辑盘，不会影响磁记录密度，也不可能提高磁盘利用率。"}
{"ID": 3098, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某虚拟存储器系统采用页式内存管理，使用LRU页面替换算法，者虑下面的页面访问地址流(每次访问在一个时间单位中完成): 18178272183821317137假定内存容量为4个页面，开始时是空的，则页面失效率是( )", "A": "0.3", "B": "0.05", "C": "0.015", "D": "0.15", "Answer": "A", "Explanation": "页面失效率 = 6/20 = 30%"}
{"ID": 3099, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某32位计算机的Cache容量为16KB，Cache行的大小为16B，若主存与Cache地址映像采用直接映像方式，则主存地址为0x1234E8F8的单元装入Cache的地址是( )", "A": "00010001001101", "B": "01000100011010", "C": "10100011111000", "D": "11010011101000", "Answer": "C", "Explanation": "直接映像方式将低14位作为Cache地址。"}
{"ID": 3100, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在Cache中，常用的替换策略有随机法(RAND)、先进先出法(FIFO)、近期最少使用法(LRU)，其中与局部性原理有关的是( )", "A": "随机法(RAND)", "B": "先进先出法(FIFO)", "C": "近期最少使用法(LRU)", "D": "都不是", "Answer": "C", "Explanation": "LRU算法根据程序访问局部性原理选择近期使用得最少的存储块。"}
{"ID": 3101, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假主存地址位数为32位，按字节编址，主存和Cache之间采用全相联映射方式，主存块大小为1个字，每字32位，采用回写(write back)方式和随机替换策略，则能存放32K字数据的Cache的总容量至少应有 ( )位", "A": "1536K", "B": "1568K", "C": "2016K", "D": "2048K", "Answer": "D", "Explanation": "根据各项参数计算得到的总容量为2048K bit。"}
{"ID": 3102, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设主存按字节编址，Cache共有64行，采用四路组相联映射方式，主存块大小为32字节，所有编号都从0开始。则第2593号存储单元所在主存块的Cache组号是( )", "A": "1", "B": "17", "C": "34", "D": "81", "Answer": "A", "Explanation": "第2593号存储单元所在主存块的Cache组号为1。"}
{"ID": 3103, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定CPU通过存储器总线读取数据的过程为: 发送地址和读命今需1个时钟周期，存14.储器准备一个数据需8个时钟周期，总线上每传送1个数据需1个时钟周期。若主存和Cache之间交换的主存块大小为64B，存取宽度和总线宽度都为8B，则Cache的一次缺失损失至少为 ()个时钟周期", "A": "64", "B": "72", "C": "80", "D": "160", "Answer": "C", "Explanation": "一次缺失损失需要从主存取一个主存块，共需要80个时钟周期。"}
{"ID": 3104, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定采用多模块交叉存储器组织方式，存储器芯片和总线支持突发传送，CPU通过存储器总线读取数据的过程为: 发送首地址和读命令需1个时钟周期，存储器准备第一个数据需8个时钟周期，随后每个时钟周期总线上传送1个数据，可连续传送8个数据(即突发长度为8)。若主存和Cache之间交换的主存块大小为64B，存取宽度和总线宽度都为8B，则Cache的一次缺失损失至少为 ( )个时钟周期。", "A": "17", "B": "20", "C": "33", "D": "80", "Answer": "A", "Explanation": "一次缺失损失需要从主存读出一个主存块(64B)，每个突发传送总线事务可读取64B，因此只需要一个突发传送总线事务，共需要17个时钟周期。"}
{"ID": 3105, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在虚拟存储器中，当程序正在执行时，由 ( )完成地址映射", "A": "程序员", "B": "编译器", "C": "装入程序", "D": "操作系统", "Answer": "D", "Explanation": "在虚拟存储器中，地址映射由操作系统来完成。"}
{"ID": 3106, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "虚拟存储器中的页表有快表和慢表之分，下面关于页表的叙述中正确的是 ( )。", "A": "快表与慢表都存储在主存中，但快表比慢表容量小", "B": "快表采用了优化的搜索算法，因此查找速度快", "C": "快表比慢表的命中率高，因此快表可以得到更多的搜索结果", "D": "快表采用相联存储器件组成，按照查找内容访问，因此比慢表查找速度快", "Answer": "D", "Explanation": "快表采用相联存储器件组成，按照查找内容访问，因此比慢表查找速度快。"}
{"ID": 3107, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "零地址指令的特征是什么？()", "A": "需要两个操作数", "B": "不需要操作数", "C": "仅需要一个操作数", "D": "操作数数量可变", "Answer": "B"}
{"ID": 3108, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "一地址指令的操作中通常发生什么？()", "A": "结果存储在源地址", "B": "操作数从ACC中获取", "C": "结果存储在目的地址", "D": "操作数来自指令本身", "Answer": "A"}
{"ID": 3109, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "立即寻址的优点是什么？()", "A": "扩大寻址范围", "B": "支持向量/矩阵运算", "C": "不需要访问主存", "D": "简化指令格式", "Answer": "C"}
{"ID": 3110, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "间接寻址的主要优点是什么？()", "A": "执行速度快", "B": "缩短指令字长", "C": "可扩大寻址范围", "D": "操作数不访问主存", "Answer": "C"}
{"ID": 3111, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "寄存器间接寻址与一般间接寻址相比的主要优点是什么？()", "A": "执行速度更快", "B": "可以扩大寻址范围", "C": "指令字长更短", "D": "不需要访问主存", "Answer": "A"}
{"ID": 3112, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在基址寻址中，有效地址是如何计算的？()", "A": "EA = (PC) + A", "B": "EA = (BR) + A", "C": "EA = (IX) + A", "D": "EA = (Ri)", "Answer": "B"}
{"ID": 3113, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "变址寻址的主要用途是什么？()", "A": "简化编程", "B": "处理数组问题", "C": "优化代码执行", "D": "减少寻址时间", "Answer": "B"}
{"ID": 3114, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "CISC和RISC体系结构的一个主要区别是什么？()", "A": "CISC具有更多的通用寄存器", "B": "RISC的指令字长不固定", "C": "CISC的指令数目通常大于200条", "D": "RISC使用微程序控制", "Answer": "C"}
{"ID": 3115, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在RISC体系结构中，各种指令的使用频度是怎样的？()", "A": "相差很大", "B": "都比较常用", "C": "仅限于基本操作", "D": "主要集中在特定类型的指令", "Answer": "B"}
{"ID": 3116, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "CISC体系结构的目标代码生成难度如何？()", "A": "容易生成高效的目标代码程序", "B": "通常需要手动优化", "C": "难以用优化编译生成高效的目标代码程序", "D": "依赖于高级编程技巧", "Answer": "C"}
{"ID": 3117, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在RISC体系结构中，指令流水线的实现情况是怎样的？()", "A": "可以通过一定方式实现", "B": "必须实现", "C": "通常不实现", "D": "仅在高性能系统中实现", "Answer": "B"}
{"ID": 3118, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "相对寻址的主要优点是什么？()", "A": "操作数的地址随着PC的变化而变化", "B": "操作数不需要访问主存", "C": "可以扩大寻址范围", "D": "操作数地址是固定的", "Answer": "A"}
{"ID": 3119, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "二地址指令中的目的操作数地址的用途是什么？()", "A": "仅用于读取数据", "B": "用于保存运算结果", "C": "用于存储指令地址", "D": "仅用于存储数据", "Answer": "B"}
{"ID": 3120, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "四地址指令中，第四个地址的作用通常是什么？()", "A": "存储运算结果", "B": "指向下一条执行指令的地址", "C": "指示数据来源", "D": "存储临时变量", "Answer": "B"}
{"ID": 3121, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "顺序寻址方式中，指令计数器（PC）的作用是什么？()", "A": "存储当前指令的地址", "B": "计算并保存下一条指令的地址", "C": "存储运算结果", "D": "指示程序执行顺序", "Answer": "B"}
{"ID": 3122, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "隐含寻址方式的主要优点是什么？()", "A": "加快执行速度", "B": "缩短指令字长", "C": "增加存储操作数的硬件", "D": "扩大寻址范围", "Answer": "B"}
{"ID": 3123, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "寄存器寻址方式的主要缺点是什么？()", "A": "寄存器数量有限", "B": "执行速度慢", "C": "指令字长增加", "D": "需要多次访问主存", "Answer": "A"}
{"ID": 3124, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "相对寻址方式中，有效地址的计算依赖于哪个寄存器的内容？()", "A": "累加器（ACC）", "B": "基址寄存器（BR）", "C": "变址寄存器（IX）", "D": "程序计数器（PC）", "Answer": "D"}
{"ID": 3125, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "变址寻址方式主要用于哪种计算场景？()", "A": "简单算术运算", "B": "逻辑运算", "C": "数组处理", "D": "字符串操作", "Answer": "C"}
{"ID": 3126, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "RISC体系结构的指令字长特点是什么？()", "A": "变长", "B": "固定", "C": "非常短", "D": "非常长", "Answer": "B"}
{"ID": 3127, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CISC体系结构中，指令执行时间的特点是什么？()", "A": "都在一个周期内完成", "B": "相差较大", "C": "都非常快", "D": "都非常慢", "Answer": "B"}
{"ID": 3128, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "RISC体系结构中，通用寄存器的数量与CISC相比如何？()", "A": "更少", "B": "相同", "C": "更多", "D": "没有通用寄存器", "Answer": "C"}
{"ID": 3129, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "RISC体系结构中的指令控制方式主要是什么？()", "A": "微程序控制", "B": "组合逻辑控制", "C": "硬件控制", "D": "软件控制", "Answer": "B"}
{"ID": 3130, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "堆栈寻址方式中，操作数的地址是如何确定的？()", "A": "通过程序计数器（PC）", "B": "通过累加器（ACC）", "C": "通过堆栈指针", "D": "通过基址寄存器（BR）", "Answer": "C"}
{"ID": 3131, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在堆栈计算机中，零地址指令的主要作用是什么？()", "A": "执行复杂的算术运算", "B": "直接操作堆栈顶部的元素", "C": "管理程序流程", "D": "存储大量数据", "Answer": "B"}
{"ID": 3132, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "CISC架构中指令的可访存性如何？()", "A": "严格限制", "B": "无限制", "C": "只有Load/Store指令", "D": "仅限于特定指令", "Answer": "B"}
{"ID": 3133, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "RISC体系结构中，指令流水线的必要性是由什么决定的？()", "A": "指令的复杂性", "B": "指令的数量", "C": "指令的执行时间", "D": "处理器的设计", "Answer": "D"}
{"ID": 3134, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在RISC体系结构中，可访存指令的类型是什么？()", "A": "所有类型", "B": "仅限算术指令", "C": "仅Load/Store指令", "D": "仅限控制指令", "Answer": "C"}
{"ID": 3135, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "寄存器间接寻址与直接寻址相比的主要优点是什么？()", "A": "寻址范围更广", "B": "执行速度更快", "C": "指令字长更短", "D": "需要更少的寄存器", "Answer": "A"}
{"ID": 3136, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在基址寻址中，如何计算有效地址（EA）？()", "A": "EA = (PC) + A", "B": "EA = (BR) + A", "C": "EA = A", "D": "EA = (IX) + A", "Answer": "B"}
{"ID": 3137, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "变址寻址方式的有效地址是如何计算的？()", "A": "EA = A", "B": "EA = (BR) + A", "C": "EA = (IX) + A", "D": "EA = (PC) + A", "Answer": "C"}
{"ID": 3138, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "相对寻址方式的主要缺点是什么？()", "A": "指令执行速度慢", "B": "寻址范围受限", "C": "操作数的地址是固定的", "D": "需要多次访问主存", "Answer": "B"}
{"ID": 3139, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "RISC体系结构的控制方式通常是什么？()", "A": "微程序控制", "B": "硬件控制", "C": "软件控制", "D": "组合逻辑控制", "Answer": "D"}
{"ID": 3140, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在RISC体系结构中，指令数目的特点是什么？()", "A": "较少", "B": "与CISC相同", "C": "非常多", "D": "不固定", "Answer": "A"}
{"ID": 3141, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "程序控制类指令的功能是 ( )", "A": "进行算术运算和逻辑运算", "B": "进行主存与 CPU之间的数据传送", "C": "进行 CPU和I/O设备之间的数据传送", "D": "改变程序执行的顺序", "Answer": "D"}
{"ID": 3142, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列指今中应用程序不准使用的指令是 ( )", "A": "循环指令", "B": "转换指令", "C": "特权指令", "D": "条件转移指令", "Answer": "C"}
{"ID": 3143, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "指令系统中采用不同寻址方式的目的是()", "A": "提供扩展操作码的可能并降低指令译码难度", "B": "可缩短指令字长，扩大寻址空间，提高编程的灵活性", "C": "实现程序控制", "D": "三者都正确", "Answer": "B"}
{"ID": 3144, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "直接寻址的无条件转移指令的功能是将指令中的地址码送入()", "A": "程序计数器(PC)", "B": "累加器(ACC)", "C": "指令寄存器 (IR)", "D": "地址寄存器(MAR)", "Answer": "A"}
{"ID": 3145, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "简化地址结构的基本方法是尽量采用()", "A": "寄存器寻址", "B": "隐地址", "C": "直接寻址", "D": "间接寻址", "Answer": "B"}
{"ID": 3146, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对按字寻址的机器，程序计数器和指令寄存器的位数各取决于 ( ).", "A": "机器字长，存储器的字数", "B": "存储器的字数，指令字长", "C": "指令字长，机器字长", "D": "地址总线宽度，存储器的字数", "Answer": "B"}
{"ID": 3147, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "运算型指令的寻址与转移型指令的寻址的不同点在于 ( )", "A": "前者取操作数，后者决定程序转移地址", "B": "后者取操作数，前者决定程序转移地址", "C": "前者是短指令，后者是长指令", "D": "前者是长指令，后者是短指令", "Answer": "A", "Explanation": "运算型指令寻址的是操作数，而转移型指令寻址的是下次欲执行的指令的地址。"}
{"ID": 3148, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列指令中不属于程序控制指令的是 ( )", "A": "无条件转移指令", "B": "条件转移指令", "C": "中断隐指令", "D": "循环指令", "Answer": "C", "Explanation": "中断隐指令是由硬件实现的，并不是指令系统中存在的指令，更不可能属于程序控制类指令。"}
{"ID": 3149, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "堆栈计算机中，有些堆栈零地址的运算类指令在指今格式中不给出操作数的地址，参加的两个操作数来自 ( )", "A": "累加器和寄存器", "B": "累加器和暂存器", "C": "堆栈的栈顶和次栈顶单元", "D": "堆栈的栈顶单元和暂存器", "Answer": "C", "Explanation": "零地址的运算类指令又称堆栈运算指令，参与的两个操作数来自栈顶和次栈顶单元。"}
{"ID": 3150, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下叙述错误的是 ( )", "A": "为了便于取指，指令的长度通常为存储字长的整数倍", "B": "单地址指令是固定长度的指令", "C": "单字长指令可加快取指令的速度", "D": "单地址指令可能有一个操作数，也可能有两个操作数", "Answer": "B", "Explanation": "指令的地址个数与指令的长度是否固定没有必然联系，即使是单地址指令也可能由于单地址的寻址方式不同而导致指令长度不同。"}
{"ID": 3151, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在指令寻址的各种方式中，获取操作数最快的方式是", "A": "直接寻址", "B": "立即寻址", "C": "寄存器寻址", "D": "间接寻址", "Answer": "B", "Explanation": "立即寻址最快，指令直接给出操作数，寄存器寻址次之，只需访问一次寄存器:直接寻址再次之，访问一次内存，间接寻址最慢，要访问内在两次或以上。注意:寄存器间接寻址取操作数的速度接近直接寻址"}
{"ID": 3152, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "相对寻址方式中，指令所提供的相对地址实质上是一种()", "A": "立即数", "B": "内存地址", "C": "以本条指令在内存中首地址为基准位置的偏移量", "D": "以下条指令在内存中首地址为基准位置的偏移量", "Answer": "D", "Explanation": "相对寻址中，有效地址 EA =(PC)+ A (A为形式地址)，执行本条指时，PC 已完成加1操作，PC 中保存的是下一条指令的地址，因此以下一条指令的地址为基准位置的偏移量。"}
{"ID": 3153, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在多道程序设计中，最重要的寻址方式是 ( )。", "A": "相对寻址", "B": "间接寻址", "C": "立即寻址", "D": "按内容寻址", "Answer": "A", "Explanation": "在多道程序设计中，各个程序段可能要在内存中浮动，而相对寻址特别有利于程序浮动因此选A。"}
{"ID": 3154, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某机器指令字长为 16 位，主存按字节编址，取指令时，每取一字节，PC 自动加 1。当13前指令地址为 2000H，指今内容为相对寻址的无条件转移指令，指今中的形式地址为40H。则取指今后及指今执行后 PC 的内容为 ()", "A": "2000H，2042H", "B": "2002H，2040H", "C": "2002H，2042H", "D": "2000H，2040H", "Answer": "C", "Explanation": "指令字长为16位，2字节，因此取指令后PC 的内容为(PC)+ 2= 2002H；无条件转移指将下一条指令的地址送至PC，形式地址为40H，指令执行后PC=2002H+0040H=2042H。"}
{"ID": 3155, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设寄存器 R 中的数值为 200，主存地址为 200 和 300 的地址单元中存放的内容分别是 300 和 400，则()方式下访问到的操作数为 200。", "A": "直接寻址 200", "B": "寄存器间接寻址 (R)", "C": "存储器间接寻址(200)", "D": "寄存器寻址R", "Answer": "D", "Explanation": "寄存器寻址R 表示寄存器R的内容为操作数，只有D正确。"}
{"ID": 3156, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设某条指令的第一个操作数采用寄存器间接寻址方式，指令中给出的寄存器编号为 8，8 号寄存器的内容为 1200H，地址为 1200H 的单元中的内容为 12FCH，地址为 12FCH 的单元中的内容为 38D8H，而地址为 38D8H 的单元中的内容为 88F9H，则该操作数的有效地址为 ( )", "A": "1200H", "B": "12FCH", "C": "38D8H", "D": "88F9H", "Answer": "A", "Explanation": "寄存器间接寻址中操作数的有效地址 EA =(R)，8 号寄存器内容为 1200H，因此 EA=1200H。"}
{"ID": 3157, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设R[ax]= FFE8H，R[bx]= 7FE6H，执行指今“addw %bx,%ax”后，寄存器的内容和各标志的变化为()。", "A": "R[ax]= 7FCEH，OF =1，SF=0，CF=0，ZF =0", "B": "R[bx]= 7FCEH，OF=1，SF=0，CF=0，ZF=0", "C": "R[ax]= 7FCEH，OF =0，SF=0，CF=1，ZF =0", "D": "R[bx]=7FCEH，OF=0，SF=0，CF=1，ZF =0", "Answer": "C", "Explanation": "由指令格式可知该指令是 AT&T 格式，add 指令的目的寄存器为 ax。add 指令的补码加法过程为 1111 1111 1110 1000 + 111 1111 1110 0110 = (1) 0111 1111 1100 1110 (7FCEH)，参与加法运算的两个数的符号不同，因此必定不会溢出，OF = 0: 结果的符号位为 0，SF = 0，有进位 CF = 1 田 0 = 1;非0，ZF = 0。"}
{"ID": 3158, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下叙述中( )是正确的。", "A": "RISC 机一定采用流水技术", "B": "采用流水技术的机器一定是RISC机", "C": "RISC机的兼容性优于CISC机", "D": "CPU 配备很少的通用寄存器", "Answer": "A", "Explanation": "RISC 必然采用流水线技术，这也是由其指令的特点决定的。而CISC则无此强制要求，但为了提高指令执行速度，CISC也往往采用流水线技术，因此流水线技术并非RISC的专利。"}
{"ID": 3159, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列描述中，不符合 RISC 指今系统特点的是 ( )。", "A": "指今长度固定，指令种类少", "B": "寻址方式种类尽量减少，指令功能尽可能强", "C": "增加寄存器的数目，以尽量减少访存次数", "D": "选取使用频率最高的一些简单指令，以及很有用但不复杂的指令", "Answer": "B", "Explanation": "A、C、D 选项都是 RISC 的特点。B 选项中，寻址方式种类尽量减少是正确的，但 RISC 是尽量简化单条指令的功能，复杂指令的功能由简单指令的组合来实现，而增强指令的功能则是 CISC 的特点。"}
{"ID": 3160, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "CPU的基本功能不包括哪一项？()", "A": "指令控制", "B": "数据加工", "C": "图形渲染", "D": "时间控制", "Answer": "C"}
{"ID": 3161, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CPU的运算器中，不属于其组成部分的是？()", "A": "算术逻辑单元", "B": "存储器地址寄存器", "C": "程序状态字寄存器", "D": "通用寄存器组", "Answer": "B"}
{"ID": 3162, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "指令周期通常包含以下哪些阶段？()", "A": "取指、间址、执行、中断", "B": "编译、解释、执行、反馈", "C": "输入、处理、输出、存储", "D": "启动、执行、暂停、终止", "Answer": "A"}
{"ID": 3163, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在单指令周期执行方案中，指令周期的长度是怎样确定的？()", "A": "执行时间最短的指令的执行时间", "B": "执行时间最长的指令的执行时间", "C": "所有指令的平均执行时间", "D": "第一条指令的执行时间", "Answer": "B"}
{"ID": 3164, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "CPU内部单总线方式的主要缺点是什么？()", "A": "结构复杂", "B": "数据传输中存在较多冲突现象", "C": "硬件量大", "D": "扩展性差", "Answer": "B"}
{"ID": 3165, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "微程序控制器的工作原理是什么？()", "A": "执行指令时读出即可", "B": "由组合逻辑电路即时产生", "C": "根据指令的操作码形成", "D": "通过直接连接到CPU的方式工作", "Answer": "A"}
{"ID": 3166, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "流水线的加速比是指什么？()", "A": "完成同样任务的速度比", "B": "不同任务的执行效率比", "C": "流水线吞吐率与单核处理器的比值", "D": "流水线效率与非流水线效率的比值", "Answer": "A"}
{"ID": 3167, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "超标量流水线技术的特点是什么？()", "A": "每个时钟周期内可并发多条独立指令", "B": "在一个时钟周期内分段执行单条指令", "C": "执行单一功能的流水线", "D": "执行线性任务的流水线", "Answer": "A"}
{"ID": 3168, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在指令执行的取指阶段，CPU主要完成什么操作？()", "A": "将指令结果写回寄存器", "B": "从主存中取出指令代码存放到指令寄存器IR中", "C": "对指令进行译码", "D": "执行算术或逻辑运算", "Answer": "B"}
{"ID": 3169, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CPU的结构中，程序状态字寄存器(PSW)的主要功能是什么？()", "A": "存储当前运行程序的状态信息", "B": "指示下一条要执行的指令的地址", "C": "存储当前正在执行的指令", "D": "存储程序中的变量值", "Answer": "A"}
{"ID": 3170, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "流水线技术中的“结构相关”指的是什么？()", "A": "多条指令因数据依赖而产生的冲突", "B": "指令之间因控制信号冲突而产生的延迟", "C": "多条指令在同一时刻争用同一资源而形成的冲突", "D": "指令执行过程中的逻辑错误", "Answer": "C"}
{"ID": 3171, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CPU中，累加寄存器的主要作用是什么？()", "A": "存储指令的地址", "B": "存储指令执行过程中的中间结果", "C": "存储程序的状态信息", "D": "直接参与逻辑运算", "Answer": "B"}
{"ID": 3172, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在处理机级流水线中，流水线的分类不包括哪一项？()", "A": "单功能流水线", "B": "多功能流水线", "C": "动态流水线", "D": "非线性流水线", "Answer": "D"}
{"ID": 3173, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CPU结构中，“移位器”的主要作用是什么？()", "A": "执行逻辑移位操作", "B": "存储指令或数据", "C": "控制数据传输", "D": "生成时序信号", "Answer": "A"}
{"ID": 3174, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在微指令中，“字段间接编码”方式的主要特点是什么？()", "A": "微指令字中的一位对应一个控制信号", "B": "微操作码字段规定微指令的功能", "C": "微命令字段分成若干个小字段，提高编码效率", "D": "采用隐式编码方式来减少微指令的字长", "Answer": "D"}
{"ID": 3175, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CPU内部，通用寄存器组的主要作用是什么？()", "A": "存储操作系统的指令", "B": "存储程序的源代码", "C": "存储当前运行程序的状态信息", "D": "用于临时存储数据和计算结果", "Answer": "D"}
{"ID": 3176, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "微程序控制器中的微操作是什么？()", "A": "控制信号的组合", "B": "微指令的地址", "C": "主存储器的数据", "D": "操作系统的指令", "Answer": "A"}
{"ID": 3177, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CPU的结构中，什么部件用于存储当前正在执行的指令？()", "A": "通用寄存器组", "B": "指令寄存器(IR)", "C": "程序状态字寄存器(PSW)", "D": "运算器部件", "Answer": "B"}
{"ID": 3178, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CPU的数据通路的主要功能是什么？()", "A": "存储指令的地址", "B": "控制指令的执行过程", "C": "实现运算器和寄存器之间的数据交换", "D": "控制中断请求的处理", "Answer": "C"}
{"ID": 3179, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CPU的结构中，控制器的主要任务是什么？()", "A": "存储数据", "B": "控制指令的执行流程", "C": "执行算术运算", "D": "管理主存储器", "Answer": "B"}
{"ID": 3180, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在处理机级流水线中，哪种流水线不属于常见的分类？()", "A": "单功能流水线", "B": "多功能流水线", "C": "动态流水线", "D": "静态流水线", "Answer": "D"}
{"ID": 3181, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "CPU中的指令周期通常包括哪几个周期？()", "A": "取指、间址、执行和中断", "B": "存储、执行、中断和取指", "C": "取指、分析、执行和控制", "D": "存储、间址、执行和中断", "Answer": "A"}
{"ID": 3182, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列部件不属于控制器的是 ( )。", "A": "指令寄存器", "B": "程序计数器", "C": "程序状态字寄存器", "D": "时序电路", "Answer": "C"}
{"ID": 3183, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "通用寄存器是 ()", "A": "可存放指令的寄存器", "B": "可存放程序状态字的寄存器", "C": "本身具有计数逻辑与移位逻辑的寄存器", "D": "可编程指定多种功能的寄存器", "Answer": "D"}
{"ID": 3184, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "CPU 中保存当前正在执行指令的寄存器是( )。", "A": "指令寄存器", "B": "指令译码器", "C": "数据寄存器", "D": "地址寄存器", "Answer": "A"}
{"ID": 3185, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在所谓的n位CPU中，n是指()。", "A": "地址总线线数", "B": "数据总线线数", "C": "控制总线线数", "D": "I/O线数", "Answer": "B"}
{"ID": 3186, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CPU的寄存器中，( )对用户是透明的。", "A": "程序计数器", "B": "状态寄存器", "C": "指令寄存器", "D": "通用寄存器", "Answer": "C"}
{"ID": 3187, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在一条无条件跳转指今的指今周期内，PC 的值被修改 ( )次。", "A": 1, "B": 2, "C": 3, "D": "无法确定", "Answer": "B"}
{"ID": 3188, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "状态寄存器用来存放 ( )。", "A": "算术运算结果", "B": "逻辑运算结果", "C": "运算类型", "D": "算术、逻辑运算及测试指令的结果状态", "Answer": "D"}
{"ID": 3189, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "指今译码是指对( )进行译码。", "A": "整条指令", "B": "指令的操作码字段", "C": "指令的地址码字段", "D": "指令的地址", "Answer": "B"}
{"ID": 3190, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "CPU中不包括( ）", "A": "存储器地址寄存器", "B": "指令寄存器", "C": "地址译码器", "D": "程序计数器", "Answer": "C"}
{"ID": 3191, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "指今周期是指 ( )。", "A": "CPU从主存取出一条指令的时间", "B": "CPU执行一条指令的时间", "C": "CPU从主存取出一条指今加上执行这条指令的时间", "D": "时钟周期时间", "Answer": "C"}
{"ID": 3192, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "指令( )从主存中读出", "A": "总是根据程序计数器", "B": "有时根据程序计数器，有时根据转移指今", "C": "根据地址寄存器", "D": "有时根据程序计数器，有时根据地址寄存器", "Answer": "A"}
{"ID": 3193, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在取指操作后，程序计数器中存放的是 ( ).", "A": "当前指令的地址", "B": "程序中指令的数量", "C": "已执行的指令数量", "D": "下一条指令的地址", "Answer": "D"}
{"ID": 3194, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下叙述中，错误的是 ( ).", "A": "指令周期的第一个操作是取指令", "B": "为了进行取指操作，控制器需要得到相应的指令", "C": "取指操作是控制器自动进行的", "D": "指令执行时有些操作是相同或相似的", "Answer": "B"}
{"ID": 3195, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列说法中，合理的是 ( )。", "A": "执行各条指令的机器周期数相同，各机器周期的长度均匀", "B": "执行各条指令的机器周期数相同，各机器周期的长度可变", "C": "执行各条指令的机器周期数可变，各机器周期的长度均匀", "D": "执行各条指令的机器周期数可变，各机器周期的长度可变", "Answer": "D"}
{"ID": 3196, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "CPU响应中断的时间是( )。", "A": "一条指令执行结束", "B": "I/O设备提出中断", "C": "取指周期结束", "D": "指令周期结束", "Answer": "A"}
{"ID": 3197, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列不属于 CPU 数据通路结构的是 ( )", "A": "单总线结构", "B": "多总线结构", "C": "部件内总线结构", "D": "专用数据通路结构", "Answer": "C"}
{"ID": 3198, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在单总线的 CPU 中，( )。", "A": "ALU 的两个输入端及输出端都可与总线相连", "B": "ALU 的两个输入端可与总线相连，但输出端需通过暂存器与总线相连", "C": "ALU 的一个输入端可与总线相连，其输出端也可与总线相连", "D": "ALU 只能有一个输入端可与总线相连，另一输入端需通过暂存器与总线相连", "Answer": "D"}
{"ID": 3199, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列不属于微指今结构设计所追求目标的是 ( )。", "A": "提高微程序的执行速度", "B": "提供微程序设计的灵活性", "C": "缩短微指令的长度", "D": "增大控制存储器的容量", "Answer": "D"}
{"ID": 3200, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下说法中，正确的是 ( )", "A": "采用微程序控制器是为了提高速度", "B": "控制存储器由高速 RAM 电路组成", "C": "微指令计数器决定指令执行顺序", "D": "一条微指令存放在控制器的一个控制存储器单元中", "Answer": "B"}
{"ID": 3201, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "水平型微指今与垂直型微指令相比，( )", "A": "前者一次只能完成一个基本操作", "B": "后者一次只能完成一个基本操作", "C": "两者都是一次只能完成一个基本操作", "D": "两者都能一次完成多个基本操作", "Answer": "B"}
{"ID": 3202, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "兼容性微命令指几个微命令( )", "A": "可以同时出现", "B": "可以相继出现", "C": "可以相互代替", "D": "可以相处容错", "Answer": "A"}
{"ID": 3203, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列部件中属于控制部件的是 ( ).Ⅰ.指令寄存器 Ⅱ.操作控制器 Ⅲ，程序计数器 Ⅳ，状态条件寄存器", "A": "Ⅰ、Ⅲ、Ⅳ", "B": "Ⅰ、Ⅱ、Ⅲ", "C": "Ⅰ、Ⅱ、Ⅳ", "D": "Ⅰ、Ⅱ、Ⅲ、Ⅳ", "Answer": "B"}
{"ID": 3204, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列部件中属于执行部件的是 ( ).Ⅰ.控制器 Ⅱ.存储器 Ⅲ.运算器 Ⅳ.外围设备", "A": "Ⅰ、Ⅲ、Ⅳ", "B": "Ⅱ、Ⅲ、Ⅳ", "C": "Ⅱ、Ⅳ", "D": "Ⅰ、Ⅱ、Ⅲ、Ⅳ", "Answer": "B"}
{"ID": 3205, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "指令执行结果出现异常而引起的中断是 ( ).", "A": "I/O中断", "B": "机器校验中断", "C": "程序性中断", "D": "外部中断", "Answer": "C"}
{"ID": 3206, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "主存故障引起的中断是 ( )", "A": "故障异常", "B": "程序性中断", "C": "硬件中断", "D": "外中断", "Answer": "C"}
{"ID": 3207, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "双核CPU和超线程CPU的共同点是()。", "A": "都有两个内核", "B": "都能同时执行两个运算", "C": "都包含两个CPU", "D": "都不会出现争抢资源的现象", "Answer": "B"}
{"ID": 3208, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列关于双核技术的叙述中，正确的是 ( ).", "A": "双核是指主板上有两个 CPU", "B": "双核是利用超线程技术实现的", "C": "双核是指在 CPU 上集成两个运算核心", "D": "双核 CPU 是时间并行的并行计算", "Answer": "C"}
{"ID": 3209, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面有关程序计数器 (PC)的叙述中，错误的是 ( )。", "A": "PC中总是存放指令地址", "B": "PC的值由 CPU在执行指令过程中进行修改", "C": "转移指令时，PC 的值总是修改为转移指令的目标地址", "D": "PC的位数一般和存储器地址寄存器 (MAR)的位数一样", "Answer": "C", "Explanation": "PC 中存放下一条要执行的指令的地址，因此选项A正确。PC 的值会根据CPU 在执行指的过程中修改（确切地说是取指周期末)，或自增，或转移到程序的某处，因此选项 B 正确。转移指令时，需要判别转移是否成功，若成功则 PC 修改为转移指令的目标地址，否则下一条指令的地圳仍然为PC自增后的地址，因此选项C错误。PC与MAR 的位数一样，因此选项D正确。"}
{"ID": 3210, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于计算机系统的概念中，正确的是 ( ).I.CPU 不包括地址译码器II.CPU 的程序计数器中存放的是操作数地址 III.CPU中决定指今执行顺序的是程序计数器 IV.CPU 的状态寄存器对用户是完全透明的", "A": "I、III", "B": "III、IV", "C": "II、III、IV", "D": "I、III、IV", "Answer": "A", "Explanation": "地址译码器是主存等存储器的组成部分，不是CPU的组成部分，I正确。CPU 的程序计数器中存放的是下一条指令的地址，而不是操作数地址，II错误。程序计数器决定程序的执行顺序，III正确。状态寄存器对用户不透明，IV正确。"}
{"ID": 3211, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下有关机器周期的叙述中，错误的是 ( ).", "A": "通常把通过一次总线事务访问一次主存或 I/O 的时间定为一个机器周期", "B": "一个指令周期通常包含多个机器周期", "C": "不同的指令周期所包含的机器周期数可能不同", "D": "每个指令周期都包含一个中断响应机器周期", "Answer": "D", "Explanation": "在指令的执行周期完成后，处理器会判断是否出现中断请求，只有在出现中断请求时才会进入中断周期。"}
{"ID": 3212, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于间址周期的描述中，正确的是 ( )。", "A": "所有指令的间址操作都是相同的", "B": "凡是存储器间接寻址的指令，它们的操作都是相同的", "C": "对于存储器间接寻址和寄存器间接寻址，它们的操作是不同的", "D": "都不对", "Answer": "C", "Explanation": "指令的间址分为一次间址、两次间址和多次间址，因此它们的操作是不同的，A、B 错误。存储器间址通过形式地址访存，寄存器间址通过寄存器内容访存，C 正确。"}
{"ID": 3213, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列说法中，正确的是( )I.指今字长等于机器字长的前提下，取指周期等于机器周期 II.指令字长等于存储字长的前提下，取指周期等于机器周期 III.指令字长和机器字长的长度没有任何关系 IV.为了硬件设计方便，指令字长都和存储字长一样大", "A": "II、III", "B": "II、III、IV", "C": "I、III、IV", "D": "I、IV", "Answer": "A", "Explanation": "指令字长一般都取存储字长的整数倍，若指令字长等于存储字长的 2 倍，则需要两次存，取指周期等于机器周期的 2 倍:若指字长等于存储字长，则取指周期等于机器周期，此I错。根据1的分析可知，II 正确。指字长取决于操作码的长度、操作数地址的长度和操作数地址的个数，与机器字长没有必然的联系。但为了硬件设计方便，指令字长一般取字节或有储字长的整数倍，因此 III 正确。根据 的分析可知，指字长一般取字节或存储字长的整数倍，而不一定都和存储字长一样大，因此IV 错误。综上所述，II、III 正确。"}
{"ID": 3214, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在组合逻辑控制器中，微操作控制信号的形成主要与 ( )信号有关", "A": "指令操作码和地址码", "B": "指令译码信号和时钟", "C": "操作码和条件码", "D": "状态信息和条件", "Answer": "B", "Explanation": "CUP 的输入信号来源如下:经指译码器译码产生的指令信息， 时序系统产生的机器周期信号和节拍信号.自执行单元的反馈信息即标志。前两者是主要因素"}
{"ID": 3215, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在微程序控制器中，形成微程序入口地址的是 ( )。", "A": "机器指令的地址码字段", "B": "微指令的微地址码字段", "C": "机器指令的操作码字段", "D": "微指令的微操作码字段", "Answer": "C", "Explanation": "执行公用的取指微程序从主存中取出机器指令后，由机器指令的操作码字段指出各个微程序的入口地址(初始微地址)。"}
{"ID": 3216, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "微程序控制器的速度比硬布线控制器慢，主要是因为 ( )", "A": "增加了从磁盘存储器读取微指令的时间", "B": "增加了从主存读取微指令的时间", "C": "增加了从指令寄存器读取微指令的时间", "D": "增加了从控制存储器读取微指令的时间", "Answer": "D", "Explanation": "在微程序控制中，控制存储器中存放有微指令，在执行时需要从中读出相应的微指令，从而增加了时间消耗。"}
{"ID": 3217, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "硬布线控制器与微程序控制器相比，( )", "A": "硬布线控制器的时序系统比较简单", "B": "微程序控制器的时序系统比较简单", "C": "两者的时序系统复杂程度相同", "D": "可能是硬布线控制器的时序系统比较简单，也可能是微程序控制器的时序系统比较简单", "Answer": "B", "Explanation": "硬布线控制器需要结合各微操作的节拍安排，综合分析，写出逻辑表达式，再设计成逻辑电路因此时序系统比较复杂:而微程序只需按照节拍的安排，顺序执行微指令，因此比较简单。"}
{"ID": 3218, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在微程序控制器中，机器指令与微指令的关系是 ( ).", "A": "每条机器指令由一条微指今来执行", "B": "每条机器指今由若干微指今组成的微程序来解释执行", "C": "若干机器指今组成的程序可由一个微程序来执行", "D": "每条机器指今由若干微程序执行", "Answer": "B", "Explanation": "在一个 CPU 周期中，一组实现一定功能的微命令的组合构成一条微指令，有序的微指令序列构成一段微程序，微程序的作用是实现一条对应的机器指令。"}
{"ID": 3219, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在微程序控制方式中，以下说法正确的是 ( )I.采用微程序控制器的处理器称为微处理器II.每条机器指今由一段微程序来解释执行III.在微指令的编码中，效率最低的是直接编码方式 IV.水平型微指令能充分利用数据通路的并行结构", "A": "I、II", "B": "II、IV", "C": "I、III", "D": "III、IV", "Answer": "B", "Explanation": "微处理器是相对于一些大型处理器而言的，与微程序控制器没有必然联系。不管是采用微程序控制器，还是采用硬布线控制器，微机的 CPU 都是微处理器， 错误。微程序的设计思想就是将每条机器指令编写成一个微程序，每个微程序包含若干条微指令，每条微指令对应一个或几个微操作命令，I正确。直接编码方式中每位代表一个微命令，不需要译码，因此执行效率最高，只是这种方式会使得微指令的位数大大增加，III 错误。一条水平型微指令能定义并执行几种并行的基本操作，因此能够更充分利用数据通路的并行结构，IV 正确"}
{"ID": 3220, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列说法中，正确的是 ( )I.微程序控制方式和硬布线方式相比较，前者可以使指令的执行速度更快II.若采用微程序控制方式，则可用uPC 取代PC.III.控制存储器可以用 ROM 实现IV.指今周期也称 CPU周期", "A": "I、III", "B": "II、III", "C": "只有III", "D": "I、II、III、IV", "Answer": "C", "Explanation": "微程序控制方式采用编程方式来执行指令，而硬布线方式则采用硬件方式来执行指令，因此硬布线方式速度较快， 错误。HPC 无法取代 PC，因为它只在微程序中指向下一条微指令地址的寄存器。因此它也必然不可能知道这段微程序执行完毕后下一条是什么指令，II 错误。由于每条微指令执行时所发出的控制信号是事先设计好的，不需要改变，因此存放所有控制信号的存储器应为 ROM，III 正确。指今周期是从一条指令启动到下一条指令启动的间隔时间，而CPU 周期是机器周期，是指令执行中每步操作所需的时间，IV错误。"}
{"ID": 3221, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于“自陷”(Trap)异常的叙述中，错误的是 ( )。", "A": "“自陷”是人为预先设定的一种特定处理事件", "B": "可由访管指今或自陷指今的执行进入", "C": "一定是出现某种异常情况才会发生 “自陷”", "D": "“自 陷 “发生后 CPU 将进入操作系统内核程序执行", "Answer": "C", "Explanation": "自陷是人为设定的特殊中断机制，不是出现某些异常情况而产生的。因此 C 错误"}
{"ID": 3222, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于异常和中断响应的叙述中，错误的是 ( )", "A": "异常事件检测由 CPU 在执行每一条指今的过程中进行", "B": "中断请求检测由 CPU 在每条指令执行结束、取下条指令之前进行", "C": "CPU检测到异常事件后所做的处理和检测到中断请求后所做的处理完全相同", "D": "CPU 在中断响应时会关中断、保存断点和程序状态并转到相应的中断服务程序", "Answer": "C", "Explanation": "CPU 检测到异常事件后所做的处理和检测到中断请求后所做的处理基本是相同的，但有些地方可能不同。例如，对于故障类异常，因为其断点为发生故障时的指令地址，所以要重新计算PC值，而中断的断点为下条指令地址(即PC值)，因此无须重新计算PC值。"}
{"ID": 3223, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下给出的事件中，无须异常处理程序进行处理的是 ()", "A": "缺页故障", "B": "Cache 缺失", "C": "地址越界", "D": "除数为0", "Answer": "B", "Explanation": "缺页、地址越界和除数为 0 都是执行某条指时发生的故障，需要调出操作系统内核中相应的异常处理程序来处理，而Cache 缺失由CPU 硬件实现，无须调出异常处理程序进行处理。"}
{"ID": 3224, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于超标量流水线的描述中，不正确的是( )。", "A": "在一个时钟周期内一条流水线可执行一条以上的指令", "B": "一条指令分为多段指令由不同电路单元完成", "C": "超标量通过内置多条流水线来同时执行多个处理器，其实质是以空间换取时间", "D": "超标量流水线是指运算操作并行", "Answer": "D", "Explanation": "超标量流水线是指在一个时钟周期内一条流水线可执行一条以上的指令，因此 A 正确。一条指令分为多段指令，由不同电路单元完成，因此 B 正确。超标量通过内置多条流水线来同时执行多个处理器，其实质是以空间换取时间，因此 C 正确。超标量流水线通常包含运算操作并行的特性，因此 D 错误。"}
{"ID": 3225, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于动态流水线的描述中，正确的是 ( )。", "A": "动态流水线是指在同一时间内，当某些段正在实现某种运算时，另一些段却正在进行另一种运算，这样对提高流水线的效率很有好处，但会使流水线控制变得很复杂", "B": "动态流水线是指运算操作并行", "C": "动态流水线是指指今步骤并行", "D": "动态流水线是指程序步骤并行", "Answer": "A", "Explanation": "动态流水线是相对于静态流水线而言的，静态流水线上下段连接方式固定，而动态流水线的连接方式是可变的，因此 A 正确。"}
{"ID": 3226, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "流水 CPU 是由一系列称为“段”的处理线路组成的，一个 m 段流水线稳定时的 CPU的吞吐能力，与 m 个并行部件的 CPU 的吞吐能力相比，( )。", "A": "具有同等水平的吞吐能力", "B": "不具备同等水平的吞吐能力", "C": "吞吐能力大于前者的吞吐能力", "D": "吞吐能力小于前者的吞吐能力", "Answer": "A", "Explanation": "m 段流水线在一个时钟周期后，每个时钟周期都可以完成一条指令，而 m 个并行部件在 m 个时钟周期后能完成全部的 m 条指令，等效于平均每个时钟周期完成一条指令，因此两者的吞吐能力相等，A 正确。"}
{"ID": 3227, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "指令流水线中出现数据相关时流水线将受阻，( )可解决数据相关问题。", "A": "增加硬件资源", "B": "采用旁路技术", "C": "采用分支预测技术", "D": "以上都可以", "Answer": "B", "Explanation": "处理数据相关问题有两种方法：一种是暂停相关指令的执行，即暂停流水线，直到能够正确读出寄存器操作数为止；另一种是采用专门的数据通路，直接把结果送到 ALU 的输入端，这种方法称为旁路技术，因此 B 正确。"}
{"ID": 3228, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "关于流水线技术的说法中，错误的是 ( )。", "A": "超标量技术需要配置多个功能部件和指令译码电路等", "B": "与超标量技术和超流水线技术相比，超长指令字技术对优化编译器要求更高，而无其他硬件要求", "C": "流水线按序流动时，在 RAW、WAR 和 WAW 中，只可能出现 RAW 相关", "D": "超流水线技术相当于将流水线再分段，从而提高每个周期内功能部件的使用次数", "Answer": "B", "Explanation": "超长指令字技术对编译器的要求更高，但与硬件无关，因此 A 正确。流水线按序流动时，只可能出现 RAW 相关，C 正确。超流水线技术是将流水线再分段以提高功能部件的使用次数，D 正确。超标量技术需要配置多个功能部件和指令译码电路等，A 正确。"}
{"ID": 3229, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于超线程(HT)技术的描述中，正确的是 ( )。", "A": "超线程技术可以令四核的 Intel Core i7 处理器变成八核", "B": "超线程是一项硬件技术，能使系统性能大幅提升，与操作系统和应用软件无关", "C": "含有超线程技术的 CPU 需要芯片组的支持才能发挥技术优势", "D": "超线程模拟出的每个 CPU 核都具有独立的资源，各自工作互不干扰", "Answer": "C", "Explanation": "超线程技术需要芯片组、操作系统和应用软件的支持，才能充分发挥其优势，C 正确。"}
{"ID": 3230, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列有关多核 CPU和单核 CPU的描述中，错误的是( ).", "A": "双核的频率为2.4GHZ，那么其中每个核心的频率也是 2.4GHZ", "B": "采用双核 CPU可以降低计算机系统的功耗和体积", "C": "多核CPU共用一组内存，数据共享", "D": "所有程序在多核 CPU 上运行速度都快", "Answer": "D", "Explanation": "所有程序在多核 CPU 上运行速度都快这一说法是不准确的，因为程序的性能受多种因素影响，不是所有程序都能在多核 CPU 上获得速度提升，D 错误。"}
{"ID": 3231, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "系统总线的分类中，哪种总线用于传输各功能部件之间的数据信息，双向传输，其位数与机器字长、存储字长有关？()", "A": "数据总线", "B": "地址总线", "C": "控制总线", "D": "通信总线", "Answer": "A"}
{"ID": 3232, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在总线操作的四个阶段中，哪个阶段由需要使用总线的主模块提出申请，经总线仲裁机构决定将下一传输周期的总线使用权授予某一申请者？()", "A": "寻址阶段", "B": "传输阶段", "C": "结束阶段", "D": "申请分配阶段", "Answer": "D"}
{"ID": 3233, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准是最新的总线和接口标准，将全面取代现行的PCI和AGP，最终实现总线标准的统一？()", "A": "VESA总线", "B": "PCI总线", "C": "USB总线", "D": "PCI-Express（PCI-E）", "Answer": "D"}
{"ID": 3234, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准是用于串行二进制交换的数据终端设备（DTE）和数据通信设备（DCE）之间的标准接口？()", "A": "USB总线", "B": "PCMCIA", "C": "SCSI", "D": "RS-232C总线", "Answer": "D"}
{"ID": 3235, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在总线的性能指标中，传输周期又称为什么？()", "A": "总线周期", "B": "总线带宽", "C": "时钟频率", "D": "总线宽度", "Answer": "A"}
{"ID": 3236, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在总线操作的四个阶段中，哪个阶段主模块和从模块进行数据交换，可单向或双向进行数据传送？()", "A": "寻址阶段", "B": "传输阶段", "C": "结束阶段", "D": "申请分配阶段", "Answer": "B"}
{"ID": 3237, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准是用于计算机和智能设备之间的独立处理器标准，适用于系统级接口？()", "A": "SATA", "B": "IDE总线", "C": "RS-232C总线", "D": "SCSI", "Answer": "D"}
{"ID": 3238, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准专为高度集成的外围部件、扩充插板和处理器/存储器系统而设计的互联机制，属于局部总线？()", "A": "PCI-Express（PCI-E）", "B": "PCMCIA", "C": "ISA总线", "D": "EISA总线", "Answer": "A"}
{"ID": 3239, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准是一种32位标准的计算机局部总线，用于高速传送活动图像的大量数据？()", "A": "SCSI", "B": "VESA总线", "C": "USB总线", "D": "AGP", "Answer": "B"}
{"ID": 3240, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在总线性能指标中，哪个指标表示总线的数据传输率，即单位时间内总线上可传输数据的位数？()", "A": "总线带宽", "B": "总线宽度", "C": "总线周期", "D": "时钟频率", "Answer": "A"}
{"ID": 3241, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在总线操作的四个阶段中，哪个阶段由主模块获得总线控制权并发出总线使用的请求？()", "A": "寻址阶段", "B": "传输阶段", "C": "结束阶段", "D": "申请分配阶段", "Answer": "D"}
{"ID": 3242, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪个总线仲裁方式采用独立请求方式，响应速度快，对优先次序的控制相当灵活？()", "A": "计数器定时查询方式", "B": "分布仲裁方式", "C": "独立请求方式", "D": "链式查询方式", "Answer": "C"}
{"ID": 3243, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准是一种连接计算机内部寄存器与寄存器之间、寄存器与ALU之间的公共连接线？()", "A": "数据总线", "B": "地址总线", "C": "控制总线", "D": "通信总线", "Answer": "A"}
{"ID": 3244, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准是一种用于传输音频和声音数据的接口标准，连接音频设备到计算机系统？()", "A": "USB总线", "B": "PCI总线", "C": "IDE总线", "D": "AC'97总线", "Answer": "D"}
{"ID": 3245, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪个总线仲裁方式将所有的总线请求集中起来，利用一个特定的裁决算法进行裁决，离总线控制器越近的部件其优先级越高？()", "A": "计数器定时查询方式", "B": "分布仲裁方式", "C": "独立请求方式", "D": "链式查询方式", "Answer": "D"}
{"ID": 3246, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "挂接在总线上的多个部件 ( )", "A": "只能分时向总线发送数据，并只能分时从总线接收数据", "B": "只能分时向总线发送数据，但可同时从总线接收数据", "C": "可以同时向总线发送数据，并同时从总线接收数据", "D": "可以同时向总线发送数据，但只能分时从总线接收数据", "Answer": "B"}
{"ID": 3247, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在总线上，同一时刻 ( )。", "A": "只能有一个主设备控制总线传输操作", "B": "只能有一个从设备控制总线传输操作", "C": "只能有一个主设备和一个从设备控制总线传输操作", "D": "可以有多个主设备控制总线传输操作", "Answer": "A"}
{"ID": 3248, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在计算机系统中，多个系统部件之间信息传送的公共通路称为总线，就其所传送的信息的性质而言，下列 ( )不是在公共通路上传送的信息。", "A": "数据信息", "B": "地址信息", "C": "系统信息", "D": "控制信息", "Answer": "C"}
{"ID": 3249, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "系统总线用来连接().", "A": "寄存器和运算器部件", "B": "运算器和控制器部件", "C": "CPU、主存和外设部件", "D": "接口和外部设备", "Answer": "C"}
{"ID": 3250, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机使用总线结构便于增减外设，同时 ( )", "A": "减少信息传输量", "B": "提高信息的传输速度", "C": "减少信息传输线的条数", "D": "提高信息传输的并行性", "Answer": "C"}
{"ID": 3251, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "间址寻址第一次访问内存所得到的信息经系统总线的 ( )传送到 CPU", "A": "数据总线", "B": "地址总线", "C": "控制总线", "D": "总线控制器", "Answer": "A"}
{"ID": 3252, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在单机系统中，三总线结构计算机的总线系统组成是 ( )", "A": "片内总线、系统总线和通信总线", "B": "数据总线、地址总线和控制总线", "C": "DMA 总线、主存总线和 I/O 总线", "D": "ISA 总线、VESA 总线和 PCI 总线", "Answer": "C"}
{"ID": 3253, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "主存通过( )来识别信息是地址还是数据", "A": "总线的类型", "B": "存储器数据寄存器(MDR)", "C": "存储器地址寄存器(MAR)", "D": "控制单元(CU)", "Answer": "A"}
{"ID": 3254, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列总线标准中属于串行总线的是 ( ).", "A": "PCI", "B": "USB", "C": "EISA", "D": "ISA", "Answer": "B"}
{"ID": 3255, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在现代微机主板上，采用局部总线技术的作用是 ( ).", "A": "节省系统的总带宽", "B": "提高抗干扰能力", "C": "抑制总线终端反射", "D": "构成紧耦合系统", "Answer": "A"}
{"ID": 3256, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在不同速度的设备之间传送数据，( )", "A": "必须采用同步控制方式", "B": "必须采用异步控制方式", "C": "可以选用同步控制方式，也可选用异步控制方式", "D": "必须采用应答方式", "Answer": "C"}
{"ID": 3257, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "同步控制方式是( )。", "A": "只适用于 CPU 控制的方式", "B": "只适用于外部设备控制的方式", "C": "由统一的时序信号控制的方式", "D": "所有指令执行时间都相同的方式", "Answer": "C"}
{"ID": 3258, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在异步总线中，传送操作 ( )。", "A": "由设备控制器控制", "B": "由 CPU 控制", "C": "由统一时序信号控制", "D": "按需分配时间", "Answer": "D"}
{"ID": 3259, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "总线的异步通信方式是 ( )。", "A": "既不采用时钟信号，又不采用“握手”信号", "B": "只采用时钟信号，不采用“握手”信号", "C": "不采用时钟信号，只采用“握手”信号", "D": "既采用时钟信号，又采用“握手”信号", "Answer": "C"}
{"ID": 3260, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在各种异步通信方式中，()的速度最快。", "A": "全互锁", "B": "半互锁", "C": "不互锁", "D": "速度均相等", "Answer": "C"}
{"ID": 3261, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "传输一幅分辨率为 640x480 像素、颜色数量为 65536 的照片(采用无压缩方式)，设有效数据传输率为 56kb/s，大约需要的时间是 ( ).", "A": "34.82s", "B": "43.86s", "C": "85.71s", "D": "87.77s", "Answer": "D", "Explanation": "像素总数为307200像素，每个像素的颜色数量为 65536（即 16 位颜色），所以每个像素占用 2 字节，因此总数据量为：307200*2=614400字节=4915200比特，因此传输时间为：4915200/56000=87.77s"}
{"ID": 3262, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某总线有 104 根信号线，其中数据线 (DB)为32 根，若总线工作频率为 33MHz，则其理论最大传输率为 ( )。", "A": "33MB/s", "B": "64MB/s", "C": "132MB/S", "D": "164MB/s", "Answer": "C", "Explanation": "计算得到理论最大传输率为 132MB/s。"}
{"ID": 3263, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某机器 I/O 设备采用异步串行传送方式传送字符信息，字符信息格式为 1 位起始位、7 位数据位、1 位校验位和1位停止位。若要求每秒传送 480 个字符，则该设备的数据传输率为( )。", "A": "380 b/s", "B": "4800 B/s", "C": "480 B/s", "D": "4800 b/s", "Answer": "D", "Explanation": "首先，计算每个字符的总位数：1 位起始位 + 7 位数据位 + 1 位校验位 + 1 位停止位 = 10 位。每秒传送 480 个字符，计算每秒需要传送的总位数：480 个字符/秒 × 10 位/字符 = 4800 位/秒。"}
{"ID": 3264, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在手术过程中，医生将手伸出，等护士将手术刀递上，待医生握紧后，护士才松手。若把医生和护士视为两个通信模块，上述动作相当于 ( )。", "A": "同步通信", "B": "异步通信的全互锁方式", "C": "异步通信的半互锁方式", "D": "异步通信的不互锁方式", "Answer": "B", "Explanation": "医生和护士的动作符合异步通信的全互锁方式。"}
{"ID": 3265, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "磁盘的平均存取时间由哪三部分构成？()", "A": "寻道时间、旋转延迟时间、数据传输时间", "B": "传输时间、读取时间、写入时间", "C": "旋转时间、寻道时间、数据缓存时间", "D": "传输时间、旋转延迟时间、DMA时间", "Answer": "A"}
{"ID": 3266, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "I/O接口的基本结构中，内部接口与系统总线相连，数据的传输方式是什么？()", "A": "并行传输", "B": "串行传输", "C": "DMA传输", "D": "通道传输", "Answer": "A"}
{"ID": 3267, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "I/O端口的编址方式中，哪种方式把I/O端口当做存储器的单元进行地址分配，不需要专门的I/O指令？()", "A": "统一编址方式", "B": "独立编址方式", "C": "统一读写方式", "D": "存储器映射方式", "Answer": "A"}
{"ID": 3268, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在程序中断方式中，什么是非屏蔽中断？()", "A": "来自处理器和内存以外的部件引起的中断", "B": "在处理器和内存内部产生的中断", "C": "一种软件中断", "D": "一种内部中断", "Answer": "A"}
{"ID": 3269, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "DMA方式和中断方式的主要区别之一是什么？()", "A": "DMA方式需要程序切换，中断方式不需要", "B": "DMA方式只占用CPU少部分时间，中断方式全程占用CPU资源", "C": "DMA方式响应速度更慢", "D": "DMA方式只适用于高速外设", "Answer": "B"}
{"ID": 3270, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在I/O接口的类型中，哪一种接口通过接口电缆与外设相连，数据传输方式可能是串行方式？()", "A": "I/O端口", "B": "内部接口", "C": "外部接口", "D": "数据接口", "Answer": "C"}
{"ID": 3271, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "中断向量地址是指什么？()", "A": "中断服务程序的入口地址", "B": "中断请求的优先级", "C": "中断源的地址", "D": "中断控制器的地址", "Answer": "A"}
{"ID": 3272, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "RAID中的RAID2方案采用什么类型的纠错码来提高数据容错性？()", "A": "海明码", "B": "奇偶校验码", "C": "罗列码", "D": "镜像码", "Answer": "A"}
{"ID": 3273, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "I/O接口的功能中，哪一项用于实现地址译码和设备选择？()", "A": "进行数据缓冲", "B": "实现主机和外设的通信联络控制", "C": "传送控制命令和状态信息", "D": "进行地址译码和设备选择", "Answer": "D"}
{"ID": 3274, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在计算机中，什么是I/O端口？()", "A": "存放I/O设备传来的数据的寄存器", "B": "CPU与I/O设备之间的直接数据通路", "C": "可以被CPU直接访问的寄存器，用于读取和写入数据", "D": "控制CPU和I/O设备之间数据传输的电缆", "Answer": "C"}
{"ID": 3275, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "硬盘的平均存取时间中，寻道时间是指什么？()", "A": "传输数据所花费的时间", "B": "磁头移动到目的磁道的时间", "C": "磁盘定位到所在扇区的时间", "D": "硬盘旋转一圈的时间", "Answer": "B"}
{"ID": 3276, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "I/O接口的基本结构中，哪个部分与系统总线相连，数据的传输方式只能是并行传输？()", "A": "数据端口", "B": "控制端口", "C": "内部接口", "D": "外部接口", "Answer": "C"}
{"ID": 3277, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在I/O接口的编址方式中，哪种方式不需要CPU设置专门的输入/输出指令来访问端口？()", "A": "统一编址方式", "B": "独立编址方式", "C": "统一读写方式", "D": "存储器映射方式", "Answer": "A"}
{"ID": 3278, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "I/O接口的功能中，哪一项用于暂存外设和CPU之间的数据？()", "A": "进行数据缓冲", "B": "实现主机和外设的通信联络控制", "C": "传送控制命令和状态信息", "D": "进行地址译码和设备选择", "Answer": "A"}
{"ID": 3279, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列说法中，正确的是 ( )", "A": "计算机中一个汉字内码在主存中占用 4B", "B": "输出的字型码 16x16 点阵在缓冲存储区中占用 32B", "C": "输出的字型码 16x16 点阵在缓冲存储区中占用 16B", "D": "以上说法都不对", "Answer": "B"}
{"ID": 3280, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在统一编址的方式下，区分存储单元和 I/O 设备是靠 ( )。", "A": "不同的地址码", "B": "不同的地址线", "C": "不同的控制线", "D": "不同的数据线", "Answer": "A"}
{"ID": 3281, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列功能中，属于 I/O 接口的功能的是 ( )。\nⅠ.数据格式的转换 \nⅡ.I/O过程中错误与状态检测 \nⅢ.I/O操作的控制与定时 \nⅣ.与主机和外设通信", "A": "Ⅰ, Ⅳ", "B": "Ⅰ, Ⅲ, Ⅳ", "C": "Ⅰ, Ⅱ, Ⅳ", "D": "Ⅰ, Ⅱ, Ⅲ, Ⅳ", "Answer": "D"}
{"ID": 3282, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列叙述中，正确的是( )", "A": "只有 I/O 指令可以访问 I/O 设备", "B": "在统一编址下，不能直接访问 I/O 设备", "C": "访问存储器的指令一定不能访问 I/O 设备", "D": "只有在具有专门 I/O 指令的计算机中，I/O 设备才可以单独编址", "Answer": "D"}
{"ID": 3283, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "磁盘驱动器向盘片磁道记录数据时采用 ( )方式写入。", "A": "并行", "B": "串行", "C": "并行-串行", "D": "串行-并行", "Answer": "B"}
{"ID": 3284, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "程序员进行系统调用访问设备使用的是 ()", "A": "逻辑地址", "B": "物理地址", "C": "主设备地址", "D": "从设备地址", "Answer": "A"}
{"ID": 3285, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在配有通道的计算机系统中，用户程序需要输入/输出时，引起的中断是 ( ).", "A": "访管中断", "B": "I/O中断", "C": "程序性中断", "D": "外中断", "Answer": "A"}
{"ID": 3286, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列不属于程序控制指令的是 ()", "A": "无条件转移指今", "B": "有条件转移指令", "C": "中断隐指令", "D": "循环指令", "Answer": "C"}
{"ID": 3287, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在主机和外设的信息传送中，( )不是一种程序控制方式", "A": "直接程序传送", "B": "程序中断", "C": "直接存储器存取 (DMA)", "D": "通道控制", "Answer": "C"}
{"ID": 3288, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "中断发生时，程序计数器内容的保护和更新是由 ( )完成的。", "A": "硬件自动", "B": "进栈指今和转移指令", "C": "访存指令", "D": "中断服务程序", "Answer": "A"}
{"ID": 3289, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在 DMA 方式传送数据的过程中，由于没有破坏( )的内容，所以 CPU 可以正常工作(访存除外)。", "A": "程序计数器", "B": "程序计数器和寄存器", "C": "指令寄存器", "D": "堆栈寄存器", "Answer": "B"}
{"ID": 3290, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于 I/O 设备的说法中，正确的是 ( )。I.键盘、鼠标、显示器、打印机属于人机交互设备II.在微型计算机中，VGA 代表的是视频传输标准III.打印机从打字原理的角度来区分，可分为点阵式打印机和活字式打印机IV，鼠标适合于用中断方式来实现输入操作", "A": "II、III、IV", "B": "I、II、IV", "C": "I、II、III", "D": "I、II、III、IV", "Answer": "B", "Explanation": "仅有 I、II、IV 符合实际情况。"}
{"ID": 3291, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "CRT 的分辨率为 1024x1024 像素，像素的颜色数为 256，则刷新存储器的每单元字长为( )，总容量为( )", "A": "8B，256MB", "B": "8bit，1MB", "C": "8bit，256KB", "D": "8B，32MB", "Answer": "B", "Explanation": "刷新存储器的每单元字长为 8bit，总容量为 1024x1024x8bit=1MB。"}
{"ID": 3292, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "中断判优逻辑和总线仲裁方式相类似，下列说法中错误的是 ( )。", "A": "在总线仲裁方式中，独立请求方式响应时间最快，是以增加控制线数为代价的", "B": "在总线仲裁方式中，计数器定时查询方式有一根总线请求 (BR) 和一根设备地址线，若每次计数都从0开始，则设备号小的优先级高", "C": "总线仲裁方式一般是指 I/O 设备争用总线的判优方式，而中断判优方式一般是指 I/O 设备争用 CPU 的判优方式", "D": "中断判优逻辑既可以通过硬件实现，又可以通过软件实现", "Answer": "B", "Explanation": "独立请求方式在总线仲裁中响应时间最快，计数器定时查询方式在总线仲裁中用于确定设备的优先级。总线仲裁方式一般涉及 I/O 设备争用总线，而中断判优方式涉及 I/O 设备争用 CPU 的判优。中断判优逻辑可以通过硬件或软件实现。"}
{"ID": 3293, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下说法中，错误的是 ( )。", "A": "中断服务程序一般是操作系统模块", "B": "中断向量方法可提高中断源的识别速度", "C": "中断向量地址是中断服务程序的入口地址", "D": "重叠处理中断的现象称为中断嵌套", "Answer": "C", "Explanation": "中断向量地址不是中断服务程序的入口地址，而是中断服务程序入口地址的地址。"}
{"ID": 3294, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "关于程序中断方式和 DMA 方式的叙述，错误的是 ( )I.DMA 的优先级比程序中断的优先级要高II.程序中断方式需要保护现场，DMA 方式不需要保护现场III.程序中断方式的中断请求是为了报告 CPU 数据的传输结束，而 DMA 方式的中断请求完全是为了传送数据", "A": "仅II", "B": "II、III", "C": "仅III", "D": "I、III", "Answer": "C", "Explanation": "DMA 方式不需要 CPU 预传送操作，仅在开始和结尾借用 CPU 一点时间，其余不占用CPU 任何资源，中断方式是程序切换，每次操作需要保护和恢复现场，所以 DMA 优先级高于中断请求，从而可以加快处理效率，因此了正确。从 的分析可知，程序中断需要中断现行程序，因此需保护现场，以便中断执行完后还能回到原来的点去继续没有完成的工作，DMA 方式不需要中断现行程序，无须保护现场，因此I正确。II的说法正好相反。"}
{"ID": 3295, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列说法中，正确的是 ( )。", "A": "程序中断过程是由硬件和中断服务程序共同完成的", "B": "在每条指令的执行过程中，每个总线周期要检查一次有无中断请求", "C": "检测有无 DMA 请求，一般安排在一条指令执行过程的末尾", "D": "中断服务程序的最后指令是无条件转移指令", "Answer": "A", "Explanation": "程序中断过程是由硬件和中断服务程序共同完成的。在每条指令的执行过程中，并不会在每个总线周期都检查中断请求。检测 DMA 请求通常不会安排在指令执行过程的末尾。中断服务程序的最后指令通常是中断返回指令，而不是无条件转移指令。"}
{"ID": 3296, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "中断响应由高到低的优先次序宜用 ( )。", "A": "访管→程序性→机器故障", "B": "访管→程序性→重新启动", "C": "外部→访管→程序性", "D": "程序性→I/0→访管", "Answer": "B", "Explanation": "中断响应的优先次序由高到低为访管→程序性→重新启动。"}
{"ID": 3297, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在下列情况下，可能不发生中断请求的是 ( )。", "A": "DMA 操作结束", "B": "一条指令执行完毕", "C": "机器出现故障", "D": "执行“软中断”指令", "Answer": "B", "Explanation": "一条指令执行完毕不会引发中断请求。"}
{"ID": 3298, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某计算机有 4 级中断，优先级从高到低为 1-2-3-4。若将优先级顺序修改，改后 1级中断的屏蔽字为 1101，2 级中断的屏蔽字为 0100，3 级中断的屏蔽字为 1111，4 级中断的屏蔽字为 0101，则修改后的优先顺序从高到低为 () .", "A": "1-2-3-4", "B": "3-1-4-2", "C": "1-3-4-2", "D": "2-1-3-4", "Answer": "B", "Explanation": "修改后的优先顺序为 3-1-4-2，即优先级从高到低依次为 3、1、4、2。"}
{"ID": 3299, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在中断响应周期中，CPU 主要完成的工作是 ()", "A": "开中断，保护断点，发中断响应信号并形成向量地址", "B": "关中断，保护断点，发中断响应信号并形成向量地址", "C": "关中断，执行中断服务程序", "D": "开中断，执行中断服务程序", "Answer": "B", "Explanation": "在中断响应周期中，CPU 主要完成的工作是关中断，保护断点，发中断响应信号并形成向量地址。"}
{"ID": 3300, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "CPU响应中断时最先完成的步骤是 ()", "A": "开中断", "B": "保存断点", "C": "关中断", "D": "转入中断服务程序", "Answer": "C", "Explanation": "CPU响应中断时最先完成的步骤是关中断。"}
{"ID": 3301, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设置中断屏蔽标志可以改变 ()", "A": "多个中断源的中断请求优先级", "B": "CPU对多个中断请求响应的优先次序", "C": "多个中断服务程序开始执行的顺序", "D": "多个中断服务程序执行完的次序", "Answer": "D", "Explanation": "设置中断屏蔽标志可以改变多个中断服务程序执行完的次序。"}
{"ID": 3302, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列叙述中，( )是正确的。", "A": "程序中断方式和 DMA 方式中实现数据传送都需要中断请求", "B": "DMA 请求、非屏蔽中断、可屏蔽中断都要在当前指令结束之后才能被响应", "C": "程序中断方式和 DMA 方式中都有中断请求，但目的不同", "D": "DMA 要等指今周期结束时才可以进行周期窃取", "Answer": "C", "Explanation": "程序中断方式和 DMA 方式都有中断请求，但其目的不同。"}
{"ID": 3303, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于DMA 方式进行I/O的描述中，正确的是( )。", "A": "一个完整的 DMA 过程，部分由 DMA 控制器控制，部分由 CPU 控制", "B": "一个完整的 DMA 过程，完全由 CPU 控制", "C": "一个完整的 DMA 过程，完全由 DMA 控制器控制，CPU 不介入任何控制", "D": "一个完整的 DMA 过程，完全由 CPU 采用周期挪用法控制", "Answer": "A", "Explanation": "DMA 过程主要由 DMA 控制器控制，但需要 CPU 参与控制，特别是在数据传输开始和结束时。"}
{"ID": 3304, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "关于外中断(故障除外)和DMA，下列说法中正确的是 ( )。", "A": "DMA 请求和中断请求同时发生时，响应 DMA 请求", "B": "DMA 请求、非屏蔽中断、可屏蔽中断都要在当前指令结束之后才能被响应", "C": "非屏蔽中断请求优先级最高，可屏蔽中断请求优先级最低", "D": "若不开中断，所有中断请求就不能响应", "Answer": "A", "Explanation": "DMA 请求的优先级高于中断请求，因此当 DMA 请求和中断请求同时发生时，CPU 会响应 DMA 请求。"}
{"ID": 3305, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下有关DMA 方式的叙述中，错误的是( )。", "A": "在DMA 方式下，DMA 控制器向 CPU 请求的是总线使用权", "B": "DMA 方式可用于键盘和鼠标的数据输入", "C": "在数据传输阶段，不需要 CPU 介入，完全由 DMA 控制器控制", "D": "DMA 方式要用到中断处理", "Answer": "B", "Explanation": "DMA 方式通常不用于键盘和鼠标的数据输入，因为这些设备要求 CPU 立即响应，无法等待 DMA 控制器控制数据传输。"}
{"ID": 3306, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "第一代计算机的特点是使用电子管作为逻辑元件，采用机器语言编程。", "Answer": true}
{"ID": 3307, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "PC存放下一条将要执行指令的地址。", "Answer": true}
{"ID": 3308, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "摩尔定律主要描述了集成电路上可容纳的晶体管数量每隔一定时间翻倍的现象。", "Answer": true}
{"ID": 3309, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "地址寄存器MAR的作用是用于寻址。", "Answer": true}
{"ID": 3310, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "冯·诺依曼机的基本工作方式是多指令多数据流方式。", "Answer": false}
{"ID": 3311, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "MAR和MDR的位数分别为地址码长度和存储字长。", "Answer": true}
{"ID": 3312, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "寄存器的存取速度最快，快于Cache和内存。", "Answer": true}
{"ID": 3313, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CPU的组成中，不包括存储器。", "Answer": true}
{"ID": 3314, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "存储字长是指存放在一个存储单元中的二进制代码组合。", "Answer": false}
{"ID": 3315, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "32 位微机是指该计算机所用 CPU 具有 32 个寄存器。", "Answer": false}
{"ID": 3316, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "当前设计高性能计算机的重要技术途径是采用并行处理技术。", "Answer": true, "Explanation": "提高 CPU 主频、扩大主存容量对性能的提升是有限度的。采用并行技术是实现高性能计算的重要途径，现今超级计算机均采用多处理器来增强并行处理能力。"}
{"ID": 3317, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "8421码1001对应的十进制数是9。", "Answer": true}
{"ID": 3318, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在使用补码表示法的8位机器数中，最小的负数是-128。", "Answer": true}
{"ID": 3319, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在浮点数运算中，尾数的规格化是指使尾数的第一位始终为1。", "Answer": true}
{"ID": 3320, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在定点数的表示中，使用反码表示法时，负数的表示方式是符号位取1，数值部分不变。", "Answer": false}
{"ID": 3321, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个使用补码表示法的8位机器数能表示的最小负整数是-128。", "Answer": true}
{"ID": 3322, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在8421码中，两个数字相加的和为11010时，经过修正后的正确结果为11000。", "Answer": false}
{"ID": 3323, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "对于一个使用反码表示法的8位机器数，其表示的最大正数是127。", "Answer": true}
{"ID": 3324, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在8421码中，数字0的正确表示是1。", "Answer": false}
{"ID": 3325, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在IEEE754标准中，规格化的长浮点数的尾数部分使用了23位二进制来表示。", "Answer": false}
{"ID": 3326, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个16位无符号二进制数的表示范围是0~65535。", "Answer": true}
{"ID": 3327, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "若补码为1.1101010，则原码为1.0010110。", "Answer": true, "Explanation": "若X为负数，则其补码转换成原码的规则是“符号位不变，数值位取反，末位加1”，即[X]原=0010101+1=0010110"}
{"ID": 3328, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "零的补码和移码表示相同", "Answer": false, "Explanation": "以机器字长5位为例，[0]补=00000，[0]移=2^4+0=10000，[0]≠[0]移，表示不相同，但在补码或移码中的表示形式是唯一的"}
{"ID": 3329, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "若寄存器内容为10000000，若它等于-0，则为原码。", "Answer": true, "Explanation": "值等于-0说明只能是原码或反码"}
{"ID": 3330, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "加法器采用并行进位的目的是为了保证加法器的可靠性。", "Answer": false, "Explanation": "并行进位可以提高加法器的运算速度。"}
{"ID": 3331, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "若采用双符号位，则两个正数相加产生溢出的特征时，双符号位为01。", "Answer": true, "Explanation": "采用双符号位时，第一符号位表示最终结果的符号，第二符号位表示运算结果是否溢出。若第二位和第一位符号相同，则未溢出；若不同，则溢出。若发生正溢出则双符号位为01，若发生负溢出，则双符号位为10。"}
{"ID": 3332, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "采用 IEEE 754 标准中的单精度浮点数格式表示数 45100000H 的值为 (+1.125)_{10}x2^{11}。", "Answer": true, "Explanation": "写成二进制表示为 0100 0101 0001 0000 0000 000 0000 0000，第一位为符号位，0表示正数，随后8位(float 型)1000 1010 是用移码表示的阶码，因此减去 0111 1111 后得十进制数11，而IEEE 754标准中单精度浮点数在阶码不为时隐1，因此尾数为(1.0010){B} =(1125){D},因此该数值为(+1.125)_{10}x2^11"}
{"ID": 3333, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "Cache、主存能与CPU直接交换信息，辅存通过主存与CPU交换信息。", "Answer": true}
{"ID": 3334, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在存储系统中，Cache与主存之间数据调动的特点是需要应用程序员手动进行数据调动。", "Answer": false}
{"ID": 3335, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "磁芯存储器属于半导体存储器。", "Answer": false}
{"ID": 3336, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "主存和Cache之间的数据调动特点是由硬件自动完成，对所有程序员透明。", "Answer": true}
{"ID": 3337, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "Cache的全相联映射方式的地址结构包括主存字块标记和Cache字块地址（行号）。", "Answer": false}
{"ID": 3338, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在存储器的分类中，串行访问存储器通常指的是顺序存取存储器。", "Answer": true}
{"ID": 3339, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在存储器的层次化结构中，Cache的主要目的是保存长期数据。", "Answer": false}
{"ID": 3340, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "掩膜式只读存储器MROM的主要特点是写入后任何人都无法改变其内容。", "Answer": true}
{"ID": 3341, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "片选线在半导体存储器中的作用是转换输入地址为存储器地址。", "Answer": false}
{"ID": 3342, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在存储器分层体系结构中，存储器从速度最快到最慢的排列顺序是寄存器、Cache、主存、辅存。", "Answer": true}
{"ID": 3343, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "SRAM的速度较快，但集成度稍低，而DRAM的速度稍慢，但集成度高。", "Answer": true}
{"ID": 3344, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "U盘属于主存类型的储器。", "Answer": false}
{"ID": 3345, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "某计算机系统，其操作系统保存于硬盘上，其内存储器应该采用 ROM。", "Answer": false}
{"ID": 3346, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "EPROM是可改写的，但不能作为随机存储器。", "Answer": true}
{"ID": 3347, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "4个16Kx8位的存储芯片可设计为8Kx16位的存储器容量。", "Answer": false}
{"ID": 3348, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "CPU访问由高速缓存、主存、硬盘构成的三级存储体系时发送的地址为主存物理地址。", "Answer": true}
{"ID": 3349, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "采用虚拟存储器的主要目的是提高主存储器的存取速度。", "Answer": false}
{"ID": 3350, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "多级存储系统是为了降低存储成本。", "Answer": true, "Explanation": "虚拟存储器中主存和辅存之间的数据调动是对应用级程序员透明的，CPU 可以直接与 Cache 交换信息，但与主存交换信息也可能需要经过 Cache。"}
{"ID": 3351, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "动态半导体存储器的特点是在工作中存储器内容会产生变化，并且一次完整的刷新过程需要占用两个存储周期。", "Answer": false, "Explanation": "动态半导体存储器利用电容存储电荷的特性记录信息，由于电容会放电，必须在电荷流失前对电容充电，即刷新。方法是每隔一定的时间，根据原存内容重新写入一遍，因此I 错误这里的读并不是把信息读入 CPU，也不是从 CPU 向主存存入信息，它只是把信息读出，通过-个刷新放大器后又重新存回存储单元，而刷新放大器是集成在 RAM 上的。因此，这里只进行了次访存，也就是占用一个存取周期，II、IV 正确，III 错误。"}
{"ID": 3352, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "该机主存最多需要64片512Kx8位的RAM芯片。", "Answer": false, "Explanation": "主存的总容量为512Kx8位=4M位，所需存储芯片数=(4M)/(512K)=128片。"}
{"ID": 3353, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "构成内存地址从90000H到CFFFFH的16Kx8位存储器，至少需要16片芯片。", "Answer": true, "Explanation": "地址范围为CFFFFH - 90000H + 1 = 40000H，即需要16片16Kx8位的存储芯片。"}
{"ID": 3354, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "当主存容量是Cache容量的4096倍、Cache被分为64个块，并且地址采用直接映射方式时，地址映射表的大小应为64x13bit。", "Answer": true, "Explanation": "直接映像方式下，标记阵列每行存储1个标记项，其中主存标记项为12位，需要64行。"}
{"ID": 3355, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "根据问题描述，逻辑空间共有8页，每页1024字节，因此逻辑地址由13位有效位组成。物理存储区有32块，所以物理地址至少由15位组成。", "Answer": true, "Explanation": "逻辑地址共13位，物理地址至少15位。"}
{"ID": 3356, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "为使虚拟存储系统有效地发挥其预期的作用，所运行程序应具有的特性是大小不应小于实际的内存容量。", "Answer": false, "Explanation": "虚拟存储系统（或虚拟内存）允许计算机运行大于实际物理内存的程序。虚拟内存通过将程序分为较小的块，并在需要时动态地将这些块从物理内存交换到存储设备（如硬盘）来实现这一点。因此，虚拟存储系统的主要优势之一就是允许运行的程序大小可以大于物理内存容量。"}
{"ID": 3357, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在三地址指令中，运算结果通常存储在第一个操作数地址。", "Answer": false}
{"ID": 3358, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "CISC体系结构的一个特点是所有指令在一个周期内完成。", "Answer": false}
{"ID": 3359, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "CISC体系结构中的指令系统的特点是指令字长固定。", "Answer": false}
{"ID": 3360, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "RISC体系结构优化了编译器生成的代码效率的性能。", "Answer": true}
{"ID": 3361, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CISC体系结构中，通常没有通用寄存器。", "Answer": false}
{"ID": 3362, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "假定指令地址码所给出的是操作数的有效地址，则该指令采用直接寻址。", "Answer": true}
{"ID": 3363, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "指令系统是一台机器硬件能执行的指令全体。", "Answer": false, "Explanation": "指令系统是计算机硬件的语言系统，和机器语言有关。"}
{"ID": 3364, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在指令格式中，采用扩展操作码设计方案的目的是保持指令字长度不变而增加寻址空间。", "Answer": false, "Explanation": "扩展操作码并未改变指令的长度，而是使操作码长度随地址码的减少而增加。"}
{"ID": 3365, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "变址间址寻址方式的操作数的有效地址 EA 是 (X)+(A)。", "Answer": false, "Explanation": "变址寻址的有效地址是(X) + A，再进行间址，即把(X) + A 中取出的内容作为真实地址EA，即 EA=((X)+A)。寄存器中的内容和指令地址码相加得到的是操作数的地址码。"}
{"ID": 3366, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "指令寻址方式有顺序和跳跃两种，采用跳跃寻址方式可以实现程序浮动。", "Answer": false, "Explanation": "跳跃寻址通过转移类指令(如相对寻址)来实现，可用来实现程序的条件或无条件转移。"}
{"ID": 3367, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "特权指令通常仅用于实现系统软件，这类指令一般不提供给用户。", "Answer": true, "Explanation": "特权指令通常仅用于实现系统软件，一般不提供给用户。"}
{"ID": 3368, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "采用RISC技术后，计算机的体系结构又恢复到了早期的情况。", "Answer": false, "Explanation": "RISC 选择一些常用的寄存器型指令，并不是为了兼容 CISC，RISC 也不可能兼容 CISC，A 错误。RISC 只是 CPU 的结构发生变化，基本不影响整个计算机的结构，并且即使是采用 RISC 技术的 CPU，其架构也不可能像早期一样简单，B 错误。RISC 的指令功能简单，通过简单指令的组合来实现复杂指令的功能，C 错误，但 RISC 的主要目标是减少指令数是正确的。"}
{"ID": 3369, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "控制相关（控制冲突）通常是由前一条指令未执行完造成的。", "Answer": false}
{"ID": 3370, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在指令流水线中，一条指令的执行阶段和下一条指令的取指阶段同时进行的执行方式称为一次重叠执行方式。", "Answer": true}
{"ID": 3371, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "内存储器、输入设备和输出设备在CPU的控制器结构中通过控制总线接收地址信息。", "Answer": false}
{"ID": 3372, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "硬布线控制器的主要特点是由复杂的组合逻辑门电路和一些触发器构成。", "Answer": true}
{"ID": 3373, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CPU中，指令寄存器(IR)的主要作用是存储当前正在执行的指令。", "Answer": true}
{"ID": 3374, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "微程序设计的基本思想是将每一条机器指令编写成一个微程序。", "Answer": true}
{"ID": 3375, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "CPU在指令执行过程中，间址周期的主要任务是取操作数有效地址。", "Answer": true}
{"ID": 3376, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "程序计数器(PC)属于控制器。", "Answer": true}
{"ID": 3377, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "程序计数器的位数取决于指令字长。", "Answer": false}
{"ID": 3378, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "CPU中的通用寄存器可以存放数据和地址，还可以替代指令寄存器。", "Answer": false}
{"ID": 3379, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "程序状态字寄存器在计算机系统中表征程序和机器运行状态的部件。", "Answer": true}
{"ID": 3380, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "间址周期结束时，CPU 内寄存器 MDR中的内容为指令。", "Answer": false}
{"ID": 3381, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机工作的最小时间周期是时钟周期。", "Answer": true}
{"ID": 3382, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在一条无条件跳转指令周期内，程序计数器(PC)的值被修改了1次。", "Answer": false}
{"ID": 3383, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "由于 CPU 内部操作的速度较快，而 CPU 访问一次存储器的时间较长，因此机器周期通常由存取周期来确定。", "Answer": true}
{"ID": 3384, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据通路可区分存储单元中存放的是指令还是数据。", "Answer": false}
{"ID": 3385, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "取指令操作是控制器固有的功能，不需要在操作码控制下进行。", "Answer": true}
{"ID": 3386, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在微程序控制器中，控制部件向执行部件发出的某个控制信号称为微指令。", "Answer": false}
{"ID": 3387, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "采用CPU内部总线的数据通路与不采用CPU内部总线的数据通路相比，后者的数据冲突问题较严重。", "Answer": false, "Explanation": "采用 CPU 内部总线方式的数据通路的特点: 结构简单，实现容易，性能较低，存在较多的冲突现象; 不采用 CPU 内部总线方式的数据通路的特点: 结构复杂，硬件量大，不易实现，性能高，基本不存在数据冲突现象。"}
{"ID": 3388, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "该流水线的加速比为3.4，其中指令由取指、分析、执行 3 个子部件完成，每个子部件的时间均为 t，且采用常规标量单流水线处理机，连续执行 8 条指令。", "Answer": false, "Explanation": "采用流水线时，第一条指令完成的时间是 3t，以后每经过一段时间就有一条指令完成，因此共需要的时间为 3t + (8 - 1)t = 10t；而不采用流水线时，完成 8 条指令总共需要的时间为 8 * 3t = 24t，所以流水线的加速比 = 24t / 10t = 2.4。"}
{"ID": 3389, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在分支指令加入若于空操作可以避免控制冒险。", "Answer": false, "Explanation": "采用转发(旁路)技术可以解决数据相关，而不是控制相关。"}
{"ID": 3390, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "多核 CPU 的各核心完全对称，拥有各自的 Cache。", "Answer": false, "Explanation": "多核 CPU 的各核心可以拥有独立的 Cache，C 正确。任何程序都可以同时在多个核心上运行需要程序支持多线程，并发才能发挥多核的优势，B 错误。多任务操作系统不仅可以在多核 CPU 上运行，也可以在单核 CPU 上运行，D 错误。"}
{"ID": 3391, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "USB总线是一种总线标准，用于连接外部设备的I/O总线标准，并具有即插即用、热插拔等优点。", "Answer": true}
{"ID": 3392, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "SATA是基于行业标准的串行硬件驱动器接口，用于硬盘接口规范。", "Answer": true}
{"ID": 3393, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "独立请求方式是一种总线仲裁方式，不需要中央仲裁器，每个潜在的主模块都有自己的仲裁号和仲裁器。", "Answer": false}
{"ID": 3394, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "EISA总线是最早出现的微型计算机的系统总线标准，应用在IBM的AT机上，对ISA完全兼容。", "Answer": true}
{"ID": 3395, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "SATA是一种总线标准，用于连接计算机系统之间或连接计算机系统与其他系统（如远程通信设备、测试设备）之间信息传送。", "Answer": false}
{"ID": 3396, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "SCSI是一种高性能的32位或64位总线标准，用于连接高度集成的外围部件、扩充插板和处理器/存储器系统。", "Answer": false}
{"ID": 3397, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据总线是用于连接计算机内部寄存器与寄存器之间、寄存器与ALU之间的公共连接线的总线标准。", "Answer": true}
{"ID": 3398, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在计算机系统中，地址总线用于传输主存地址信息，指出数据总线上的源数据或目的数据所在的主存单元或I/O接口的地址。", "Answer": true}
{"ID": 3399, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "系统总线中地址线的功能是选择进行信息传输的设备。", "Answer": false}
{"ID": 3400, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "并串行传输方式是不同信号在同一条信号线上分时传输的方式。", "Answer": false}
{"ID": 3401, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在32位总线系统中，时钟频率为500MHz，传送一个32位字需要5个时钟周期，则该总线的数据传输率是800MB/s。", "Answer": false, "Explanation": "总线带宽 = 总线宽度 X 总线频率，计算得到数据传输率为 400MB/s。"}
{"ID": 3402, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "微机中控制总线上完整传输的信号包括存储器和 IO 设备的地址码、所有存储器和 I/O 设备的时序信号与控制信号，以及来自 I/O 设备和存储器的响应信号。", "Answer": false, "Explanation": "控制总线上传输的信号包括时序信号、I/O 设备和存储器的响应信号。"}
{"ID": 3403, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "同步通信之所以比异步通信具有较高的传输速率，是因为同步通信不需要应答信号且总线长度较短。", "Answer": false, "Explanation": "综合多个因素。"}
{"ID": 3404, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "I/O控制方式中，程序查询方式需要CPU通过程序不断查询I/O设备是否已做好准备，然后控制I/O设备与主机交换信息。", "Answer": true}
{"ID": 3405, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "I/O接口的功能中，用于实现地址译码和设备选择的是进行地址译码和设备选择。", "Answer": true}
{"ID": 3406, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "DMA方式和中断方式的区别之一是，中断方式不占用CPU资源，而DMA方式占用CPU资源。", "Answer": true}
{"ID": 3407, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在I/O接口中，实现数据格式的转换和传送控制命令的发送的部分是内部接口。", "Answer": true}
{"ID": 3408, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在DMA方式中，DMA请求触发器会在CPU执行中断服务程序时置位。", "Answer": false}
{"ID": 3409, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "中断服务程序中的中断返回指令通常用于使CPU返回到原程序的断点处继续执行。()", "Answer": true}
{"ID": 3410, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在I/O接口的编址方式中，统一编址方式将I/O端口当做存储器的单元进行地址分配。", "Answer": true}
{"ID": 3411, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在DMA方式中，DMA请求触发器会在CPU执行中断服务程序时清零。", "Answer": false}
{"ID": 3412, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "I/O 指令的格式和通用指令格式相同。", "Answer": true}
{"ID": 3413, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "通道程序存放在主存中。", "Answer": true}
{"ID": 3414, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "显示汉字采用点阵字库，每个汉字用 16x16 的点阵表示，那么 7500 个汉字的字库容量是 1MB。", "Answer": false}
{"ID": 3415, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "只有在具有专门IO指令的计算机中，I/O设备才可以单独编址。", "Answer": true, "Explanation": "在独立编址方式下，CPU 需要使用专门的输入/输出指令来访问 I/O 设备。"}
{"ID": 3416, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在统一编址情况下，对于I/O设备而言，其对应的IO地址可以随意在地址的任何地方。", "Answer": true, "Explanation": "在统一编址方式下，/IO 地址应当具有一定的规则和固定性，不能随意分配。"}
{"ID": 3417, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "设置中断排队判优逻辑的目的是使同时提出的请求中的优先级别最高者得到及时响应。", "Answer": true, "Explanation": "中断排队判优逻辑的目的是确保同时提出的请求中的优先级最高者能够得到及时响应。"}
{"ID": 3418, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在DMA传送方式中，由DMA控制器发出DMA请求，在传送期间总线控制权由DMA控制器掌握。", "Answer": false, "Explanation": "DMA 传送方式中，外部设备向 DMA 控制器发出 DMA 请求信号，然后由 DMA 控制器向 CPU 发出总线请求信号。"}
{"ID": 3419, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "高速缓存Cache通常存放在哪里？()", "Answer": "CPU"}
{"ID": 3420, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "存放欲执行指令的寄存器是 ( ).", "Answer": "IR"}
{"ID": 3421, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "若一个8位的计算机系统以 16 位来表示地址，则该计算机系统有 ( )个地址空间", "Answer": "65536"}
{"ID": 3422, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "( )是程序运行时的存储位置，包括所需的数据。", "Answer": "主存"}
{"ID": 3423, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在 CPU 的寄存器中，( ) 对用户是完全透明的。", "Answer": "指令寄存器"}
{"ID": 3424, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "从用户观点看，评价计算机系统性能的综合参数是 ( ).", "Answer": "吞吐率"}
{"ID": 3425, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "二进制数1101.011转换为八进制数是多少？()", "Answer": "15.3"}
{"ID": 3426, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在海明（汉明）校验码中，若信息位数为4位，至少需要多少位()校验位？", "Answer": "3位"}
{"ID": 3427, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "若一个浮点数的指数部分使用了8位二进制表示，那么它可以表示的最大指数值是多少？()", "Answer": "255"}
{"ID": 3428, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在IEEE754标准的规格化长浮点数中，指数部分使用了多少位二进制表示？()", "Answer": "11位"}
{"ID": 3429, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在补码表示法中，一个8位机器数的真值零的补码表示是什么？()", "Answer": "0"}
{"ID": 3430, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "若寄存器内容为 11111111，若它等于+127，则为( )", "Answer": "移码"}
{"ID": 3431, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "若寄存器内容为00000000，若它等于-128，则为()", "Answer": "移码"}
{"ID": 3432, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在计算机中，通常用来表示主存地址的是 ( )。", "Answer": "无符号数"}
{"ID": 3433, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "浮点数的IEEE 754 标准对尾数编码采用的是 ( )", "Answer": "原码"}
{"ID": 3434, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "两个数7E5H和4D3H相加，得( )", "Answer": "CB8H", "Explanation": "在十六进制数的加减法中，逢十六进一，因此有7E5H+4D3H=CB8H"}
{"ID": 3435, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定一个十进制数为-66，按补码形式存放在一个8位寄存器中，该寄存器的内容用十六进制表示为 ( )。", "Answer": "BEH", "Explanation": "-66用二进制表示，[x]原=11000010，有[x]补=10111110=BEH"}
{"ID": 3436, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "设机器数采用补码表示(含1位符号位)，若寄存器内容为9BH，则对应的十进制数为()。", "Answer": "-101", "Explanation": "9BH=(1001 1011)2，最高位的1表示负数，因此其真值 (11100101)2=-(64+32+4+1)=-101"}
{"ID": 3437, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "若寄存器内容为11111111，若它等于-128，则为（）", "Answer": "补码", "Explanation": "这里寄存器长度为8，[-1]补 =[10000001]补=1111111l."}
{"ID": 3438, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "若二进制定点小数真值是-0.1101，机器表示为 1.0010，则为( )", "Answer": "反码", "Explanation": "对应的原码表示为 1.1101，补码表示为1.0011，反码表示为'1.0010，移码通常用于表示阶码，不用来表示定点小数."}
{"ID": 3439, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "ALU作为运算器的核心部件，其属于什么类型的电路？", "Answer": "组合逻辑电路", "Explanation": "ALU由组合逻辑电路构成，其最基本的部件是并行加法器。"}
{"ID": 3440, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "实现 N 位(不包括符号位)补码一位乘时，乘积为 ( )位。", "Answer": "2N+1", "Explanation": "补码一位乘法运算过程中一共向右移位 N 次，加上原先的 N 位，一共是 2N 位数值位。因乘积结果需加上符号位，因此共 2N+1 位。"}
{"ID": 3441, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "按照IEEE 754 标准规定的32位单精度浮点数41A4C000H对应的十进制数是( )", "Answer": "20.59375", "Explanation": "在 IEEE754 单精度浮点数中，最高位为数符位，其后是 8阶码，以2为底，用移码表示，阶码的偏置值为 127;其后 23位是尾数数值位。对于规格化的进制浮点数，数值的最高位总是“1”，为了能使尾数多表示一位有效值，将这个“1”隐藏，因此尾数数值实际上是 24位。隐藏的“1”是一位整数。在浮点格式中表示出来的 23 位尾数是纯小数，用原码表示41A4C000H 写成二进制为0100 0001 1010 0100 1100 0000 0000 0000，第一位为符号位0，表示是正数。之后的 8位 1000 0011 表示阶码，真值为(100)_{B}，即4。剩下的是隐了最高1的尾数，故而为 1.01001001100 0000 0000 0000，数值左移四位后整数部分 10100 表示为20"}
{"ID": 3442, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在存储器中，易失性存储器是指什么类型的存储器？()", "Answer": "RAM"}
{"ID": 3443, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "某一 SRAM 芯片，其容量为 1024x8 位，除电源和接地端外，该芯片的引脚的最小数目为( )。", "Answer": "21"}
{"ID": 3444, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定用若千 16Kx8 位的存储芯片组成一个 64Kx8 位的存储器，芯片各单元采用交叉编址方式，则地址 BFFFH 所在的芯片的最小地址为", "Answer": "0003H", "Explanation": "交叉编址方式下，各单元的最小地址分别为00、01、10、11，对应最小地址为0000H、0001H、0002H、0003H。地址BFFFH的最低两位为11，对应最小地址为0003H。"}
{"ID": 3445, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "80386DX是32位系统，以4B为编址单位，当在该系统中用 8KB(8Kx8位)的存储 芯片构造32KB的存储体时，应完成存储器的 ( )设计", "Answer": "位扩展", "Explanation": "以4B为编址单位，要扩展到32KB，只需进行位扩展。"}
{"ID": 3446, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "在高速缓存系统中，主存容量为12MB，Cache容量为400KB，则该存储系统的容量为( )", "Answer": "12MB", "Explanation": "各层次的存储系统不是孤立工作的，不是简单相加。"}
{"ID": 3447, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "有效容量为128KB的Cache，每块16B，采用8路组相联。字节地址为1234567H的单元调入该Cache，则其Tag应为( )", "Answer": "048DH", "Explanation": "标记字段对应高14位，即048DH。"}
{"ID": 3448, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "某指令系统有 200 条指，对操作码采用固定长度二进制编码，最少需要用( )位", "Answer": "8"}
{"ID": 3449, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "() 便于处理数组问题。", "Answer": "变址寻址"}
{"ID": 3450, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "能够完成两个数的算术运算的单地址指令，地址码指明一个操作数，另一个操作数来自()方式", "Answer": "隐含寻址", "Explanation": "单地址指令中只有一个地址码，在完成两个操作数的算术运算时，一个操作数由地址码指定，另一个操作数通常存放在累加寄存器 (ACC)中，属于隐含寻址。"}
{"ID": 3451, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "设机器字长为32位，一个容量为 16MB 的存储器，CPU 按半字寻址，其寻址单元数是()", "Answer": "2^23", "Explanation": "16MB 等于 2^24 个字节，CPU 按半字 (16位)寻址，相当于有 8M (= 2^23) 个存储单元。"}
{"ID": 3452, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个计算机系统采用 32 位单字长指令，地址码为 12 位，若定义了 250 条二地址指令，则还可以有 ( )条单地址指令。", "Answer": "24K", "Explanation": "地址码为12位，二地址指的操作码长度为32-12-12=8位，已定义了250 条二地址指令，2^8-250=6，即可以设计出单地址指令 6x2^12 = 24K 条。"}
{"ID": 3453, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在微指令的编码方式中，哪种方式的微指令定义并执行几种并行的基本操作？()", "Answer": "水平型"}
{"ID": 3454, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "高级语言编写的程序在执行前必须转换成什么形式？()", "Answer": "机器语言"}
{"ID": 3455, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在微程序控制器中，控制存储器(CM)的作用是什么？()", "Answer": "存储微程序"}
{"ID": 3456, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在流水线技术中，流水线段之间的数据传递通常通过什么方式实现？()", "Answer": "数据总线"}
{"ID": 3457, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在超流水线技术中，一个时钟周期内一个功能部件使用多少次？()", "Answer": "多次"}
{"ID": 3458, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "控制器部件从数据总线接收什么信息？()", "Answer": "控制信号"}
{"ID": 3459, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CPU中，控制存储器(CM)的作用是什么？()", "Answer": "存储微程序"}
{"ID": 3460, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在 CPU中，跟踪后继指令地址的寄存器是 ( )。", "Answer": "程序计数器"}
{"ID": 3461, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "条件转移指令执行时所依据的条件来自 ( )。", "Answer": "标志寄存器"}
{"ID": 3462, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "指令寄存器的位数取决于 ( )。", "Answer": "指令字长"}
{"ID": 3463, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "CPU中通用寄存器的位数取决于 ( )。", "Answer": "机器字长"}
{"ID": 3464, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "采用 DMA 方式传递数据时，每传送一个数据就要占用 ( )。", "Answer": "存取周期"}
{"ID": 3465, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "微程序控制存储器属于 ( )的一部分。", "Answer": "CPU"}
{"ID": 3466, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "某带中断的计算机指令系统共有 101 种操作，采用微程序控制方式时，控制存储器中相应最少有 ( )个微程序。", "Answer": "103"}
{"ID": 3467, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "具有一个控制部件和多个处理单元的计算机系统属于 ( ) 结构。", "Answer": "SIMD"}
{"ID": 3468, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准专为高度集成的外围部件、扩充插板和处理器/存储器系统而设计的互联机制，支持即插即用，与处理器时钟频率无关？()", "Answer": "PCI总线"}
{"ID": 3469, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准专用于连接主存和图形存储器，为传输视频和三维图形数据提供了解决方案？()", "Answer": "AGP"}
{"ID": 3470, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在总线操作的四个阶段中，哪个阶段主模块通过总线发出本次要访问的从模块的地址及有关命令？()", "Answer": "寻址阶段"}
{"ID": 3471, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准是一种连接外部设备的I/O总线标准，具有较高的传输速率，属于设备总线？()", "Answer": "USB总线"}
{"ID": 3472, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在计算机总线中，哪个总线用来传输控制信息，包括CPU送出的控制命令和主存（或外设）返回CPU的反馈信号？()", "Answer": "控制总线"}
{"ID": 3473, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在总线仲裁中，哪种方式选择一个主设备优先获得总线控制权，离总线控制器越近的部件其优先级越高？()", "Answer": "链式查询方式"}
{"ID": 3474, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准专用于连接硬盘和光驱，通过IDE接口与主板连接？()", "Answer": "IDE总线"}
{"ID": 3475, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准是一种用于传输视频和三维图形数据的专用接口标准，连接主存和图形存储器？()", "Answer": "AGP"}
{"ID": 3476, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准用于传输音频和声音数据，连接到计算机系统的音频设备？()", "Answer": "AC'97总线"}
{"ID": 3477, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种总线标准用于连接外部设备的I/O总线标准，具有即插即用、热插拔等优点，有很强的连接能力？()", "Answer": "USB总线"}
{"ID": 3478, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在RAID中，哪种方案提供了最高的容错能力，可以随时替换受损的磁盘而不损失数据？()", "Answer": "RAID1"}
{"ID": 3479, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在计算机中，用于存放I/O设备传来的数据的寄存器被称为什么？()", "Answer": "数据缓冲寄存器"}
{"ID": 3480, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在I/O接口的编址方式中，哪种方式不需要CPU设置专门的输入/输出指令来访问端口？()", "Answer": "统一编址方式"}
{"ID": 3481, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在计算机中，哪种I/O控制方式通过只在I/O设备准备就绪并向CPU发出中断请求时才予以响应？()", "Answer": "程序中断方式"}
{"ID": 3482, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在I/O接口的类型中，哪一种接口用于实现主机和外设的通信联络控制？()", "Answer": "外部接口"}
{"ID": 3483, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "DMA方式中，数据传送完毕后通常会触发什么机构提出中断请求？()", "Answer": "中断服务程序"}
{"ID": 3484, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "中断服务程序的最后一条指令通常是什么？()", "Answer": "中断返回指令"}
{"ID": 3485, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在RAID中，哪种方案采用块交叉奇偶校验来提高数据容错性？()", "Answer": "RAID4"}
{"ID": 3486, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在中断响应周期中，由 ()将允许中断触发器置", "Answer": "中断隐指令"}
{"ID": 3487, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "CPU响应 DMA 请求的条件是当前( )执行完", "Answer": "机器周期", "Explanation": "CPU 在每个机器周期结束后可以响应 DMA 请求。"}
{"ID": 3488, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是存储程序原理？按此原理，计算机应具有哪几大功能?", "Answer": "存储程序是指将指令以代码的形式事先输入计算机主存储器，然后按其在存储器中的首地址执行程序的第一条指令，以后就按该程序的规定顺序执行其他指令，直至程序执行结束。计算机按照此原理应该具有 5 大功能：数据传送功能、数据存储功能、数据处理功能、操作控制功能、操作判断功能。"}
{"ID": 3489, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "用一台40MHz的处理器执行标准测试程序，它所包含的混合指令数和响应所需的时钟周期为：指令类型算数和逻辑cpi为1，指令混合比60%；指令类型转移cpi为4，指令混合比12%；指令类型高速缓存命中的访存cpi为2，指令混合比18%；告诉缓存失效的访存cpi8，指令混合比10%。求有效的CPI、MIPS速率和程序的执行时间(Ⅰ为程序的指令条数).\n", "Answer": "CPI即执行一条指令所需的时钟周期数。本标准测试程序共包含4种指令，则CPI就是这4种指令的数学期望，即：CPI = 1×60%+2×18%+4×12%+8×10%=2.24。MIPS即每秒执行的百万条指令数。已知处理器时钟频率为40MHz,即每秒包含40M个时钟周期，因此MIPS =40/CPI= 40/2.24= 17.9。程序的执行时间T= CPI×T_IC*I，其中T_IC是一个CPU时钟的时间长度，是CPU时钟频率f的倒数，因此有T=CPIxT_ICxI =CPI×(1/f)×I=5.6×10-8×I秒。本题中的Ⅰ对于解题应无作用，程序的执行时间应是指令的期望即CPI乘以时钟的时间长度，即T=CPI×T_IC."}
{"ID": 3490, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "微机A和B是采用不同主频的CPU芯片，片内逻辑电路完全相同。若A机的CPU主频为8MHz，B机为12MHz，则A机的CPU时钟周期为多少?2）若A机的平均指令执行速度为0.4MIPS，则A机的平均指令周期为多少?", "Answer": "A机的CPU主频为8MHz，所以A机的CPU时钟周期=1/8MHz=0.125us."}
{"ID": 3491, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "微机A和B是采用不同主频的CPU芯片，片内逻辑电路完全相同。若A机的平均指令执行速度为0.4MIPS，则A机的平均指令周期为多少?", "Answer": "A机的平均指令周期= 1/0.4MIPS= 2.5us."}
{"ID": 3492, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Overview", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "微机A和B是采用不同主频的CPU芯片，片内逻辑电路完全相同。B机的平均指令执行速度为多少?", "Answer": "A机平均每条指令的时钟周期数=2.5us/0.125us= 20。因微机A和B的片内逻辑电路完全相同，所以B机平均每条指令的时钟周期数也为20。由于B机的CPU主频为12MHz，所以B机的CPU时钟周期=1/12MHz= 1/12us。B机的平均指令周期=20×(1/12) - 5/3us。B机的平均指令执行速度=1/(5/3)us = 0.6MIPS。"}
{"ID": 3493, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是浮点数的溢出？什么情况下发生上溢出?什么情况下发生下溢出?", "Answer": "因微机A和B的片内逻辑电路完全相同，所以B机平均每条指令的时钟周期数也为20。由于B机的CPU主频为12MHz，所以B机的CPU时钟周期=1/12MHz= 1/12us。机的平均指令周期=20×(1/12) - 5/3us。"}
{"ID": 3494, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知32位寄存器Rl中存放的变量x的机器码为8000 0004H,请问:当x是unsigned int类型时，x的真值是多少? x/2的真值是多少?x/2存放在R1中的机器码是什么?2x的真值是多少?2x存放在Rl中的机器码是什么?", "Answer": "对于无符号整数，所有二进制位均为数值位。x的真值为2^31+2^2.乘2和除2，相当于无符号数的左移和右移运算。x/2的真值为2^30+2，存放在R1中的机器码是4000 0002H。2x的真值为2^32+2^3，发生溢出，存放在R1中的机器码是0000 0008H。"}
{"ID": 3495, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知32位寄存器Rl中存放的变量x的机器码为8000 0004H,请问:当x是int类型时，乘除法采用移位操作，x的真值是多少? x/2的真值是多少? x/2存放在R1中的机器码是什么?2x的真值是多少?2x存放在R1中的机器码是什么?", "Answer": "对于有符号数（补码)，最高位为符号位。8000 0004H对应二进制数的最高位为 1，为负数，真值为-0111 1111 1111 1111 1111 1111 1111 1100，即十进制的-(2^31-2^3)。乘2和除2，相当于补码的左移和右移运算。x/2的真值为-(2^30-2)，存放在R1中的机器码是C000 0002H。2x的真值为-(2^32-2^3)，发生溢出，存放在R1中的机器码是0000 0008H。"}
{"ID": 3496, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "对下列的IEEE 754单精度数值，解释它们所表示的是哪种数字类型（规格化数、非规格化数、无穷大、0 )。当它们表示某个具体数值时，请给出该数值：0b0000 0000 0000 0000 0000 0000 0000 0000", "Answer": "由于该数的阶码字段内容为0，符号位为0，尾数字段内容也为0，所以它表示IEEE浮点格式的+0。"}
{"ID": 3497, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "对下列的IEEE 754单精度数值，解释它们所表示的是哪种数字类型（规格化数、非规格化数、无穷大、0 )。当它们表示某个具体数值时，请给出该数值：0b0100 0010 0100 0000 0000 0000 0000 0000", "Answer": "该数的阶码字段内容为132，尾数字段内容为100 0000 0000 0000 0000 0000，由于阶码字段的内容既不全部为0，也不全部为1，所以它表示一个规格化数，其实际值为(1.1)_2×2^5=48。"}
{"ID": 3498, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "对下列的IEEE 754单精度数值，解释它们所表示的是哪种数字类型（规格化数、非规格化数、无穷大、0 )。当它们表示某个具体数值时，请给出该数值：0b1000 0000 0100 0000 0000 0000 0000 0000", "Answer": "由于该数的阶码字段内容全部为0，且尾数字段内容不全部为0，所以它表示一个非规格化数，其实际值为(-0.1)_2×2^-126 =-2^-127=-5.877×10^-39(表示成4位有效数字形式)。"}
{"ID": 3499, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "对下列的IEEE 754单精度数值，解释它们所表示的是哪种数字类型（规格化数、非规格化数、无穷大、0 )。当它们表示某个具体数值时，请给出该数值：0b1111 1111 1000 0000 0000 0000 0000 0000", "Answer": "由于该数的阶码字段内容全部为1，且尾数字段内容为0，符号位为1，所以它表示负无穷大。"}
{"ID": 3500, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Data Representation and Operation", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "两个规格化浮点数进行加减法运算，最后对结果规格化时，能否确定需要右规的次数？能否确定需要左规的次数？", "Answer": "B机的平均指令执行速度=1/(5/3)us = 0.6MIPS。"}
{"ID": 3501, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "假定某处理器可通过软件对高速缓存设置不同的写策略，若处理器主要运行包含大量存储器写操作的数据访问密集型应用，应设置成什么策略?为什么?", "Answer": "采用Write Back 策略较好，可减少访存次数。"}
{"ID": 3502, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "假定某处理器可通过软件对高速缓存设置不同的写策略，若处理器主要运行包含大量存储器写操作的数据访问密集型应用同时但安全性要求高得多，不允许有任何数据不一致的情况发生，应设置成什么策略?为什么?", "Answer": "采用Write Through 策略较好，能保证数据的一致性。"}
{"ID": 3503, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某个两级存储器系统的平均访问时间为 12ns，该存储器系统中顶层存储器的命中率为90%，访问时间是 5ns，该存储器系统中底层存储器的访问时间是多少(假设采用同时访问两级存储器的方式)?", "Answer": "设底层存储器访问时间为 T，则有 12ns=(0.90x5ns)+(0.10xT)，求得T=75ns。"}
{"ID": 3504, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "CPU执行一段程序时，Cache 完成存取的次数为1900，主存完成存取的次数为100，已知Cache 存取周期为 50ns，主存存取周期为250ns。设主存与Cache同时访问。问Cache/主存系统的效率是多少。", "Answer": "命中率H =N_c (N_c+ N_m)= 1900/(1900+100)=0.95。主存访问时间与Cache 访问时间的倍率r=T_m/T_c。= 250ns/50ns = 5 ;Cache 主存系统的效率e=访问Cache的时间/平均访存时间。访问效率e= 1/[H+(1 - H)r]= 1/[0.95+(1-0.95)×5]=83.3%。"}
{"ID": 3505, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "CPU执行一段程序时，Cache 完成存取的次数为1900，主存完成存取的次数为100，已知Cache 存取周期为 50ns，主存存取周期为250ns。设主存与Cache同时访问。问平均访问时间是多少。", "Answer": "平均访问时间T_a=T_c/e = 50 ns/0.833= 60ns 。"}
{"ID": 3506, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在显示适配器中，用于存放显示信息的存储器称为刷新存储器，它的重要性能指标是带宽。具体工作中，显示适配器的多个功能部分要争用刷新存储器的带宽。设总带宽50%用于刷新屏幕，保留50%的带宽用于其他非刷新功能，且采用分辨率为1024×768像素、颜色深度为3B、刷新频率为72Hz的工作方式。为达到这样高的刷新存储器带宽，应采取何种技术措施?", "Answer": "要提高刷新存储器带宽，可采用以下技术:采用高速 DRAM芯片，采用多体交叉存储结构;刷新存储器至显示控制器的内部总线宽度加倍:采用双端口存储器将刷新端口和更新端口分开。"}
{"ID": 3507, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个四体并行交又存储器，每个模块容量是64K×32位，存取周期为200ns，在一个存取周期中，存储器能向CPU提供多少位二进制信息?", "Answer": "一个存取周期，四体并行交叉存储器可取32位×4= 128位，其中32位为总线宽度，4为交叉存储器内的存储体个数。"}
{"ID": 3508, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Storage System", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个四体并行交又存储器，每个模块容量是64K×32位，存取周期为200ns，若存取周期为400ns，则在0.1us内每个体可向CPU提供32位二进制信息，该说法是否正确，为什么。", "Answer": "该说法不正确。因为在0.1us内整个存储器可向CPU提供 32位二进制信息，但每个存储体必须经过400ns才能向CPU提供32位二进制信息。"}
{"ID": 3509, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Instruction System", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个处理器中共有32个寄存器，使用16位立即数，其指令系统结构中共有142条指令。在某个给定的程序中，20%的指令带有一个输入寄存器和一个输出寄存器;30%的指令带有两个输入寄存器和一个输出寄存器;25%的指令带有一个输入寄存器、一个输出寄存器、一个立即数寄存器;其余25%的指令带有一个立即数输入寄存器和一个输出寄存器。与使用定长指令集编码相比，当采用变长指令集编码时，该程序能够少占用多少存储器空间?", "Answer": "由于变长指令最长的长度为40位，所以定长指令编码每条指令的长度均为40位。而采用变长编码，将各个指令长度和其概率相乘，得出平均长度为30位。所以该程序中，变长编码能比定长编码少占用25%的存储空间。"}
{"ID": 3510, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "CPU中有哪些专用寄存器?", "Answer": "CPU中的专用寄存器有程序计数器（PC)、指令寄存器（IR)、存储器数据寄存器(MDR)、存储器地址寄存器（MAR）和程序状态字寄存器（PSW)。"}
{"ID": 3511, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Central Processing Unit", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "中断周期之前是CPU的什么工作周期?", "Answer": "中断周期之前是执行周期。"}
{"ID": 3512, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在异步串行传输方式下，起始位为1位，数据位为7位，偶校验位为1位，停止位为 1位，假设每秒传输 1200 比特，试问有效数据传输率为多少?", "Answer": "在这样的一个数据帧中，有效数据位是7位，传输过程中发送的代码位共有1+7+1+1=10所以有效数据传输率为 1200x7/(1+7+1+1)840b/s。"}
{"ID": 3513, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某总线的时钟频率为66MHz，在一个64位总线中，总线数据传输的周期是7个时钟周期传输6个字的数据块。总线的数据传输率是多少?", "Answer": "总线周期为7个时钟周期，总线频率为66/7MHz。总线在一个完整的操作周期中传输了一个数据块，总线在一个周期内传输的数据量为64bit/8×6=48B，所以总线的宽度为48B，传输率为48B×66/7MHz=452.6MB/s。"}
{"ID": 3514, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Bus", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某总线的时钟频率为66MHz，在一个64位总线中，总线数据传输的周期是7个时钟周期传输6个字的数据块。若不改变数据块的大小，而将时钟频率减半，这时总线的数据传输率是多少?", "Answer": "时钟频率减半时的总线频率为(66/7)/2MHz，因数据块大小不变，因此总线宽度仍为48B，传输率为48B*33/7MHz= 226.3MB/s。"}
{"ID": 3515, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个完整的指令周期包括哪些CPU工作周期?", "Answer": "一个完整的指令周期包括取指周期、间址周期、执行周期和中断周期。其中取指周期和执行周期是每条指令均有的。"}
{"ID": 3516, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "中断周期之后是CPU的什么工作周期?", "Answer": "中断周期之后是下一条指令的取指周期。"}
{"ID": 3517, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "DMA周期前和DMA周期后各是CPU的什么工作周期?", "Answer": "DMA周期前可以是取指周期、间址周期、执行周期或中断周期，DMA周期后也可以是取指周期、间址周期、执行周期或中断周期。总之DMA周期前后都是机器周期。"}
{"ID": 3518, "Split": "Test", "Domain": "Computer Organization", "SubDomain": "Input/Output System", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在 DMA 方式下，主存和 I/O设备之间有一条物理通路相连吗?", "Answer": "在直接存储器存取（DMA）方式下，主存和I/O设备之间确实存在一条物理通路。这条通路允许I/O设备直接与主存交换数据，而不需要CPU的介入。DMA控制器负责管理这个数据传输过程，它可以接管系统总线，以便直接在I/O设备和主存之间传输数据。这样做可以大大提高数据传输的效率，因为它减少了CPU的负载，并且可以在数据传输时让CPU执行其他任务。"}
{"ID": 3519, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "MAC帧的源地址和目的地址各占多少字节？", "A": "4B，4B", "B": "6B，6B", "C": "8B，8B", "D": "10B，10B", "Answer": "B"}
{"ID": 3520, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP数据报的总长度是指什么？", "A": "数据部分的长度", "B": "首部的长度", "C": "首部加数据部分的长度", "D": "首部和尾部的长度", "Answer": "C"}
{"ID": 3521, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP数据报分片的原因是什么？", "A": "首部长度过长", "B": "数据链路层MTU限制", "C": "数据部分过小", "D": "目的主机限制", "Answer": "B"}
{"ID": 3522, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "给定数据部分为3800B，最大分片不超过1420B，第二个分片的片偏移量是多少？", "A": 175, "B": 200, "C": 225, "D": 250, "Answer": "A"}
{"ID": 3523, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "TCP报文段的第5-12字节是什么？", "A": "源地址和目的地址", "B": "序列号和确认号", "C": "窗口大小和校验和", "D": "源端口和目的端口", "Answer": "B"}
{"ID": 3524, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下哪个描述是正确的？", "A": "网关在网络层工作", "B": "交换机在应用层工作", "C": "路由器在数据链路层工作", "D": "集线器在传输层工作", "Answer": "A"}
{"ID": 3525, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "路由表中的动态路由协议有哪些？", "A": "TCP、UDP", "B": "RIP、OSPF", "C": "ARP、ICMP", "D": "HTTP、FTP", "Answer": "B"}
{"ID": 3526, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "传输层是端到端通信的第几个层次？", "A": "第一层", "B": "第二层", "C": "第三层", "D": "第四层", "Answer": "D"}
{"ID": 3527, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP数据报的服务特点是什么？", "A": "有连接，可靠交付", "B": "无连接，尽最大努力交付", "C": "可靠但延迟较高", "D": "不可靠但延迟较低", "Answer": "B"}
{"ID": 3528, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "若数据部分为3800B，最大分片不超过1420B，第三个分片的总长度是多少字节？", "A": "1020B", "B": "1120B", "C": "1220B", "D": "1320B", "Answer": "A"}
{"ID": 3529, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "TCP报文段中，序列号和确认号各占多少字节？", "A": "2B，6B", "B": "4B，4B", "C": "6B，2B", "D": "8B，8B", "Answer": "B"}
{"ID": 3530, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "交换机转发数据时，如果目的MAC地址不在转发表中，会发生什么？()", "A": "丢弃数据", "B": "广播新目的地址", "C": "向所有接口转发", "D": "发送ARP请求", "Answer": "C"}
{"ID": 3531, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "ARP表的作用是什么？()", "A": "IP-Port映射", "B": "IP-MAC映射", "C": "MAC-Port映射", "D": "MAC-IP映射", "Answer": "B"}
{"ID": 3532, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "传输层的协议有哪些？()", "A": "ARP、ICMP、IP、OSPF", "B": "PPP、HDLC、CSMA", "C": "TCP、UDP", "D": "DHCP、FTP、HTTP", "Answer": "C"}
{"ID": 3533, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "端到端通信的第一个层次是？()", "A": "数据链路层", "B": "网络层", "C": "传输层", "D": "应用层", "Answer": "C"}
{"ID": 3534, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "广播域是指什么？()", "A": "发送方和接收方之间的区域", "B": "能收到信号的站点数量", "C": "广播的范围", "D": "传输层的范围", "Answer": "C"}
{"ID": 3535, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "MAC帧的总长度范围是多少字节？()", "A": "64B - 1518B", "B": "20B - 100B", "C": "46B - 1500B", "D": "18B - 500B", "Answer": "A"}
{"ID": 3536, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在IP数据报分片中，若MF为0，表示什么？()", "A": "不是最后一个分片", "B": "最后一个分片", "C": "允许分片", "D": "禁止分片", "Answer": "B"}
{"ID": 3537, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "TCP报文段的窗口大小字段占多少字节？()", "A": "2B", "B": "4B", "C": "6B", "D": "8B", "Answer": "A"}
{"ID": 3538, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "路由器的主要工作层次是？()", "A": "数据链路层", "B": "网络层", "C": "传输层", "D": "应用层", "Answer": "B"}
{"ID": 3539, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机网络可被理解为 ( ).", "A": "执行计算机数据处理的软件模块", "B": "由自治的计算机互联起来的集合体", "C": "多个处理器通过共享内存实现的紧耦合系统", "D": "用于共同完成一项任务的分布式系统", "Answer": "B"}
{"ID": 3540, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机网络最基本的功能是 ( )。", "A": "数据通信", "B": "资源共享", "C": "分布式处理", "D": "信息综合处理", "Answer": "A"}
{"ID": 3541, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机网络系统的基本组成是()", "A": "局域网和广域网", "B": "本地计算机网和通信网", "C": "通信子网和资源子网", "D": "服务器和工作站", "Answer": "C"}
{"ID": 3542, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在计算机网络中可以没有的是( )", "A": "客户机", "B": "服务器", "C": "操作系统", "D": "数据库管理系统", "Answer": "D"}
{"ID": 3543, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机网络的资源主要是指( )", "A": "服务器、路由器、通信线路与用户计算机", "B": "计算机操作系统、数据库与应用软件", "C": "计算机硬件、软件与数据", "D": "Web 服务器、数据库服务器与文件服务器", "Answer": "C"}
{"ID": 3544, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "局城网和广城网的差异不仅在于它们所覆盖的范围不同，还主要在于它们()", "A": "所使用的介质不同", "B": "所使用的协议不同", "C": "所能支持的通信量不同", "D": "所提供的服务不同", "Answer": "B"}
{"ID": 3545, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "现在大量的计算机是通过诸如以太网这样的局域网连入广域网的，而局城网与广城网的互联是通过()实现的。", "A": "路由器", "B": "资源子网", "C": "桥接器", "D": "中继器", "Answer": "A"}
{"ID": 3546, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列()是分组交换网络的缺点", "A": "信道利用率低", "B": "附加信息开销大", "C": "传播时延大", "D": "不同规格的终端很难相互通信", "Answer": "B"}
{"ID": 3547, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "( )不是对网络模型进行分层的目标", "A": "提供标准语言", "B": "定义功能执行的方法", "C": "定义标准界面", "D": "增加功能之间的独立性", "Answer": "B"}
{"ID": 3548, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "将用户数据分成一个个数据块传输的优点不包括( )", "A": "减少延迟时间", "B": "提高错误控制效率", "C": "使多个应用更公平地使用共享通信介质", "D": "有效数据在协议数据单元 (PDU)中所占比例更大", "Answer": "D"}
{"ID": 3549, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "协议是指在 ()之间进行通信的规则或约定", "A": "同一结点的上下层", "B": "不同结点对等实体", "C": "相邻实体", "D": "不同结点", "Answer": "D"}
{"ID": 3550, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "关于计算机网络及其结构模型，下列几种说法中错误的是 ( )", "A": "世界上第一个计算机网络是 ARPAnet", "B": "Internet 最早起源于 ARPAnet", "C": "国际标准化组织 (ISO)设计出了 OSI/RM 参考模型，即实际执行的标准", "D": "TCP/IP 参考模型分为4个层次", "Answer": "C"}
{"ID": 3551, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "( )是计算机网络中 OSI参考模型的3个主要概念", "A": "服务、接口、协议", "B": "结构、模型、交换", "C": "子网、层次、端口", "D": "广域网、城域网、局域网", "Answer": "A"}
{"ID": 3552, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "当数据由端系统 A传送至端系统 B 时，不参与数据封装工作的是 ( )。", "A": "物理层", "B": "数据链路层", "C": "网络层", "D": "表示层", "Answer": "A"}
{"ID": 3553, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于广播式网络的说法中，错误的是( )", "A": "共享广播信道", "B": "不存在路由选择问题", "C": "可以不要网络层", "D": "不需要服务访问点", "Answer": "D", "Explanation": "广播式网络共享广播信道(如总线)，通常是局域网的一种通信方式(局域网工作在数据链路层)，因此不需要网络层，因而也不存在路由选择问题。但数据链路层使用物理层的服务必须通过服务访问点实现。"}
{"ID": 3554, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列能够最好地描述 OSI参考模型的数据链路层功能的是 ( )。", "A": "提供用户和网络的接口", "B": "处理信号通过介质的传输", "C": "控制报文通过网络的路由选择", "D": "保证数据正确的顺序和完整性", "Answer": "D", "Explanation": "数据链路层的功能包括链路连接的建立、拆除、分离、界定和同步、差错检测等。A是应用层的功能，B 是物理层的功能，C 是网络层的功能，D 才是数据链路层的功能。"}
{"ID": 3555, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列说法中，正确描述了OSI参考模型中数据的封装过程的是()", "A": "数据链路层在分组上仅增加了源物理地址和目的物理地址", "B": "网络层将高层协议产生的数据封装成分组，并增加第三层的地址和控制信息", "C": "传输层将数据流封装成数据帧，并增加可靠性和流控制信息", "D": "表示层将高层协议产生的数据分割成数据段，并增加相应的源和目的端口信息", "Answer": "B", "Explanation": "数据链路层在分组上除增加源和目的物理地址外，也增加控制信息，传输层的 PDU 不称为帧;表示层不负责把高层协议产生的数据分割成数据段，且负责增加相应源和目的端口信息的应是传输层。选项B 正确描述了OSI 参考模型中数据的封装过程，数据经过网络层后，只是增加了第三层PCI。"}
{"ID": 3556, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "使用归零编码的优点是什么？()", "A": "时间基准，高1低0", "B": "时间基准，高0低1", "C": "高1低0，不考虑时间", "D": "高0低1，不考虑时间", "Answer": "A"}
{"ID": 3557, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "曼彻斯特编码的特点是什么？()", "A": "前半个高后半个低为1", "B": "前半个低后半个高为1", "C": "高1低0交替", "D": "高0低1交替", "Answer": "A"}
{"ID": 3558, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "波特率的定义是什么？()", "A": "每秒传输多少个比特", "B": "每秒传输多少波特", "C": "每秒传输多少字节", "D": "每秒传输多少帧", "Answer": "A"}
{"ID": 3559, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "电路交换的特点是什么？()", "A": "专有物理通信路径", "B": "无需建立专有线路", "C": "传输单位为分组", "D": "传输单位为帧", "Answer": "A"}
{"ID": 3560, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "分组交换与报文交换的区别在于？()", "A": "传输单位的大小", "B": "是否需要建立专有线路", "C": "传输速率", "D": "是否有噪声", "Answer": "A"}
{"ID": 3561, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在计算机网络中，电气特性中的电压范围指的是？()", "A": "传输速率", "B": "最大电流值", "C": "最小电流值", "D": "电压的变化范围", "Answer": "D"}
{"ID": 3562, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "中继器的主要功能是？ ()", "A": "数字再生", "B": "数据存储", "C": "信号放大", "D": "数据过滤", "Answer": "C"}
{"ID": 3563, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "波特率和比特率的关系是什么？ ()", "A": "比特率=波特率X单个调制状态对应的二进制位数", "B": "不相关", "C": "波特率是比特率的两倍", "D": "波特率是比特率的一半", "Answer": "A"}
{"ID": 3564, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "香农定理中的信噪比单位是什么？ ()", "A": "dB", "B": "Hz", "C": "b/s", "D": "B/s", "Answer": "A"}
{"ID": 3565, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "报文交换中的存储转发是指？()", "A": "先存储整个报文，再发送", "B": "边存储边发送", "C": "先发送头部，再发送数据", "D": "不存储直接发送", "Answer": "A"}
{"ID": 3566, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "过程特性关注什么？()", "A": "电压范围", "B": "时序和工作规程", "C": "物理连接的特性", "D": "传输速率", "Answer": "B"}
{"ID": 3567, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "中继器必须确保两端的网段使用相同的什么？ ()", "A": "协议", "B": "物理层", "C": "数据链路层", "D": "传输速率", "Answer": "B"}
{"ID": 3568, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "比特率是指什么？ ()", "A": "每秒传输的波特数", "B": "传输的帧数", "C": "每秒传输的字节数", "D": "传输的比特数", "Answer": "D"}
{"ID": 3569, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "不含同步信息的编码是( )", "A": "非归零编码", "B": "曼彻斯特编码", "C": "差分曼彻斯特编码", "D": "非归零编码、差分曼彻斯特编码", "Answer": "A"}
{"ID": 3570, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在网络中，要同时传输语音与计算机产生的数字、文字、图形与图像，必须先把语音信号数字化。下列可以把语音信号数字化的技术是 ( )", "A": "曼彻斯特编码", "B": "QAM", "C": "差分曼彻斯特编码", "D": "脉冲编码调制", "Answer": "D"}
{"ID": 3571, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "测得一个以太网的数据波特率是 40MBaud，那么其数据率是( )。", "A": "10Mb/s", "B": "20Mb/s", "C": "40Mb/s", "D": "80Mb/s", "Answer": "B"}
{"ID": 3572, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在下列数据交换方式中，数据经过网络的传输延迟长而且是不固定的，不能用于语音数据传输的是( )", "A": "电路交换", "B": "报文交换", "C": "数据报交换", "D": "虚电路交换", "Answer": "B"}
{"ID": 3573, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在电缆中采用屏蔽技术带来的好处主要是 ( )", "A": "减少信号衰减", "B": "减少电磁干扰辐射", "C": "减少物理损坏", "D": "减少电缆的阻抗", "Answer": "B"}
{"ID": 3574, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "多模光纤传输光信号的原理是 ( )", "A": "光的折射特性", "B": "光的发射特性", "C": "光的全反射特性", "D": "光的绕射特性", "Answer": "C"}
{"ID": 3575, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下关于单模光纤的说法中， 正确的是( )", "A": "光纤越粗，数据传输速率越高", "B": "如果光纤的直径减小到只有光的一个波长大小，那么光沿直线传播", "C": "光源是发光二极管或激光", "D": "光纤是中空的", "Answer": "B"}
{"ID": 3576, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下面关于卫星通信的说法，错误的是( )", "A": "卫星通信的距离长，覆盖的范围广", "B": "使用卫星通信易于实现广播通信和多址通信", "C": "卫星通信的好处在于不受气候的影响，误码率很低", "D": "通信费用高、延时较大是卫星通信的不足之处", "Answer": "C"}
{"ID": 3577, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "某网络在物理层规定，信号的电平用+10V~+15V 表示二进制 0，用-10V~-15V 表示二进制 1，电线长度限于 15m 以内，这体现了物理层接口的 ( )", "A": "机械特性", "B": "功能特性", "C": "电气特性", "D": "规程特性", "Answer": "C"}
{"ID": 3578, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "转发器的作用是()", "A": "放大信号", "B": "转发帧", "C": "存储帧", "D": "寻址", "Answer": "A"}
{"ID": 3579, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "两个网段在物理层进行互联时要求 ()", "A": "数据传输速率和数据链路层协议都可以不同", "B": "数据传输速率和数据链路层协议都要相同", "C": "数据传输速率要相同，但数据链路层协议可以不同", "D": "数据传输速率可以不同，但数据链路层协议要相同", "Answer": "C"}
{"ID": 3580, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以太网遵循IEEE 802.3 标准，用粗缆组网时每段的长度不能大于 500m，超过500m 时就要分段，段间相连利用的是 ( )", "A": "网络适配器", "B": "中继器", "C": "调制解调器", "D": "网关", "Answer": "B"}
{"ID": 3581, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "用集线器连接的工作站集合 ( )", "A": " 同属一个冲突域，也同属一个广播域", "B": " 不同属一个冲突域，但同属一个广播域", "C": " 不同属一个冲突域，也不同属一个广播域", "D": " 同属一个冲突域，但不同属一个广播域", "Answer": "A"}
{"ID": 3582, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "若有5台计算机连接到一台 10Mb/s 的集线器上，则每台计算机分得的平均带宽为( )", "A": " 2Mb/s", "B": " 5Mb/s", "C": " 10Mb/s", "D": " 50Mb/s", "Answer": "A"}
{"ID": 3583, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列有关曼彻斯特编码的叙述，正确的是( )", "A": "每个信号起始边界作为时钟信号有利于同步", "B": "将时钟与数据取值都包含在信号中", "C": "这种模拟信号的编码机制特别适合于传输声音", "D": "每位的中间不跳变表示信号的取值为0", "Answer": "B", "Explanation": "曼彻斯特编码将每个码元分成两个相等的间隔。前面一个间隔为高电平而后一个间隔为低电平表示码元1，码元0正好相反，也可以采用相反的规定，因此选项D错。位中间的跳变作为时钟信号，每个码元的电平作为数据信号，因此选项B 正确。曼彻斯特编码将时钟和数据包含在数据流中，在传输代码信息的同时，也将时钟同步信号一起传输到对方，因此选项 A 错。声音是模拟数据，而曼彻斯特编码最适合传输二进制数字信号，因此选项C错。"}
{"ID": 3584, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某信道的波特率为 1000Baud，若今其数据传输速率达到 4kb/s，则一个信号码元所取的有效离散值个数为( )。", "A": 4, "B": 16, "C": 2, "D": 8, "Answer": "B", "Explanation": "比特率 = 波特率 x log₂(有效离散值个数)，一个码元所取的有效离散值个数 = 比特率 / 波特率 = 4000 / 1000 = 4。"}
{"ID": 3585, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知某信道的信号传输速率为 64kb/s，一个载波信号码元有 4 个有效离散值，则该信道的波特率为( )", "A": "64kBaud", "B": "128kBaud", "C": "16kBaud", "D": "32kBaud", "Answer": "D", "Explanation": "一个码元若取 2^n 个不同的离散值，则含有 n 比特的信息。本题中，一个码元有的信息量为 2 比特，由于数值上波特率 = 比特率 / 每符号所含比特数，因此波特率为 (64 / 2) k = 32kBaud。"}
{"ID": 3586, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "有一条无噪声的 8KHz 信道，每个信号包含 8 级，每秒采样 24k 次，那么可以获得的最大传输速率是( )。", "A": "24kb/s", "B": "32kb/s", "C": "48kb/s", "D": "72kb/s", "Answer": "C", "Explanation": "无噪声的信号应该满足奈奎斯特定理，即最大数据传输速率 = 2W log₂V 比特/秒。将题目中的数据代入，得到答案是 48k 比特/秒，即 48kb/s。注意题目中给出的每秒采样 24k 次是无意义的，因为超过了波特率的上限 2W = 16kBaud，所以 D 是错误答案。"}
{"ID": 3587, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "二进制信号在信噪比为 127:1 的 4kHz 信道上传输，最大数据传输速率可以达到( )", "A": "28000b/s", "B": "8000b/s", "C": "4000b/s", "D": "无限大", "Answer": "B", "Explanation": "根据香农定理，最大数据率 = W log₂(1 + S/N) = 4000 × log₂(1 + 127) = 28000 b/s。本题容易误选 A。但是，注意题中“二进制信号”的限制，根据斯特定理，最大数据传输率 = 2W log₂V = 2 × 4000 × log₂ = 8000 b/s，两个上限中取最小的，因此选 B。"}
{"ID": 3588, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "采用 8 种相位，每种相位各有两种幅度的 QAM 调制方法，在 1200Baud 的信号传输速率下能达到的数据传输速率为 ( )", "A": "2400b/s", "B": "3600b/s", "C": "9600b/s", "D": "4800b/s", "Answer": "D", "Explanation": "每个信号有 8 × 2 = 16 种变化，每个码元带log₂¹⁶ 比特的信息，则信息传输速率为 1200 × 4 = 4800 b/s。"}
{"ID": 3589, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个信道每 1/8s 采样一次，传输信号共有 16 种变化状态，最大数据传输速率是 ( )", "A": "16b/s", "B": "32b/s", "C": "48b/s", "D": "64b/s", "Answer": "B", "Explanation": "由题意知，采样频率为 8 Hz。有 16 种变化状态的信号可带 4 比特数据，因此最大数据传输速率为 8 × 4 = 32 b/s。"}
{"ID": 3590, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "将 1 路模拟信号分别编码为数字信号后，与另外 7 路数字信号采用同步 TDM 方式复用到一条通信线路上。1 路模拟信号的频率变化范围为 0~1kHz，每个采样点采用 PCM 方式编码为 4 位的二进制数，另外 7 路数字信号的数据率均为 7.2kb/s。复用线路需要的最小通信能力是 ( )", "A": "7.2kb/s", "B": "8kb/s", "C": "64kb/s", "D": "512kb/s", "Answer": "C", "Explanation": "1 路为 1kHz，定知至为 2kHz，个编码为 4 位二进制数，所以数据传输速率为 8kb/s。复用的每条支路速率要相等，而另外 7 路数字信号的速率均低于 8kb/s，所以它们均要采用脉冲填充方式，将数据率提高到 8kb/s，然后将这 8 路信号复用，需要的通信能力为 8kb/s × 8 = 64kb/s。"}
{"ID": 3591, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "为了使数据在网络中传输时延最小，首选的交换方式是 ( )。", "A": "电路交换", "B": "报文交换", "C": "分组交换", "D": "信元交换", "Answer": "A", "Explanation": "电路交换虽然建立连接的时延较大，但在数据传输时是一直占据链路的，实时性更好，传输时延小。"}
{"ID": 3592, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "有关虚电路服务和数据报服务的特性，正确的是()", "A": "虚电路服务和数据报服务都是无连接的服务", "B": "数据报服务中，分组在网络中沿同一条路径传输，并且按发出顺序到达", "C": "虚电路在建立连接后，分组中需携带虚电路标识", "D": "虚电路中的分组到达顺序可能与发出顺序不同", "Answer": "C", "Explanation": "虚电路服务是有连接的，属于同一条虚电路的分组，根据该分组的相同虚电路标识，按照同路由转发，保证分组的有序到达。数据报服务中，网络为每个分组独立地选择路由，传输不保证可靠性，也不保证分组的按序到达。"}
{"ID": 3593, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列有关数据报和虚电路的叙述中，错误的是 ( ).", "A": "数据报方式中，某个结点若因故障而丢失分组，其他分组仍可正常传输", "B": "数据报方式中，每个分组独立地进行路由选择和转发，不同分组之间没有必然联系", "C": "虚电路方式中，属于同一条虚电路的分组按照同一路由转发", "D": "尽管虚电路方式是面向连接的，但它并不保证分组的有序到达", "Answer": "D", "Explanation": "数据报服务是无连接的，不提供可靠性保障，也不保证分组的有序到达。虚电路服务中，属于同一条虚电路的分组按照同一路由转发，保证分组有序到达。"}
{"ID": 3594, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列叙述中正确的是(）", "A": "电路交换是真正的物理线路交换，而虚电路交换是逻辑上的连接，且一条物理线路只可以进行一条逻辑连接", "B": "虚电路的连接是临时性连接，当会话结束时就释放这种连接", "C": "数据报服务不提供可靠传输，但可以保证分组的有序到达", "D": "数据报服务中，每个分组在传输过程中都必须携带源地址和目的地址", "Answer": "D", "Explanation": "电路交换是真正的物理线路交换，例如电话线路；虚电路交换是多路复用技术，每条物理线路可以进行多条逻辑上的连接。虚电路服务中，分组只需携带虚电路标识，不必带有源地址和目的地址。"}
{"ID": 3595, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "当描述一个物理层接口引脚处于高电平时的含义时，该描述属于 ( )", "A": "机械特性", "B": "电气特性", "C": "功能特性", "D": "规程特性", "Answer": "C", "Explanation": "物理层的功能特性指明某条线上出现的某一电平的电压表示何种意义"}
{"ID": 3596, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于物理层设备的叙述中，错误的是 ( ）", "A": "中继器仅作用于信号的电气部分", "B": "利用中继器来扩大网络传输距离的原理是它将衰减的信号进行了放大", "C": "集线器实质上相当于一个多端口的中继器", "D": "物理层设备连接的几个网段仍是一个局域网，且不能互连具有不同数据链路层协议的网段", "Answer": "B", "Explanation": "中继器的原理是将衰减的信号再生，而不是放大，连接后的网段仍然属于同一个局域网"}
{"ID": 3597, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "当集线器的一个端口收到数据后，将其( )", "A": " 从所有端口广播出去", "B": " 从除输入端口外的所有端口广播出去", "C": " 根据目的地址从合适的端口转发出去", "D": " 随机选择一个端口转发出去", "Answer": "B", "Explanation": "集线器没有寻址功能，从一个端口收到数据后，会从除输入端口外的所有端口广播出去。"}
{"ID": 3598, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于中继器和集线器的说法中，不正确的是 ( )", "A": " 二者都工作在 OSI 参考模型的物理层", "B": " 二者都可以对信号进行放大和整形", "C": " 通过中继器或集线器互联的网段数量不受限制", "D": " 中继器通常只有 2 个端口，而集线器通常有 4 个或更多端口", "Answer": "C", "Explanation": "中继器和集线器互联的网段数量是受限制的，受到“5-4-3 规则”的限制，其中最多只能有 4 个中继器、5 个网段。其他说法都是正确的。"}
{"ID": 3599, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在SR（选择重传协议）中，发送窗口的大小是多少？ ()", "A": "2 ^ n", "B": "2 ^ (n-1)", "C": "(2 ^ n) - 1", "D": "n", "Answer": "B"}
{"ID": 3600, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "IEEE 802.11 CSMA/CA无线局域网采用的是哪种访问控制方式？()", "A": "CSMA", "B": "CSMA/CD", "C": "CSMA/CA", "D": "TDMA", "Answer": "C"}
{"ID": 3601, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层设备主要参与哪些功能？", "A": "成帧、差错控制、 流量控制", "B": "差错控制", "C": "流量控制", "D": "传输管理", "Answer": "A"}
{"ID": 3602, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层的主要功能包括以下哪一项？()", "A": "源地址检查", "B": "源地址和目的地址的映射", "C": "源地址和目的地址的解析", "D": "源地址和目的地址的转换", "Answer": "C"}
{"ID": 3603, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "CSMA/CA中的逐一确认指的是什么？()", "A": "发送方逐一确认接收到的ACK帧", "B": "发送方逐一确认接收到的数据帧", "C": "接收方逐一确认接收到的RTS帧", "D": "接收方逐一确认接收到的CTS帧", "Answer": "B"}
{"ID": 3604, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "奇偶校验码在检测出错两位时的局限性是什么？()", "A": "可以检测出", "B": "无法检测出", "C": "只能检测出一位错误", "D": "只能检测出三位错误", "Answer": "B"}
{"ID": 3605, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "循环冗余校验码是根据什么而产生的？()", "A": "数据的长度", "B": "数据的内容", "C": "数据的传输速率", "D": "数据的存储位置", "Answer": "B"}
{"ID": 3606, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "MAC广播地址是什么？", "A": "00-00-00-00-00-00", "B": "FF-FF-FF-FF-FF-FF", "C": "11-11-11-11-11-11", "D": "AA-AA-AA-AA-AA-AA", "Answer": "B"}
{"ID": 3607, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层提供的最基本服务是将数据可靠地传输到相邻节点的目标机网络层，基本数据单位是？", "A": "数据包", "B": "帧", "C": "数据段", "D": "数据单元", "Answer": "B"}
{"ID": 3608, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层的透明传输中，“透明”指的是什么？", "A": "数据无需加密", "B": "传输的数据内容、格式及编码无限", "C": "数据可以传输到任意节点", "D": "数据不受物理介质限制", "Answer": "B"}
{"ID": 3609, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "路径MTU由什么决定？", "A": "数据链路层的数据帧长度", "B": "网络层的IP地址", "C": "物理层的介质类型", "D": "传输层的协议", "Answer": "A"}
{"ID": 3610, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以太网帧的最短长度是多少字节？", "A": 46, "B": 54, "C": 64, "D": 76, "Answer": "C"}
{"ID": 3611, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以太网的广播地址是什么？()", "A": "00-00-00-00-00-00", "B": "FF-FF-FF-FF-FF-FF", "C": "11-11-11-11-11-11", "D": "AA-AA-AA-AA-AA-AA", "Answer": "B"}
{"ID": 3612, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层帧的首部和尾部总长度为多少字节？()", "A": "14B", "B": "16B", "C": "18B", "D": "20B", "Answer": "C"}
{"ID": 3613, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "帧的源地址和目的地址各占多少字节？()", "A": "4B，4B", "B": "6B，6B", "C": "8B，8B", "D": "10B，10B", "Answer": "B"}
{"ID": 3614, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "MAC地址的前24位表示什么？()", "A": "生产厂商标识", "B": "网络标识", "C": "设备标识", "D": "区域标识", "Answer": "A"}
{"ID": 3615, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层如何实现流量控制？()", "A": "停等协议", "B": "停止等待协议和滑动窗口协议", "C": "ALOHA协议", "D": "CSMA/CD协议", "Answer": "B"}
{"ID": 3616, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在滑动窗口协议中，窗口的大小指的是什么？()", "A": "发送方的窗口大小", "B": "接收方的窗口大小", "C": "窗口中未确认帧的数量", "D": "总帧的数量", "Answer": "A"}
{"ID": 3617, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪种错误检测方法在数据链路层最常用？()", "A": "奇偶校验", "B": "CRC校验", "C": "校验和", "D": "LRC校验", "Answer": "B"}
{"ID": 3618, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "ARP的作用是什么？()", "A": "解析MAC地址", "B": "解析IP地址", "C": "解析端口号", "D": "解析域名", "Answer": "A"}
{"ID": 3619, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "ARP请求是以什么形式广播的？()", "A": "数据帧", "B": "IP数据报", "C": "ARP帧", "D": "ICMP帧", "Answer": "A"}
{"ID": 3620, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层的环型拓扑结构中，数据是如何传输的？()", "A": "单向传输", "B": "双向传输", "C": "顺时针传输", "D": "逆时针传输", "Answer": "B"}
{"ID": 3621, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层的哪种传输方式适用于点到点通信？()", "A": "单播", "B": "广播", "C": "多播", "D": "随机传输", "Answer": "A"}
{"ID": 3622, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "重传机制的实现中，通常采用的算法是什么？()", "A": "贪心算法", "B": "滑动窗口算法", "C": "Dijkstra算法", "D": "A*算法", "Answer": "B"}
{"ID": 3623, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列不属于数据链路层功能的是 ( )", "A": "帧定界功能", "B": "电路管理功能", "C": "差错控制功能", "D": "流量控制功能", "Answer": "B"}
{"ID": 3624, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层为网络层提供的服务不包括 ( )", "A": "无确认的无连接服务", "B": "有确认的无连接服务", "C": "无确认的面向连接服务", "D": "有确认的面向连接服务", "Answer": "C"}
{"ID": 3625, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "流量控制实际上是对( )的控制", "A": "发送方的数据流量", "B": "接收方的数据流量", "C": "发送、接收方的数据流量", "D": "链路上任意两结点间的数据流量", "Answer": "A"}
{"ID": 3626, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "通过提高信噪比可以减弱其影响的差错是 ( )", "A": "随机差错", "B": "突发差错", "C": "数据丢失差错", "D": "干扰差错", "Answer": "A"}
{"ID": 3627, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对于窗口大小为 n 的滑动窗口，最多可以有 ( )已发送但没有确认。", "A": 0, "B": " n-1", "C": " n", "D": " n/2", "Answer": "B"}
{"ID": 3628, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在以太网的二进制回退算法中，在 11 次碰撞之后，站点会在 0~( ) 之间选择一个随机数。", "A": 255, "B": 511, "C": 1023, "D": 2047, "Answer": "C"}
{"ID": 3629, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下关于以太网的说法中，正确的是( )。", "A": " 以太网的物理拓扑是总线形结构", "B": " 以太网提供有确认的无连接服务", "C": " 以太网参考模型一般只包括物理层和数据链路层", "D": " 以太网必须使用 CSMA/CD 协议", "Answer": "C"}
{"ID": 3630, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列以太网中，采用双绞线作为传输介质的是( )。", "A": " 10BASE-2", "B": " 10BASE-5", "C": " 10BASE-T", "D": " 10BASE-F", "Answer": "C"}
{"ID": 3631, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "每个以太网卡都有自己的时钟，每个网卡在互相通信时为了知道什么时候一位结束、下一位开始，即具有同样的频率，它们采用了 ()", "A": "量化机制", "B": "曼彻斯特机制", "C": "奇偶校验机制", "D": "定时间隔机制", "Answer": "B"}
{"ID": 3632, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在以太网中，大量的广播信息会降低整个网络性能的原因是 ( ).", "A": "网络中的每台计算机都必须为每个广播信息发送一个确认信息", "B": "网络中的每台计算机都必须处理每个广播信息", "C": "广播信息被路由器自动路由到每个网段", "D": "广播信息不能直接自动传送到目的计算机", "Answer": "B"}
{"ID": 3633, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "IEEE 802.3 标准规定，若采用同轴电缆作为传输介质，在无中继的情况下，传输介质的最大长度不能超过( ).", "A": "500m", "B": "200m", "C": "100m", "D": "50m", "Answer": "A"}
{"ID": 3634, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下面4种以太网中，只能工作在全双工模式下的是 ( ).", "A": "10BASE-T以太网", "B": "100BASE-T 以太网", "C": "吉比特以太网", "D": "10吉比特以太网", "Answer": "D"}
{"ID": 3635, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "802.3 标准定义的以太网中，实现“给帧加序号”功能的层次是( ).", "A": "物理层", "B": "介质访问控制子层(MAC)", "C": "逻辑链路控制子层(LLC)", "D": "网络层", "Answer": "B"}
{"ID": 3636, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列关于广域网和局城网的叙述中，正确的是( )。", "A": "广域网和互联网类似，可以连接不同类型的网络", "B": "在 OSI 参考模型层次结构中，广域网和局城网均涉及物理层、数据链路层和网络层", "C": "从互联网的角度看，广域网和局域网是平等的", "D": "局域网即以太网，其逻辑拓扑是总线形结构", "Answer": "B"}
{"ID": 3637, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "PPP 协议提供的功能有 ( )", "A": "一种成帧方法", "B": "链路控制协议(LCP)", "C": "网络控制协议(NCP)", "D": "A、B 和 C 都是", "Answer": "D"}
{"ID": 3638, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "根据 HDLC 协议控制字段前两位的取值，可将 HDLC 划分为三类，这三类不包括( )", "A": "信息帧", "B": "监督帧", "C": "确认帧", "D": "无编号帧", "Answer": "C"}
{"ID": 3639, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列网络连接设备都工作在数据链路层的是( )", "A": "中继器和集线器", "B": "集线器和网桥", "C": "网桥和局域网交换机", "D": "集线器和局域网交换机", "Answer": "C"}
{"ID": 3640, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "不同网络设备传输数据的延迟时间是不同的。下面设备中，传输时延最大的是( ).", "A": "局域网交换机", "B": "网桥", "C": "路由器", "D": "集线器", "Answer": "C"}
{"ID": 3641, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "局域网交换机实现的主要功能在 ()", "A": "物理层和数据链路层", "B": "数据链路层和网络层", "C": "物理层和网络层", "D": "数据链路层和应用层", "Answer": "A"}
{"ID": 3642, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个16端口的集线器的冲突域和广播域的个数分别是( )", "A": " 16,1", "B": " 16,16", "C": "1,1", "D": "1,16", "Answer": "C"}
{"ID": 3643, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个16个端口的以太网交换机，冲突域和广播域的个数分别是()。", "A": " 1,1", "B": " 16,16", "C": "1,16", "D": "16,1", "Answer": "D"}
{"ID": 3644, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "为了避免传输过程中帧的丢失，数据链路层采用的方法是 ()", "A": "编号机制", "B": "循环冗余校验码", "C": "汉明码", "D": "计时器超时重发", "Answer": "D", "Explanation": "为防止在传输过程中顿丢失，在可靠的数据链路层协议中，发送方对发送的每个数据帧设计一个定时器，当计时器到期而该的确认仍未到达时，发送方将重发该。为保证接收方不会接收到重复帧，需要对每个发送的帧进行编号;汉明码和循环冗余校验码都用于差错控制。"}
{"ID": 3645, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于信道比较可靠且对实时性要求高的网络，数据链路层采用 ( )比较合适", "A": "无确认的无连接服务", "B": "有确认的无连接服务", "C": "无确认的面向连接服务", "D": "有确认的面向连接服务", "Answer": "A", "Explanation": "无确认的无连接服务是指源机器向目标机器发送独立的顿，目标机器并不对这些帧进行确认。事先并不建立逻辑连接，事后也不用释放逻辑连接。若由于线路上有噪声而造成某一帧丢失则数据链路层并不会检测这样的手帕现象，也不会回复。当错误率很低时，这一类服务非常合适。这时恢复任务可以留给上面的各层来完成。这类服务对于实时通信也是非常合适的，因为实时通信中数据的迟到比数据损坏更不好。"}
{"ID": 3646, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下述协议中，( )不是数据链路层的标准。", "A": "ICMP", "B": "HDLC", "C": "PPP", "D": "SLIP", "Answer": "A", "Explanation": "网际控制报文协议(ICMP)是网络层协议，PPP 是在 SLIP 基础上发展而来的，都是数据链路层协议。"}
{"ID": 3647, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设物理信道的传输成功率是 95%，而平均一个网络层分组需要 10 个数据链路层来发送，若数据链路层采用无确认的无连接服务，则发送网络层分组的成功率是 ( )。", "A": 0.4, "B": 0.6, "C": 0.8, "D": 0.95, "Answer": "B", "Explanation": "要成功发送一个网络层分组，需要成功发送 10 个数据链路层。成功发送 10 个数据链路层帧的概率是 (0.95)^10 ≈ 0.598，即大约只有 60% 的成功率。这个结论说明了在不可靠的信道上无确认的服务效率很低。为了提高可靠性，应该引入有确认的服务。"}
{"ID": 3648, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于循环冗余校验的说法中，( )是错误的。", "A": " 带r个校验位的多项式编码可以检测到所有长度小于等于 r 的突发性错误", "B": " 通信双方可以无须商定就直接使用多项式编码", "C": " CRC 校验可以使用硬件来完成", "D": " 有一些特殊的多项式，因为其有很好的特性，而成了国际标准", "Answer": "B", "Explanation": "在使用多项式编码时，发送端和接收端必须预先商定一个生成多项式。发送端按照模2 除法得到校验码，在发送数据时把该校验码加在数据后面。接收端收到数据后，也需要根据该生成多项式来验证数据的正确性。"}
{"ID": 3649, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "从滑动窗口的观点看，当发送窗口为 1、接收窗口也为1时，相当于ARQ的( )方式", "A": " 回退N桢ARQ", "B": " 选择重传 ARQ", "C": " 停止等待", "D": " 连续 ARQ", "Answer": "C", "Explanation": "停止-等待协议的工作原理是: 发送方每发送一帧，都要等待接收方的应答信号，之后才能发送下一帧; 接收方每接收一帧，都要反馈一个应答信号，表示可接收下一帧，如果接收方不反馈应答信号，那么发送方必须一直等待。"}
{"ID": 3650, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在简单的停止等待协议中，当发生丢失时，发送端会永远等待下去，解决这种死锁现象的办法是( )", "A": " 差错校验", "B": " 帧序号", "C": " NAK 机制", "D": " 超时机制", "Answer": "D", "Explanation": "在停止-等待协议中，发送端设置了计时器，在一个帧发送之后，发送端等待确认，如果在计时器计满时仍未收到确认，那么再次发送相同的帧，以免陷入永久的等待。"}
{"ID": 3651, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个信道的数据传输速率为 4kb/s，单向传播时延为 30ms，如果使停止-等待协议的信道最大利用率达到 80%，那么要求的数据帧长度至少为 ( )。", "A": " 160bit", "B": " 320bit", "C": " 560bit", "D": " 960bit", "Answer": "D", "Explanation": "停止-等待协议的信道最大利用率为(L/C)(L/C+2R)= L/(L+2RC)= L/(L+2x30msx4kb/s)= 80%，解得L=960bit。"}
{"ID": 3652, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "数据链路层采用后退 N 帧协议方式，进行流量控制和差错控制，发送方已经发送了编号 0~6 的帧，计时器超时时，只收到了对 1、3 和 5 号的确认，发送方需要重传的帧的数目是( )。", "A": 1, "B": 2, "C": 5, "D": 6, "Answer": "A", "Explanation": "GBN 一般采用累积确认，因此收到了对 5 号的确认接方已收到 1~5 号，因此发送方仅需要重传 6 号。"}
{"ID": 3653, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个使用选择重传协议的数据链路层协议，如果采用了 5 位的序列号，那么可以选用的最大接收窗口是 ( )。", "A": 15, "B": 16, "C": 31, "D": 32, "Answer": "B", "Explanation": "在选择重传协议中，若采用 n 比特对进行编号，为避免接收端向前移动窗口后，新的窗口与旧的窗口产生重叠，接收窗口的最大尺寸应该不超过序号范围的一半，即 W_R <= 2^(n-1)。因此选 B。"}
{"ID": 3654, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对无序接收的滑动窗口协议，若序号位数为 n，则发送窗口最大尺寸为（）", "A": " 2^n-1", "B": " 2n", "C": " 2n-1", "D": " 2^(n-1)", "Answer": "D", "Explanation": "本题并未直接告知使用的是选择重传协议，而是通过间接方式给出的。题目说无序接收的滑动窗口协议，说明接收窗口大于 1，所以得出数据链路层使用的是选择重传协议，而选择重传协议的发送窗口最大尺寸为 2^(n-1)。因此正确答案是 D。"}
{"ID": 3655, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "将物理信道的总频带宽分割成若干子信道，每个子信道传输一路信号，这种信道复用技术是( )。", "A": " 码分复用", "B": " 频分复用", "C": " 时分复用", "D": " 空分复用", "Answer": "B", "Explanation": "在物理信道的可用带宽超过单个原始信号所需带宽的情况下，可将该物理信道的总带宽分割成若干与传输单个信号带宽相同(或略宽)的子信道，每个子信道传输一种信号，这就是频分多路复用。"}
{"ID": 3656, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在下列多路复用技术中，具有动态分配时隙的功能（）", "A": " 同步时分多路复用", "B": " 统计时分多路复用", "C": " 频分多路复用", "D": " 码分多路复用", "Answer": "B", "Explanation": "异步时分多路复用 (也称统计时分多路复用) 是一种动态时分复用技术，它动态地分配时间片(时隙)。"}
{"ID": 3657, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在下列协议中，不会发生碰撞的是 ( )", "A": " TDM", "B": " ALOHA", "C": " CSMA", "D": " CSMA/CD", "Answer": "A", "Explanation": "TDM 属于静态划分信道的方式，各结点分时使用信道，不会发生碰撞，而 ALOHA、CSMA 和 CSMA/CD 都属于动态的随机访问协议，都采用检测碰撞的策略来应对碰撞，因此都可能会发生碰撞。"}
{"ID": 3658, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下几种 CSMA 协议中( ) 协议在监听到介质空闲时仍可能不发送。", "A": " 1-坚持 CSMA", "B": " 非坚持 CSMA", "C": " p-坚持 CSMA", "D": " 以上都不是", "Answer": "C", "Explanation": "p-坚持 CSMA 协议是 1-坚持 CSMA 协议和非坚持 CSMA 协议的折中。在 p-坚持 CSMA 协议中，在检测到信道空闲后，以概率 p 发送数据，以概率 1-p 不发送，目的是降低 1-坚持 CSMA 中多个节点检测到信道空闲后同时发送数据的冲突概率。"}
{"ID": 3659, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在 CSMA 的非坚持协议中，当媒体忙时，则( )直到媒体空闲。", "A": " 延迟一个固定的时间单位再侦听", "B": " 继续侦听", "C": " 延迟一个随机的时间单位再侦听", "D": " 放弃侦听", "Answer": "C", "Explanation": "非坚持 CSMA 协议中，站点在发送数据前先监听信道，若信道忙则放弃监听，等待一个随机时间后再监听，若信道空闲则发送数据。"}
{"ID": 3660, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在 CSMA 的非坚持协议中，当站点侦听到总线媒体空闲时，它 ( )。", "A": " 以概率 p 传送", "B": " 马上传送", "C": " 以概率 1-p 传送", "D": " 以概率 p 延迟一个时间单位后传送", "Answer": "B", "Explanation": "非坚持 CSMA 协议中，当站点侦听到总线媒体空闲时，它会立即传送数据。"}
{"ID": 3661, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以太网中，当数据传输速率提高时，槽的发送时间会相应地缩短，这样可能会影响到冲突的检测。为了能有效地检测冲突，可以使用的解决方案有 ( )。", "A": " 减少电缆介质的长度或减少最短帧长", "B": " 减少电缆介质的长度或增加最短帧长", "C": " 增加电缆介质的长度或减少最短帧长", "D": " 增加电缆介质的长度或增加最短帧长", "Answer": "B", "Explanation": "最短帧长等于争用期时间内发出的比特数。因此当传输速率提高时，可以减少电缆介质的长度（使争用期时间减少，即以太网端到端的时延减小），或增加最短帧长。"}
{"ID": 3662, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "长度为 10km、数据传输速率为 10Mb/s 的 CSMA/CD 以太网，信号传播速率为 200m/us。那么该网络的最小帧长为 ( )。", "A": " 20 bit", "B": " 200 bit", "C": " 100 bit", "D": " 1000 bit", "Answer": "D", "Explanation": "来回路程 = 10000x2m，往返时间 RTT = 10000x2 / (200x10^6) = 10 μs，最小长度 = 位宽 x RTT = 1000 bit"}
{"ID": 3663, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以太网中若发生介质访问冲突，则按照二进制指数回退算法决定下一次重发的时间。使用二进制回退算法的理由是( )。", "A": " 这种算法简单", "B": " 这种算法执行速度快", "C": " 这种算法考虑了网络负载对冲突的影响", "D": " 这种算法与网络的规模大小无关", "Answer": "C", "Explanation": "以太网采用 CSMA/CD 技术，网络上的流量越大负载时，发生冲突的概率也会越大。二进制回退算法可以动态地适应发送站点的数量，后退延时的取值范围与重发次数 n 形成二进制指数关系，从而考虑了负载对冲突的影响。"}
{"ID": 3664, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以太网中采用二进制指数回退算法处理冲突问题，下列数据帧重传时再次发生冲突的概率最低的是( )", "A": " 首次重传的帧", "B": " 发生两次冲突的帧", "C": " 发生三次重传的帧", "D": " 发生四次重传的帧", "Answer": "D", "Explanation": "根据 IEEE 802.3 标准，以太网的二进制指数回退算法在发生冲突时采用二进制退避，即在重传时等待的时间按照 0 到 2^n-1 的区间内的一个随机时间选择。因此，在发生四次重传的帧时，其再次发生冲突的概率最低。"}
{"ID": 3665, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于令牌环网络的描述中，错误的是( )", "A": " 令牌环网络存在冲突", "B": " 同一时刻，环上只有一个数据在传输", "C": " 网上所有结点共享网络带宽", "D": " 数据从一个结点到另一结点的时间可以计算", "Answer": "A", "Explanation": "令牌环网络不存在冲突，因为只有获得令牌的主机才能发送数据。"}
{"ID": 3666, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于令牌环网络的说法中，不正确的是( )", "A": " 媒体的利用率比较公平", "B": " 重负载下信道利用率高", "C": " 结点可以一直持有令牌，直至所要发送的数据传输完毕", "D": " 令牌是指一种特殊的控制帧", "Answer": "C", "Explanation": "在令牌环网络中，结点不能一直持有令牌，而是在一定的时间内获得发送数据的权利。"}
{"ID": 3667, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在令牌环网络中，当所有站点都有数据帧要发送时，一个站点在最坏情况下等待获得令牌和发送数据帧的时间等于 ( )。", "A": " 所有站点传送令牌的时间总和", "B": " 所有站点传送令牌和发送帧的时间总和", "C": " 所有站点传送令牌的时间总和的一半", "D": " 所有站点传送令牌和发送帧的时间总和的一半", "Answer": "B", "Explanation": "在最坏情况下，所有站点都要发送数据，一个站点获得令牌的等待时间等于所有站点传送令牌和发送帧的时间总和。"}
{"ID": 3668, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一条广播信道上接有 3 个站点 A、B、C，介质访问控制采用信道划分方法，信道的划分采用码分复用技术，A、B 要向 C 发送数据，设 A 的码序列为 +1, -1, -1, +1, +1, +1, -1, -1，站点 B 可以选用的码片序列为 ( )。", "A": " -1, -1, -1, +1, -1, +1, +1, +1", "B": " -1, +1, -1, -1, -1, +1, +1, +1", "C": " -1, +1, -1, +1, -1, +1, -1, +1", "D": " -1, +1, -1, +1, -1, +1, +1, +1", "Answer": "D", "Explanation": "站点 B 的码片序列必须与站点 A 的码片序列正交，使得它们的内积为 0。选项 D 是唯一符合这一要求的选择。"}
{"ID": 3669, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "如果使用5类UTP来设计一个覆盖范围为 200m的10BASE-T以太网，那么需要采用的设备是 ( )。", "A": " 放大器", "B": " 中继器", "C": " 网桥", "D": " 路由器", "Answer": "B", "Explanation": "10BASE-T 以太网的双绞线传输距离限制为100米，如果要覆盖200米，需要使用中继器。"}
{"ID": 3670, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于以太网地址的描述，错误的是()", "A": "以太网地址就是通常所说的 MAC 地址", "B": "MAC 地址又称局域网硬件地址", "C": "MAC 地址是通过域名解析查得的", "D": "以太网地址通常存储在网卡中", "Answer": "C", "Explanation": "MAC 地址是通过ARP协议来获取的，与域名解析无关。"}
{"ID": 3671, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "同一局域网中的两个设备具有相同的静态 MAC 地址时，会发生 ().", "A": "首次引导的设备排他地使用该地址，第二个设备不能通信", "B": "最后引导的设备排他地使用该地址，另一个设备不能通信", "C": "在网络上的这两个设备都不能正确通信", "D": "两个设备都可以通信，因为它们可以读分组的整个内容，知道哪些分组是发给它们的，而不是发给其他站的", "Answer": "C", "Explanation": "当同一局域网中有两台设备具有相同的静态 MAC 地址时，它们都无法正确通信，因为其他设备无法区分这两台设备。"}
{"ID": 3672, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "快速以太网仍然使用CSMA/CD 协议，它采用( )而将最大电长度减少到 100m 的方法，使以太网的数据传输速率提高至100Mb/s。", "A": "改变最短倾长", "B": "改变最长帧长", "C": "保持最短帧长不变", "D": "保持最长帧长不变", "Answer": "C", "Explanation": "快以太网通过保持最短帧长不变的方法将最大电长度减少到 100m，从而提高了数据传输速率。"}
{"ID": 3673, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "无线局域网不使用 CSMA/CD 而使用 CSMA/CA 的原因是，无线局域网( ).", "A": "不能同时收发，无法在发送时接收信号", "B": "不需要在发送过程中进行冲突检测", "C": "无线信号的广播特性，使得不会出现冲突", "D": "覆盖范围很小，不进行冲突检测不影响正确性", "Answer": "B", "Explanation": "无线局域网不能简单地使用 CSMA/CD协议，特别是碰撞检测部分，原因如下: 第一，在无线局域网的适配器上，接收信号的强度往往远小于发送信号的强度，因此若要实现碰撞检测，那么硬件上的花费就会过大;第二，在无线局域网中，并非所有站点都能听见对方，由此引发了隐蔽站和暴露站问题，而'所有站点都能够听见对方'正是实现 CSMA/CD 协议必备的基础。"}
{"ID": 3674, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "划分虚拟局域网(VLAN)有多种方式，()不是正确的划分方式", "A": "基于交换机端口划分", "B": "基于网卡地址划分", "C": "基于用户名划分", "D": "基于网络层地址划分", "Answer": "C", "Explanation": "一般有三种划分 VLAN 的方法。1. 基于端口，将交换机的若干端口划为一个逻辑组，这种方法最简单、最有效，如果主机离开了原来的端口，那么就可能进入一个新的子网。2. 基于 MAC 地址，按 MAC 地址将一些机划分为一个子网，当主机的物理位从一个交换机移动到另一个交换机时，它仍然属于原来的子网。3. 基于网络层地址，根据网络层地址或协议划分 VLAN，这样 VLAN 就可以跨越路由器进行扩展，将多个局域网的主机连接在一起。"}
{"ID": 3675, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列协议中不属于 TCP/IP 协议族的是()", "A": "ICMP", "B": "TCP", "C": "FTP", "D": "HDLC", "Answer": "D", "Explanation": "TCP/IP 协议族主要包括 TCP、IP、ICMP、IGMP、ARP、RARP、UDP、DNS、FTP、HTTP 等。HDLC 是 ISO 提出的一个面向比特型的数据链路层协议，它不属于 TCP/IP 协议族。"}
{"ID": 3676, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "PPP 协议中的 LCP 的作用是()", "A": "在建立状态阶段协商数据链路协议的选项", "B": "配置网络层协议", "C": "检查数据链路层的错误，并通知错误信息", "D": "安全控制，保护通信双方的数据安全", "Answer": "A", "Explanation": "PPP 协议在默认配置下，地址和控制域总是常量，所以 LCP 提供了必要的机制，允许双方协商一个选项。在建立状态阶段，LCP 协商数据链路协议中的选项，它并不关心这些选项本身，只提供一个协商选择的机制。"}
{"ID": 3677, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于 PPP 协议和 HDLC 协议的叙述中，正确的是( )", "A": "PPP 协议是网络层协议，而 HDLC 协议是数据链路层协议", "B": "PPP 协议支持半双工或全双工通信", "C": "PPP 协议两端的网络层必须运行相同的网络层协议", "D": "PPP 协议是面向字节的协议，而 HDLC 协议是面向比特的协议", "Answer": "D", "Explanation": "PPP 和 HDLC 协议均为数据链路层协议，选项 A 错误。其中 HDLC 协议是面向比特的数据链路层协议。根据 PPP 的特点可知选项 B、C 错误，选项 D 正确。"}
{"ID": 3678, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于数据链路层设备的叙述中，错误的是 ( )。", "A": "网桥将网络划分成多个网段，一个网段的故障不会影响到另一个网段的运行", "B": "网桥可互联不同的物理层、不同的 MAC 子层及不同速率的以太网", "C": "交换机的每个端口结点所占用的带宽不会因为端口结点数目的增加而减少，且整个交换机的总带宽会随着端口结点的增加而增加", "D": "利用交换机可以实现虚拟局域网 (VLAN)，VLAN可以隔离冲突域，但不能隔离广播域", "Answer": "D", "Explanation": "交换机的优点是每个端口结点所占用的带宽不会因为端口结点数目的增加而减少，且整个交换机的总带宽会随着端口结点的增加而增加。另外，利用交换机可以实现虚拟局域网(VLAN)，VLAN不仅可以隔离冲突域，而且可以隔离广播域。因此选项C 正确，选项D 错误。"}
{"ID": 3679, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列()不是使用网桥分网络所带来的好处", "A": "减少冲突域的范围", "B": "在一定条件下增加了网络的带宽", "C": "过滤网段之间的数据", "D": "缩小了广播域的范围", "Answer": "D", "Explanation": "网桥可以隔离信息，将网络划分成多个网段，隔离出安全网段，防止其他网段内的用户非法访问。由于网络的分段，各网段相对独立，一个网段的故障不会影响到另一个网段的运行。因此选项B、C 正确。根据网桥的特点可知选项A 正确，选项D 错误。"}
{"ID": 3680, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "交换机比集线器提供更好的网络性能的原因是 ( )", "A": "交换机支持多对用户同时通信", "B": "交换机使用差错控制减少出错率", "C": "交换机使网络的覆盖范围更大", "D": "交换机无须设置，使用更方便", "Answer": "A", "Explanation": "交换机能隔离冲突域，工作在全双工状态，使网络中多对结点同时通信，提高了网络的利用这是交换机的优点。"}
{"ID": 3681, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以太网 A 中80%的通信量在本局域网内进行，其余 20%在本局域网与因特网之间进行，而局域网 B 正好相反，这两个局域网中，一个使用集线器，另一个使用交换机,则交换机应放置的局域网是().", "A": "以太网 A", "B": "以太网 B", "C": "任一以太网", "D": "都不合适", "Answer": "A", "Explanation": "交换机能隔离冲突域，而集线器连接的各网段属于一个冲突域。以太网 A 内的通信量很大若使用集线器，则冲突域变大，使整个网络效率降低，必须要用交换机把不同网段的通信隔离开。"}
{"ID": 3682, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "子网掩码的作用是什么？()", "A": "区分网络和主机部分", "B": "加密网络流量", "C": "控制访问权限", "D": "限制带宽", "Answer": "A"}
{"ID": 3683, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "OSPF协议的特点是什么？", "A": "基于链路状态的协议", "B": "基于距离向量的协议", "C": "基于UDP的协议", "D": "基于MAC地址的协议", "Answer": "A"}
{"ID": 3684, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "ICMP协议的作用是什么？", "A": "提供可靠的数据传输", "B": "在网络中发送控制信息", "C": "路由选择", "D": "进行数据加密", "Answer": "B"}
{"ID": 3685, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP协议提供的是一种什么类型的服务？()", "A": "可靠服务", "B": "无连接服务", "C": "面向连接服务", "D": "不可靠服务", "Answer": "B"}
{"ID": 3686, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在IP协议中，TTL的作用是什么？()", "A": "限制数据包的大小", "B": "限制数据包的生存时间", "C": "限制数据包的传输速率", "D": "限制数据包的优先级", "Answer": "B"}
{"ID": 3687, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "为什么需要对网络进行子网划分？()", "A": "提高网络性能", "B": "减少网络流量,提高网络性能,便于网络管理", "C": "提高网络可靠性", "D": "提高网络带宽", "Answer": "B"}
{"ID": 3688, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "给定IP地址为192.168.2.50，子网掩码为255.255.255.192，它所在的子网范围是什么？()", "A": "192.168.2.0 - 192.168.2.63", "B": "192.168.2.0 - 192.168.2.127", "C": "192.168.2.0 - 192.168.2.255", "D": "192.168.2.64 - 192.168.2.127", "Answer": "B"}
{"ID": 3689, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "路由器在网络中起到什么作用？()", "A": "连接两个不同的网络", "B": "提供网络安全", "C": "提供网络存储", "D": "控制网络流量", "Answer": "A"}
{"ID": 3690, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "RIP协议的特点是什么？()", "A": "基于链路状态的协议", "B": "基于距离向量的协议", "C": "基于UDP的协议", "D": "基于MAC地址的协议", "Answer": "B"}
{"ID": 3691, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在IPv6地址中，如何表示一个组播地址？()", "A": "以FF开头", "B": "以FE开头", "C": "以FD开头", "D": "以FC开头", "Answer": "A"}
{"ID": 3692, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP数据报的协议字段指示了什么信息？()", "A": "数据报携带的具体数据是什么协议的", "B": "数据报的总长度", "C": "数据报的目的IP地址", "D": "数据报的源IP地址", "Answer": "A"}
{"ID": 3693, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "IPv6地址的长度是多少位？()", "A": "32位", "B": "64位", "C": "96位", "D": "128位", "Answer": "D"}
{"ID": 3694, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "NAT技术的作用是什么？", "A": "提高网络性能", "B": "减缓IP地址的消耗", "C": "提高网络安全性", "D": "提高网络可靠性", "Answer": "B"}
{"ID": 3695, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "ARP协议的作用是什么？()", "A": "将IP地址转化为MAC地址", "B": "将MAC地址转化为IP地址", "C": "将域名转化为IP地址", "D": "将IP地址转化为域名", "Answer": "A"}
{"ID": 3696, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "RARP协议的主要功能是什么？()", "A": "将MAC地址转化为IP地址", "B": "将IP地址转化为MAC地址", "C": "将域名转化为IP地址", "D": "将IP地址转化为域名", "Answer": "A"}
{"ID": 3697, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "ICMP协议的主要应用是什么？()", "A": "数据报传输", "B": "错误信息报告", "C": "广播传输", "D": "组播传输", "Answer": "B"}
{"ID": 3698, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "路由算法的要求中，稳定性的含义是什么？", "A": "算法计算结果尽可能简单", "B": "算法能够适应网络变化", "C": "算法能够保持平衡", "D": "算法能够持久存在", "Answer": "B"}
{"ID": 3699, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "RIP协议中度量路径的标准是什么？()", "A": "带宽", "B": "跳数", "C": "延迟", "D": "数据包大小", "Answer": "B"}
{"ID": 3700, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "BGP协议是运行在什么之间的协议？()", "A": "路由器与交换机", "B": "主机与路由器", "C": "AS之间", "D": "同一AS内部", "Answer": "C"}
{"ID": 3701, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP数据报的首部长度字段占几位？()", "A": 4, "B": 8, "C": 12, "D": 16, "Answer": "A"}
{"ID": 3702, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "网络层的主要功能包括什么？()", "A": "数据透明传送", "B": "电源管理", "C": "信号放大", "D": "数据压缩", "Answer": "A"}
{"ID": 3703, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在IPv6地址中，有多少位用于主机标识？()", "A": "32位", "B": "64位", "C": "96位", "D": "128位", "Answer": "C"}
{"ID": 3704, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "路由器在网络中的作用是什么？()", "A": "连接两个不同的网络", "B": "提供网络安全", "C": "提供电源管理", "D": "控制网络流量", "Answer": "A"}
{"ID": 3705, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "RIP协议的特点是什么？()", "A": "基于距离-向量的协议", "B": "基于链路状态的协议", "C": "基于MAC地址的协议", "D": "基于UDP的协议", "Answer": "A"}
{"ID": 3706, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "Traceroute应用的主要功能是什么？()", "A": "测试网络带宽", "B": "探测IP数据报路径", "C": "测试网络故障", "D": "控制网络流量", "Answer": "B"}
{"ID": 3707, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "网络层的主要目的是( )", "A": "在邻接结点间进行数据报传输", "B": "在邻接结点间进行数据报可靠传输", "C": "在任意结点间进行数据报传输", "D": "在任意结点间进行数据报可靠传输", "Answer": "C"}
{"ID": 3708, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "路由器连接的异构网络是指 ( ).", "A": "网络的拓扑结构不同", "B": "网络中计算机操作系统不同", "C": "数据链路层和物理层均不同", "D": "数据链路层协议相同，物理层协议不同", "Answer": "C"}
{"ID": 3709, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "网络中发生了拥塞，根据是()", "A": "随着通信子网负载的增加，吞吐量也增加", "B": "网络结点接收和发出的分组越来越少", "C": "网络结点接收和发出的分组越来越多", "D": "随着通信子网负载的增加，吞吐量反而降低", "Answer": "D"}
{"ID": 3710, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "(未使用 CIDR)当一个 IP 分组进行直接交付时，要求发送方和目的站具有相同的( )", "A": "IP地址", "B": "主机号", "C": "端口号", "D": "子网地址", "Answer": "D"}
{"ID": 3711, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "Internet 的网络层含有4个重要的协议，分别为()", "A": "IP，ICMP，ARP，UDP", "B": "TCP，ICMP，UDP，ARP", "C": "IP，ICMP，ARP，RARP", "D": "UDP，IP，ICMP，RARP", "Answer": "C"}
{"ID": 3712, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "IPv4 分组首部中有两个有关长度的字段:首部长度和总长度，其中 ( )", "A": "首部长度字段和总长度字段都以 8bit 为计数单位", "B": "首部长度字段以 8bit 为计数单位，总长度字段以 32bit 为计数单位", "C": "首部长度字段以 32bit 为计数单位，总长度字段以 8bit 为计数单位", "D": "首部长度字段和总长度字段都以 32bit 为计数单位", "Answer": "C"}
{"ID": 3713, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP 分组中的检验字段检查范围是()", "A": "整个 IP 分组", "B": "仅检查分组首部", "C": "仅检查数据部分", "D": "以上皆检查", "Answer": "B"}
{"ID": 3714, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下关于 IP 分组的分片与组装的描述中，错误的是 ( )", "A": "IP 分组头中与分片和组装相关的字段是: 标识、标志与片偏移", "B": "IP分组规定的最大长度为 65535B", "C": "以太网的MTU为1500B", "D": "片偏移的单位是 4B", "Answer": "D"}
{"ID": 3715, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列地址中，属于单播地址的是( )", "A": "172.31.128.255/18", "B": "10.255.255.255", "C": "192.168.24.59/30", "D": "224.105.5.211", "Answer": "A"}
{"ID": 3716, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "访问因特网的每台主机都需要分配 IP 地址(假定采用默认子网码)，下列可以分配给主机的 IP 地址是( )", "A": "192.46.10.0", "B": "110.47.10.0", "C": "127.10.10.17", "D": "211.60.256.21", "Answer": "B"}
{"ID": 3717, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "把IP 网络划分成子网，这样做的好处是 ( )", "A": "增加冲突域的大小", "B": "增加主机的数量", "C": "减少广播域的大小", "D": "增加网络的数量", "Answer": "C"}
{"ID": 3718, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "CIDR技术的作用是( )", "A": "把小的网络汇聚成大的超网", "B": "把大的网络划分成小的子网", "C": "解决地址资源不足的问题", "D": "由多台主机共享同一个网络地址", "Answer": "A"}
{"ID": 3719, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "为了解决IP 地址耗尽的问题，可以采用以下一些措施，其中治本的是( )", "A": "划分子网", "B": "采用无类比编址 CIDR", "C": "采用网络地址转换 NAT", "D": "采用IPv6", "Answer": "D"}
{"ID": 3720, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "主机A和主机B的IP地址分别为216.12.31.20和21.13.32.21，要想让A和B工作在同一个IP子网内，应该给它们分配的子网掩码是( )", "A": "255.255.255.0", "B": "255.255.0.0", "C": "255.255.255.255", "D": "255.0.0.0", "Answer": "D"}
{"ID": 3721, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "与IPv4相比，IPv6( )", "A": "采用 32 位 IP 地址", "B": "增加了头部字段数目", "C": "不提供 QoS 保障", "D": "没有提供校验和字段", "Answer": "D"}
{"ID": 3722, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "用于域间路由的协议是( )", "A": "RIP", "B": "BGP", "C": "OSPF", "D": "ARP", "Answer": "B"}
{"ID": 3723, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在 RIP 中，到某个网络的距离值为 16，其意义是( )", "A": "该网络不可达", "B": "存在循环路由", "C": "该网络为直接连接网络", "D": "到达该网络要经过15 次转发", "Answer": "A"}
{"ID": 3724, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以太网组播IP 地址224.215.145.230应该映到的组播MAC地址是()", "A": "01-00-5E-57-91-E6", "B": "01-00-5E-D7-91-E6", "C": "01-00-5E-5B-91-E6", "D": "01-00-5E-55-91-E6", "Answer": "A"}
{"ID": 3725, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列地址中，()是组播地址", "A": "10.255.255.255", "B": "228.47.32.45", "C": "192.32.44.59", "D": "172.16.255.255", "Answer": "B"}
{"ID": 3726, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "移动IP为移动主机设置了两个IP地址:主地址和辅地址，()", "A": "这两个地址都是固定的", "B": "这两个地址随主机的移动而动态改变", "C": "主地址固定，辅地址动态改变", "D": "主地址动态改变，辅地址固定", "Answer": "C"}
{"ID": 3727, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "路由器主要实现( )的功能", "A": "数据链路层、网络层与应用层", "B": "网络层与传输层", "C": "物理层、数据链路层与网络层", "D": "物理层与网络层", "Answer": "C"}
{"ID": 3728, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在下列网络设备中，传输延迟时间最大的是 ( )", "A": "局域网交换机", "B": "网桥", "C": "路由器", "D": "集线器", "Answer": "C"}
{"ID": 3729, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在路由表中设置一条默认路由，则其目的地址和子网掩码应分别置为 ( )", "A": "192.168.1.1、255.255.255.0", "B": "127.0.0.0、255.0.0.0", "C": "0.0.0.0、0.0.0.0", "D": "0.0.0.0、255.255.255.255", "Answer": "C"}
{"ID": 3730, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在路由器互联的多个局域网的结构中，要求每个局域网 ( ).", "A": "物理层协议可以不同，而数据链路层及其以上的高层协议必须相同", "B": "物理层、数据链路层协议可以不同，而数据链路层以上的高层协议必须相同", "C": "物理层、数据链路层、网络层协议可以不同，而网络层以上的高层协议必须相同", "D": "物理层、数据链路层、网络层及高层协议都可以不同", "Answer": "C", "Explanation": "路由器是第三层设备，向传输层及以上层次隐藏下层的具体实现，所以物理层、数据链路层网络层协议可以不同。而网络层之上的协议数据是路由器所不能处理的，因此网络层以上的高层协议必须相同。本题容易误选 B，主要原因是在目前的互联网中广泛使用的是 TCP/IP 协议族，在网络层用的多是 IPv4，所以误认为网络层协议必须相同。而实际上，使用特定的路由器连接 IPV4与IPv6网络，就是典型的网络层协议不同而实现联的例子。"}
{"ID": 3731, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在因特网中，一个路由器的路由表通常包含 ( )", "A": "目的网络和到达目的网络的完整路径", "B": "所有目的主机和到达该目的主机的完整路径", "C": "目的网络和到达该目的网络路径上的下一个路由器的 IP 地址", "D": "目的网络和到达该目的网络路径上的下一个路由器的 MAC 地址", "Answer": "C", "Explanation": "路由器是网络层设备，其任务是转发分组。每个路由器都维护一个路由表以决定分组的转发。路由表通常包含目的网络和到达该目的网络路径上的下一个路由器的 IP 地址。"}
{"ID": 3732, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在因特网中，IP 分组的传输需要经过源主机和中间路由器到达目的主机，通常( )", "A": "源主机和中间路由器都知道 IP 分组到达目的主机需要经过的完整路径", "B": "源主机和中间路由器都不知道 IP 分组到达目的主机需要经过的完整路径", "C": "源主机知道 IP 分组到达目的主机需要经过的完整路径，而中间路由器不知道", "D": "源主机不知道 IP 分组到达目的主机需要经过的完整路径，而中间路由器知道", "Answer": "B", "Explanation": "IP 分组的传输需要经过源主机和中间路由器到达目的主机，通常情况下，源主机和中间路由器都不知道 IP 分组到达目的主机需要经过的完整路径。"}
{"ID": 3733, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列协议中于网络层协议的是( )I.IP II.TCP III.FTP IV.CMP", "A": "I和II", "B": "II和III", "C": " III和IV", "D": "I和IV", "Answer": "D", "Explanation": "TCP 属于传输层协议，FTP 属于应用层协议，只有IP 和CMP 属于网络层协议"}
{"ID": 3734, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列描述中，()不是软件定义网络(SDN)的特点", "A": "控制与转发功能分离", "B": "控制层面集中化", "C": "接口开放可编程", "D": "Openflow 取代了路由协议", "Answer": "D", "Explanation": "软件定义网络(SDN)的特点包括控制与转发功能分离、控制层面集中化和接口开放可编程。Openflow 是一种网络协议，用于控制SDN中的交换机，不是取代了路由协议。"}
{"ID": 3735, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "动态路由选择和静态路由选择的主要区别是( )", "A": "动态路由选择需要维护整个网络的拓扑结构信息，而静态路由选择只需要维护部分拓扑结构信息", "B": "动态路由选择可随网络的通信量或拓扑变化而自适应地调整，而静态路由选择则需要手工去调整相关的路由信息", "C": "动态路由选择简单且开销小，静态路由选择复杂且开销大", "D": "动态路由选择使用路由表，静态路由选择不使用路由表", "Answer": "B", "Explanation": "静态路由选择使用手动配置的路由信息，实现简单且开销小，需要维护整个网络的拓扑结构信息，但不能及时适应网络状态的变化。动态路由选择通过路由选择协议，自动发现并维护路由信息，能及时适应网络状态的变化，实现复杂且开销大。动态路由选择和静态路由选择都使用路由表。"}
{"ID": 3736, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于路由算法的描述中，( )是错误的", "A": "静态路由有时也被称为非自适应的算法", "B": "静态路由所使用的路由选择一旦启动就不能修改", "C": "动态路由也称自适应算法，会根据网络的拓扑变化和流量变化改变路由决策", "D": "动态路由算法需要实时获得网络的状态", "Answer": "B", "Explanation": "静态路由又称非自适应算法，它不会估计流和结构来调整其路由决策。但这并不说明路由选择是不能改变的，事实上用户可以随时配置路由表。而动态路由也称自适应算法，需要实时获取网络的状态，并根据网络的状态适时地改变路由决策。"}
{"ID": 3737, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "关于链路状态协议的描述，( )是错误的", "A": "仅相邻路由器需要交换各自的路由表", "B": "全网路由器的拓扑数据库是一致的", "C": "采用洪泛技术更新链路变化信息", "D": "具有快速收敛的优点", "Answer": "A", "Explanation": "在链路状态路由算法中，每个路由器在自己的链路状态变化时，将链路状态信息用洪泛法传送给网络中的其他路由器。发送的链路状态信息包括该路由器的相邻路由器及所有相邻链路的状态，选项A 错误。链路状态协议具有快速收的优点，它能够在网络拓扑发生变化时，立即进行路由的重新计算，并及时向其他路由器发送最新的链路状态信息，使得各路由器的链路状态表能够尽量保持一致，选项 B、C、D 正确。"}
{"ID": 3738, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在距离-向量路由协议中，( )最可能导致路由回路的问题", "A": "由于网络带宽的限制，某些路由更新数据报被丢弃", "B": "由于路由器不知道整个网络的拓扑结构信息，当收到一个路由更新信息时，又将该更新信息发回自己发送该路由信息的路由器", "C": "当一个路由器发现自己的一条直接相邻链路断开时，未能将这个变化报告给其他路由器", "D": "慢收敛导致路由器接收了无效的路由信息", "Answer": "D", "Explanation": "在距离-向量路由协议中，“好消息传得快，而坏消息传得慢”，这就导致了当路由信息发生变化时，该变化未能及时地被所有路由器知道，而仍然可能在路由器之间进行传递，这就是“慢收敛”现象。慢收敛是导致发生路由回路的根本原因。"}
{"ID": 3739, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于路由器交付的说法中，错误的是 ( ) I.路由选择分直接交付和间接交付 II.直接交付时，两台机器可以不在同一物理网段内  III.间接交付时，不涉及直接交付 IV.直接交付时，不涉及路由器", "A": "I和II", "B": "II和III", "C": "III和IV", "D": "I和IV", "Answer": "B", "Explanation": "路由选择分为直接交付和间接交付，当发送站与目的站在同一网段内时，就使用直接交付反之使用间接交付，因此 I 正确、II 错误。间接交付的最后一个路由器肯定直接交付，错误直接交付在同一网段内，因此不涉及路由器，IV 正确。"}
{"ID": 3740, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于分层路由的描述中，( )是错误的", "A": "采用分层路由后，路由器被划分成区域", "B": "每个路由器不仅知道如何将分组路由到自己区域的目标地址，而且知道如何路由到其他区域", "C": "采用分层路由后，可以将不同的网络连接起来", "D": "对于大型网络，可能需要多级的分层路由来管理", "Answer": "B", "Explanation": "采用分层路由后，路由器被划分为区域，每个路由器知道如何将分组路由到自己所在区域内的目标地址，但对于其他区域内的结构毫不知情。当不同的网络相互连接时，可将每个网络当作一个独立的区域，这样做的好处是一个网络中的路由器不必知道其他网络的拓扑结构。"}
{"ID": 3741, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "如果 IPv4 的分组太大，会在传输中被分片，那么在( ) 将对分片后的数据报重组", "A": "中间路由器", "B": "下一跳路由器", "C": "核心路由器", "D": "目的主机", "Answer": "D", "Explanation": "数据报被分片后，每个分片都将独立地传输到目的地，其间有可能会经过不同的路径，而最后在目的端主机分组才能被重组。"}
{"ID": 3742, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于 IP 分组分片基本方法的描述中，错误的是( )。", "A": "IP 分组长度大于 MTU 时，就必须对其进行分片", "B": "DF=1，分组的长度又超过 MTU 时，则丢弃该分组，不需要向源主机报告", "C": "分片的 MF 值为1表示接收到的分片不是最后一个分片", "D": "属于同一原始 IP 分组的分片具有相同的标识", "Answer": "B", "Explanation": "如果分组长度超过 MTU，那么当 DF =1时，弃该分组，并且要用ICMP 差错报文向源主机报告;当DF=0时，进行分片，MF =1表示后面还有分片。"}
{"ID": 3743, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列地址中，属于子网86.32.0.0/12的地址是()", "A": "86.33.224.123", "B": "86.79.65.126", "C": "86.79.65.216", "D": "86.68.206.154", "Answer": "A", "Explanation": "CIDR 地址块 86.32.0.0/12 的网络前为12位，说明第2个字节的前位在前中第2个字节 32的二进制形式为 00100000。给出的4个地址的前8位均相同，而第2个字节的前4位分别是0010,0100,0100,0100，所以本题答案为A。"}
{"ID": 3744, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "不考虑NAT，在Internet 中，IP 数据报从源结点到目的结点可能需要经过多个网络和路由器。在整个传输过程中，IP 数据报头部中的( )。", "A": "源地址和目的地址都不会发生变化", "B": "源地址有可能发生变化而目的地址不会发生变化", "C": "源地址不会发生变化而目的地址有可能发生变化", "D": "源地址和目的地址都有可能发生变化", "Answer": "A", "Explanation": "在Internet 中，IP数据报从源结点到目的结点可能需要经过多个网络和路由器。当一个路由器接收到一个 IP 数据时，路由器会根据目的地址的路由表选择下一跳的地址，并不改变源地址的取值。即使IP数据报在传输过程中被分片时，原始数据报的源地址会被复制到每个分片的首部，因此在整个传输过程中，IP 数据报首部的源地址都不会发生变化。"}
{"ID": 3745, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个网段的网络号为 198.90.10.0/27，最多可以分成( )个子网，每个子网最多具有()个有效的 IP 地址。", "A": "8，30", "B": "4，62", "C": "16，14", "D": "32，6", "Answer": "A", "Explanation": "由题可知，主机号有 5 位，若主机号只占1位，则没有有效的IP地址可供分配（排除0和1就没有了），最少2位表示机号，因此还剩3位可以表示子网号，所以最多可以分成2^3=8个子网。而当5位都表示主机数，即只有1个子网时，每个子网最多具有2^5-2=30个有效的IP地址（除了全0和全1）。"}
{"ID": 3746, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "路由表错误和软件故障都可能使得网络中的数据形成传输环路而无限转发环路的分组，IPv4 协议解决该问题的方法是 ( )。", "A": "报文分片", "B": "设定生命期", "C": "增加校验和", "D": "增加选项字段", "Answer": "B", "Explanation": "为每个IP 分组设定生存时间(TTL)，每经过一个路由器，TTL减1，TTL为0时，路由器就不再转发该分组。这可以避免分组在网络中无限循环下去。"}
{"ID": 3747, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列对IP分组的分片和重组的描述中，正确的是( )", "A": "IP 分组可以被源主机分片，并在中间路由器进行重组", "B": "IP 分组可以被路径中的路由器分片，并在目的主机进行重组", "C": "IP 分组可以被路径中的路由器分片，并在中间路由器上进行重组", "D": "IP 分组可以被路径中的路由器分片，并在最后一跳的路由器上进行重组", "Answer": "B", "Explanation": "当路由器准备将IP分组发送到网络上，而该网络又无法将整个分组一次发送时，路由器必须将该分组分片，使其长度能满足这一网络对分组长度的限制。IP分片可以独立地通过各个路径发送，而且在传输过程中仍然存在分片的可能（不同网络的MTU可能不同），因此不能由中间路由器进行重组。分片后的IP分组直至到达目的主机后才能汇集在一起，并且甚至不一定以原先的次序到达。这样，进行接收的主机都要求支持重组能力。"}
{"ID": 3748, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某单位分配了1个B类地址，计划将内部网络划分成35个子网，将来可能增加16个子网，每个子网的主机数目接近800台，则可行的掩码方案是( )", "A": "255.255.248.0", "B": "255.255.252.0", "C": "255.255.254.0", "D": "255.255.255.0", "Answer": "B", "Explanation": "未进行子网划分时，B类地址有16位作为主机位。由于需要划分35+16=51个子网，2^5<51<2^6，那么需要从主机位划出6位作为子网号，剩下的10位可用于主机，即2^{10}的数为1024台主机，满足题目要求。因此，可行的掩码方案是255.255.252.0。"}
{"ID": 3749, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某子网的子网掩码为255.255.255.224，一共给4台主机分配了IP地址，其中一台因IP地址分配不当而存在通信故障。这一台主机的IP地址是( )", "A": "202.3.1.33", "B": "202.3.1.65", "C": "202.3.1.44", "D": "202.3.1.55", "Answer": "B", "Explanation": "在本题的条件下，某台主机不能正常通信意味着它的IP地址与其他三台主机不在同一个子网。子网掩码255.255.255.224可以分为8个子网，而前3个子网的地址范围分别是202.3.1.0-202.3.1.31、202.3.1.32-202.3.1.63和202.3.1.64-202.3.1.95。所以，该台主机的IP地址应在202.3.1.32-202.3.1.63范围内，符合B选项。"}
{"ID": 3750, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "位于不同子网中的主机之间相互通信时，下列说法中正确的是 ( )", "A": "路由器在转发 IP 数据报时，重新封装源硬件地址和目的硬件地址", "B": "路由器在转发 IP 数据报时，重新封装源 IP 地址和目的IP 地址", "C": "路由器在转发 IP 数据报时，重新封装目的硬件地址和目的IP 地址", "D": "源站点可以直接进行 ARP 广播得到目的站点的硬件地址", "Answer": "A", "Explanation": "IP 数据报的首部既有源 IP 地址，又有目的 IP 地址在通信中路只会根据目的 IP 地址进行路由选择。IP 数据报在通信过程中，首部的源 IP 地址和目的 IP 地址经过路由器时不会发生改变。ARP 广播只在子网中传播，由于相互通信的主机不在同一个子网内，因此不可以直接通过 ARP 广播得到目的站的硬件地址。硬件地址只具有本地意义，因此每当路由器转发 IP 数据报到一个具体的网络中时，都需要重新封装源硬件地址和目的硬件地址。注意:路由器在接收到分组后，剥离该分组的数据链路层协议头，然后在分组被转发之前给分组加上一个新的链路层协议头。"}
{"ID": 3751, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列情况需要启动 ARP 请求的是( )", "A": "主机需要接收信息，但 ARP 表中没有源IP 地址与MAC 地址的映射关系", "B": "主机需要接收信息，但 ARP 表中已有源IP 地址与 MAC 地址的映射关系", "C": "主机需要发送信息，但ARP 表中没有目的 IP 地址与MAC 地址的映射关系", "D": "主要需要发送信息，但ARP 表中已有目的IP 地址与MAC地址的映射关系", "Answer": "C", "Explanation": "当源主机要向本地局域网上的某主机发送 IP 数据报时，先在其 ARP 缓存中查看有无目的 IP 地址与 MAC 地址映射。有，则把这个硬件地址写入 MAC 帧，然后通过局域网把该 MAC 帧发往目的硬件地址；若没有，则先通过广播 ARP 请求分组，在获得目的主机的 ARP 应答分组后，将目的主机的 IP 地址与硬件地址的映射写入 ARP 缓存中。如目的机不在本局域网上，那么将 IP 分组发送给本局域网上的路由器，当然要先通过同样的方法获得路由器的 IP 地址和硬件地址的映射关系。"}
{"ID": 3752, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于 ICMP 报文的说法中，错误的是( )", "A": "ICMP 报文封装在数据链路层帧中发送", "B": "ICMP 报文用于报告 IP 数据报发送错误", "C": "ICMP 报文封装在 IP 数据报中发送", "D": "ICMP 报文本身出错将不再处理", "Answer": "A", "Explanation": "ICMP 报文属于网络层协议，作为 IP 层数据，加上数据的首部，组成 IP 数据报发送出去。"}
{"ID": 3753, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于 ICMP 的描述中，错误的是( )", "A": "IP 缺乏差错控制机制", "B": "IP 缺乏主机和网络管理查询机制", "C": "ICMP 报文分为差错报告和查询两类", "D": "作为 IP 的补充，ICMP 报文将直接封装在以太帧中", "Answer": "D", "Explanation": "ICMP 是一个网络层协议，但是其报文仍然要封装在 IP 分组中发送。"}
{"ID": 3754, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于 ICMP 差错报文的描述中，错误的是 ()", "A": "对于已经携带 ICMP 差错报文的分组，不再产生 ICMP 差错报文", "B": "对于已经分片的分组，只对第一个分片产生 ICMP 差错报文", "C": "差错报文 PING 使用了 ICMP 差错报文", "D": "对于组播的分组，不产生 ICMP 差错报文", "Answer": "C", "Explanation": "ICMP是一个网络层协议，但是其文仍然要封装在IP分组中发送。"}
{"ID": 3755, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于IPv6的描述中，错误的是( )", "A": "IPv6的首部长度是不可变的", "B": "IPv6不允许分片", "C": "IPv6采用了 16B的地址，在可预见的将来不会用完", "D": "IPv6使用了首部校验和来保证传输的正确性", "Answer": "D", "Explanation": "IPv6 的首部长度是固定的，因此不需要首部长度字段。IPv6 取消了校验和字段，这样就加快了路由器处理数据报的速度。"}
{"ID": 3756, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于自治系统的描述中，不正确的是( )", "A": "自治系统划分区域的好处是，将利用洪泛法交换链路状态信息的范围局限在每个区域内，而不是整个自治系统", "B": "采用分层划分区域的方法使交换信息的种类增多，同时也使 OSPF 协议更加简单", "C": "OSPF 协议将一个自治系统再划分为若干更小的范围，称为区域", "D": "在一个区域内部的路由器只知道本区域的网络拓扑，而不知道其他区域的网络拓扑的情况", "Answer": "B", "Explanation": "采用分层次划分区域的方法使交换信息的种类增多了，同时也使 OSPF 协议更加复杂了，但这样做却能使每个区域内部交换路由信息的通信大大减少，进而使 OSPF 协议能够用于规模很大的自治系统中。"}
{"ID": 3757, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在计算机网络中，路由选择协议的功能不包括( )", "A": "交换网络状态或通路信息", "B": "选择到达目的地的最佳路径", "C": "更新路由表", "D": "发现下一跳的物理地址", "Answer": "D", "Explanation": "发现下一跳的物理地址一般是通过其他方式(如 ARP) 来实现的，不属于路由选择协议的功能。"}
{"ID": 3758, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在 RIP 中，假设路由器 X 和路由器 K 是两个相邻的路由器，X 向 K 说：“我到目的网络 Y 的距离为 N”，则收到此信息的 K 就知道：“若将到网络 Y 的下一个路由器选为 X，则我到网络 Y 的距离为( )” (假设 N 小于 15)", "A": "N", "B": "N-1", "C": 1, "D": "N+1", "Answer": "D", "Explanation": "RIP 规定，每经过一个路由器，距离（跳数）加1。"}
{"ID": 3759, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于 RIP 的描述中，错误的是 ( )", "A": "RIP 是基于距离-向量路由选择算法的", "B": "RIP 要求内部路由器将它关于整个 AS 的路由信息发布出去", "C": "RIP 要求内部路由器向整个 AS 的路由器发布路由信息", "D": "RIP 要求内部路由器按照一定的时间间隔发布路由信息", "Answer": "C", "Explanation": "RIP 要求内部路由器向其相邻的路由器发送路由信息，而不是整个 AS 的路由器。"}
{"ID": 3760, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于 RIP 和 OSPF 协议的叙述中，错误的是 ( )", "A": "RIP 和 OSPF 协议都是网络层协议", "B": "在进行路由信息交换时，RIP 中的路由器仅向自己相邻的路由器发送信息，OSPF 协议中的路由器向本自治系统中的所有路由器发送信息", "C": "在进行路由信息交换时，RIP 中的路由器发送的信息是整个路由表，OSPF 协议中的路由器发送的信息只是路由表的一部分", "D": "RIP 的路由器不知道全网的拓扑结构，协议的路由器都知道自己所在区域的拓扑结构", "Answer": "A", "Explanation": "OSPF 是网络层协议，而 RIP 是应用层协议。"}
{"ID": 3761, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于 OSPF 协议的描述中，最准确的是 ( )", "A": "OSPF 协议根据链路状态法计算最佳路由", "B": "OSPF 协议是用于自治系统之间的外部网关协议", "C": "OSPF 协议不能根据网络通信情况动态地改变路由", "D": "OSPF 协议只适用于小型网络", "Answer": "A", "Explanation": "OSPF 协议根据链路状态法计算最佳路由。 OSPF 协议是用于自治系统内部的内部网关协议。 OSPF 协议根据网络通信情况动态地改变路由。 OSPF 协议适用于中大型网络。"}
{"ID": 3762, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于OSPF 协议特征的描述中，错误的是 ( )", "A": "OSPF 协议将一个自治域划分成若干域，有一种特殊的域称为主干区域", "B": "域之间通过区域边界路由器互联", "C": "在自治系统中有 4类路由器:区域内部路由器、主干路由器、区域边界路由器和自治域边界路由器", "D": "主干路由器不能兼作区域边界路由器", "Answer": "D", "Explanation": "主干区域中，用于连接主干区域和其他下层区域的路由器称为区域边界路由器。只要是在主干区域中的路由器，就都称为主干路由器，因此主干路由器可以兼作区域边界路由器。"}
{"ID": 3763, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于组播概念的描述中，错误的是()", "A": "在单播路由选择中，路由器只能从它的一个接口转发收到的分组", "B": "在组播路由选择中，路由器可以从它的多个接口转发收到的分组", "C": "用多个单播仿真一个组播时需要更多的带宽", "D": "用多个单播仿真一个组播时时延基本上是相同的", "Answer": "D", "Explanation": "多个单播可以仿真组播，但是一个组播所需要的带宽要小于多个单播带宽之和；用多个单播仿真一个组播时，路由器的时延将很大，而处理一个组播分组的时延是很小的。"}
{"ID": 3764, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在设计组播路由时，为了避免路由环路，()", "A": "采用了水平分割技术", "B": "构造组播转发树", "C": "采用了IGMP", "D": "通过生存时间 (TTL)字段", "Answer": "B", "Explanation": "由于树具有不存在环路的特性，因此构造一个组播转发树，通过该转发树既能将主播分组传送到组内的每台主机，又能避免环路。水平分割用于避免离散路由中的无穷计数问题。TTL字段用于防止组播分组由于环路而在网络中无限循环。"}
{"ID": 3765, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于移动IP 基本工作原理的描述中，错误的是( )", "A": "移动IP 的基本工作过程可以分为代理发现、注册、分组路由与注销 4个阶段", "B": "结点在使用移动IP 进行通信时，归属代理和外部代理之间需要建立一条隧道", "C": "移动结点到达新的网络后，通过注册过程把自己新的可达信息通知外部代理", "D": "移动IP 的分组路由可以分为单播、广播与组播", "Answer": "C", "Explanation": "选项C把移动结点新的可达信息(转交地址通知归属代理。这样，归属代理就可将发往移动结点的分组通过隧道转到转交地址(外部代理)，再由外部代理交付给移动结点。"}
{"ID": 3766, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一台主机移动到了另一个LAN 中，如果一个分组到达了它原来所在的LAN中，那么分组会被转发给()", "A": "移动IP的本地代理", "B": "移动IP 的外部代理", "C": "主机", "D": "丢弃", "Answer": "A", "Explanation": "当一个分组到达用户的本地LAN时，它被转发给某一台与本地LAN相连的路由器。该路由器寻找目的主机，这时本地代理响应该请求，将这些分组封装到一些新的分组的载荷，并将新分组发送给外部代理，外部代理将原分组解出来后，移交给移动后的主机。"}
{"ID": 3767, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "如果一台主机的IP地址为160.80.40.20/16，那么当它移动到了另一个不属于160.80/16子网的网络中时，它将( )", "A": "可以直接接收和直接发送分组，没有任何影响", "B": "既不可以直接接收分组，也不可以直接发送分组", "C": "不可以直接发送分组，但可以直接接收分组", "D": "可以直接发送分组，但不可以直接接收分组", "Answer": "B", "Explanation": "因为所有路由器都是按照子网来安排路由的，所以所有发往主机160.80.40.20/16的分组都会被发送到160.80/16子网中。当主机离开了这个子网时，它既不能直接接收分组，也不能直接发送分组，但可以通过转交地址来间接接收和发送分组。"}
{"ID": 3768, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "要控制网络上的广播风暴，可以采用的方法是 ( )", "A": "用网桥将网络分段", "B": "用路由器将网络分段", "C": "将网络转接成10Base-T", "D": "用网络分析仪跟踪正在发送广播信息的计算机", "Answer": "B", "Explanation": "网桥和交换机是第二层设备，能够分割冲突域，但不能分割广播域。路由器是第三层设备，不转发全网广播(目的地255.255.25.255)，因此可以分割广播域。"}
{"ID": 3769, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "路由器的路由表通常包含 ( )", "A": "需要包含到达所有主机的完整路径信息", "B": "需要包含所有到达目的网络的完整路径信息", "C": "需要包含到达目的网络的下一跳路径信息", "D": "需要包含到达所有主机的下一跳路径信息", "Answer": "C", "Explanation": "路由表中包含到目的网络的下一跳路径信息。路由器不可能包含到达所有主机的下一跳信息，否则路由转发将是不可想象的。"}
{"ID": 3770, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "TCP协议提供了哪种服务？()", "A": "面向连接的可靠传输", "B": "无连接的不可靠传输", "C": "无连接的可靠传输", "D": "面向连接的不可靠传输", "Answer": "A"}
{"ID": 3771, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "传输层的错误检测通常采用什么机制？()", "A": "校验和", "B": "CRC校验", "C": "摘要算法", "D": "奇偶校验", "Answer": "A"}
{"ID": 3772, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "校验和的计算是基于哪个字段？()", "A": "首部", "B": "数据部分", "C": "端口号", "D": "标识符", "Answer": "B"}
{"ID": 3773, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "拥塞控制的目标是什么？()", "A": "提高网络吞吐量", "B": "降低网络延迟", "C": "避免网络拥塞", "D": "增加网络带宽", "Answer": "C"}
{"ID": 3774, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "拥塞控制的实现中，通常采用的算法是？()", "A": "TCP Tahoe", "B": "UDP Vegas", "C": "IP Reno", "D": "ICMP Cubic", "Answer": "A"}
{"ID": 3775, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "传输层中提供安全性的协议是？()", "A": "SSL/TLS", "B": "HTTP", "C": "UDP", "D": "ICMP", "Answer": "A"}
{"ID": 3776, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "SSL/TLS协议是通过什么方式实现数据加密？()", "A": "对称加密和公钥加密", "B": "非对称加密", "C": "散列函数", "D": "摘要算法", "Answer": "A"}
{"ID": 3777, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "传输层的端口号范围是多少？()", "A": "0-255", "B": "256-511", "C": "512-1023", "D": "0-65535", "Answer": "D"}
{"ID": 3778, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "传输层的协议数据单元称为？()", "A": "数据包", "B": "帧", "C": "段或报文", "D": "数据段", "Answer": "C"}
{"ID": 3779, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列不属于通信子网的是 ( )", "A": "物理层", "B": "数据链路层", "C": "网络层", "D": "传输层", "Answer": "D"}
{"ID": 3780, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在 TCP/IP 参考模型中，传输层的主要作用是在互联网的源主机和目的主机对等实体之间建立用于会话的 ( )", "A": "操作连接", "B": "点到点连接", "C": "控制连接", "D": "端到端连接", "Answer": "D"}
{"ID": 3781, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下( )能够唯一确定一个在互联网上通信的进程", "A": "主机名", "B": "IP 地址及 MAC 地址", "C": "MAC地址及端口号", "D": "IP地址及端口号", "Answer": "D"}
{"ID": 3782, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在( ) 范围内的端口号被称为“熟知端口号”并限制使用。这就意味着这些端口号是为常用的应用层协议如FTP、HTTP 等保留的。", "A": "0~127", "B": "0-255", "C": "0~511", "D": "0~1023", "Answer": "D"}
{"ID": 3783, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "关于TCP和UDP端口的下列说法中，正确的是( )", "A": "TCP和UDP 分别拥有自己的端口号，它们互不干扰，可以共存于同一台主机", "B": "TCP和UDP 分别拥有自己的端口号，但它们不能共存于同一台主机", "C": "TCP和UDP 的端口没有本质区别，但他们不能共存于一台主机", "D": "当一个TCP 连接建立时，它们互不干扰，不能共存于同一台主机", "Answer": "A"}
{"ID": 3784, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下说法错的是( )。", "A": "传输层是OSI参考模型的第四层", "B": "传输层提供的是主机间的点到点数据传输", "C": "TCP是面向连接的，UDP是无连接的", "D": "TCP 进行流量控制和拥塞控制，而UDP 既不进行流量控制，又不进行拥塞控制", "Answer": "B"}
{"ID": 3785, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "UDP 数据报比IP 数据报多提供了 ( )服务。", "A": "流量控制", "B": "拥塞控制", "C": "端口功能", "D": "路由转发", "Answer": "C"}
{"ID": 3786, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "UDP数据报首部不包含( )", "A": "UDP 源端口号", "B": "UDP校验和", "C": "UDP目的端口号", "D": "UDP 数据报首部长度", "Answer": "D"}
{"ID": 3787, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "UDP数据报中的长度字段( )", "A": "不记录数据的长度", "B": "只记录首部的长度", "C": "只记录数据部分的长度", "D": "包括首部和数据部分的长度", "Answer": "D"}
{"ID": 3788, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列关于UDP的描述，正确的是( )", "A": "给出数据的按序投递", "B": "不允许多路复用", "C": "拥有流量控制机制", "D": "是无连接的", "Answer": "D"}
{"ID": 3789, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "( )字段包含在TCP 首部中，而不包含在 UDP 首部中", "A": "目的端口号", "B": "序列号", "C": "校验和", "D": "目的IP地址", "Answer": "B"}
{"ID": 3790, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "TCP通信的双方，有一方发送了带有FIN标志的数据段后，表示（）", "A": "将断开通信双方的 TCP 连接", "B": "单方面释放连接，表示本方已经无数据发送，但可以接收对方的数据", "C": "中止数据发送，双方都不能发送数据", "D": "连接被重新建立", "Answer": "B"}
{"ID": 3791, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "OSI参考模型中，提供端到端的透明数据传输服务、差错控制和流量控制的层是 ( )", "A": "物理层", "B": "网络层", "C": "传输层", "D": "会话层", "Answer": "C", "Explanation": "OSI参考模型中，提供端到端的透明数据传输服务、差错控制和流量控制的层是 **传输层 (C)**。传输层的主要功能包括确保数据的完整性和正确顺序传送，提供可靠的通信服务（如TCP）以及实现流量控制和差错检测与纠正。"}
{"ID": 3792, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "关于传输层的面向连接服务的特性是( )", "A": "不保证可靠和顺序交付", "B": "不保证可靠但保证顺序交付", "C": "保证可靠但不保证顺序交付", "D": "保证可靠和顺序交付", "Answer": "D", "Explanation": "面向连接服务是指通信双方在进行通信之前，要先建立一个完整的连接，在通信过程中，整个连接一直可以被实时地监控和管理。通信完毕后释放连接。面向连接的服务可以保证数据的可靠和顺序交付。"}
{"ID": 3793, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "可靠传输协议中的“可靠”指的是( )", "A": "使用面向连接的会话", "B": "使用尽力而为的传输", "C": "使用滑动窗口来维持可靠性", "D": "使用确认机制来确保传输的数据不丢失", "Answer": "D", "Explanation": "如果一个协议使用确认机制对传输的数据进行确认，那么可以认为它是一个可靠的协议;如果一个协议采用“尽力而为”的传输方式，那么是不可靠的。例如，TCP 对传输的报文段提供确认，因此是可靠的传输协议，而UDP 不提供确认，因此是不可靠的传输协议。"}
{"ID": 3794, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下哪个TCP 熟知端口号是错误的? ()", "A": "TELNET:23", "B": "SMTP:25", "C": "HTTP:80", "D": "FTP:24", "Answer": "D", "Explanation": "FTP控制连接的端口是21，数据连接的端口是20"}
{"ID": 3795, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设某应用程序每秒产生一个 60B 的数据块，每个数据块被封装在一个 TCP 报文中然后再封装在一个 IP 数据报中。那么最后每个数据报所包舍的应用数据所占的百分比是( )。", "A": 0.2, "B": 0.4, "C": 0.6, "D": 0.8, "Answer": "C", "Explanation": "此题中，一个TCP 报文的首部长度是 20B，一个IP 数据报的首部长度也是20B，再加上60B的数据，一个IP 数据报的总长度为 100B，可知数据占 60%。"}
{"ID": 3796, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "使用UDP 的网络应用，其数据传输的可靠性由( )负责", "A": "传输层", "B": "应用层", "C": "数据链路层", "D": "网络层", "Answer": "B", "Explanation": "UDP 本身是无法保证传输的可靠性的，并且 UDP 是基于网络终端的，其特点是尽最大努力交付，因此无法在网络层及数据链路层提供可靠传输。因此，只能通过应用层协议来实现可靠传输。"}
{"ID": 3797, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于UDP 协议的主要特点的描述中，错误的是 ( )", "A": "UDP 报头主要包括端口号、长度、校验和等字段", "B": "UDP 长度字段是UDP 数据报的长度，包括伪首部的长度", "C": "UDP 校验和对伪首部、UDP 报文头及应用层数据进行校验", "D": "伪首部包括 IP 分组报头的一部分", "Answer": "B", "Explanation": "伪首部只是在计算校验和时临时添加的，不计入UDP 的长度。对于D选项，伪首部包括源IP 和目的IP，这是IP 分组报头的一部分。"}
{"ID": 3798, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "接收端收到有差错的 UDP 用户数据时的处理方式是 ()", "A": "丢弃", "B": "请求重传", "C": "差错校正", "D": "忽略差错", "Answer": "A", "Explanation": "接收端通过校验发现数据有差错，就直接丢弃该数据报。"}
{"ID": 3799, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于UDP 校验和的说法中，错误的是( )", "A": "UDP 的校验和功能不是必需的，可以不使用", "B": "如果UDP 校验和计算结果为 0，那么在校验和字段填充0", "C": "UDP校验和字段的计算包括一个伪首部、UDP 首部和携带的用户数据", "D": "UDP 校验和的计算方法是二进制反码运算求和再取反", "Answer": "B", "Explanation": "UDP 的校验和不是必需的，如果不使用校验和，那么将校验和字段设置为 0，而如果校验和的计算结果恰好为 0，那么将校验和字段置为全1。"}
{"ID": 3800, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于UDP 校验的描述中，( ）是错误的，", "A": "UDP 校验和段的使用是可选的，若源主机不想计算校验和，则该校验和段应为全0", "B": "在计算校验和的过程中，需要生成一个伪首部，源主机需要把该伪首部发送给目的主机", "C": "如果数据报在传输过程中被破坏，那么就把它丢弃", "D": "UDP 数据报的伪首部包含了IP 地址信息", "Answer": "B", "Explanation": "UDP 数据报的伪首部包含了 IP 地址信息，但它只在校验和计算期间建立，不会被发送。"}
{"ID": 3801, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列网络用中()不适合使用 UDP协议", "A": "客户机/服务器领域", "B": "远程调用", "C": "实时多媒体应用", "D": "远程登录", "Answer": "D", "Explanation": "UDP 的特点是开销小，时间性能好且易于实现。在客户/服务器模式中，它们之间的请求都很短，使用 UDP 不仅编码简单，而且只需要很少的消息。远程调用使用 UDP 的理由和客户/服务器模式的一样。对于实时多媒体应用，需要保证数据及时传送，而相对不大的错误是可以容忍的，所以使用 UDP 也是合适的。而远程登录需要依靠一个可靠的连接，使用 UDP 是不合适的。"}
{"ID": 3802, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于传输层协议中面向连接的描述，( )是错误的。", "A": "面向连接的服务需要经历3 个阶段:连接建立、数据传输及连接释放", "B": "当链路不发生错误时，面向连接的服务可以保证数据到达的顺序是正确的", "C": "面向连接的服务有很高的效率和时间性能", "D": "面向连接的服务提供了一个可靠的数据流", "Answer": "C", "Explanation": "由于面向连接的服务需要建立连接，且需要保证数据的有序性和正确性，因此它比无连接的服务开销大，而速度和效率方面也要比无连接的服务差一些。"}
{"ID": 3803, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列( )不是TCP服务的特点", "A": "字节流", "B": "全双工", "C": "可靠", "D": "支持广播", "Answer": "D", "Explanation": "TCP 提供的是一对一全双工可靠的字节流服务，所以TCP并不支持广播。"}
{"ID": 3804, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于 TCP 报头格式的描述中，错误的是( )。", "A": "报头长度为20-60B，其中固定部分为20B", "B": "端口号字段依次表示源端口号与目的端口号", "C": "报头长度总是4的倍数个字节", "D": "TCP 校验和伪首部中 IP 分组头的协议字段为 17", "Answer": "D", "Explanation": "TCP 伪首部与 UDP 伪首部一样，包括 IP 分组头的一部分。IP 首部中有一个协议字段，用于指明上层协议是 TCP 还是 UDP。17 代表 UDP，6 代表 TCP，所以 D 错误。对于 A 选项，由于数据偏移字段的单位是 4B，也就是说当偏移取最大时 TCP 首部长度为 15x4 = 60B。由于使用充，所以长度总是 4B 的倍数，C 正确。"}
{"ID": 3805, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在采用TCP 连接的数据传输阶段，如果发送端的发送窗口值由 1000 变为2000，那么发送端在收到一个确认之前可以发送()", "A": "2000个TCP 报文段", "B": "2000B", "C": "1000B", "D": "1000个TCP报文段", "Answer": "B", "Explanation": "TCP 使用滑动窗口机制来进行流控制。在 ACK 应信息中，TCP 在接收端用 ACK 加上接收方允许接收数据范围的最大值回送给发送方，发送方把这个最大值当作发送窗口值，表明发送端在未收到确认之前可以发送的最大字节数，即2000B。"}
{"ID": 3806, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "A和B建立了TCP 连接，当A收到确认号为 100 的确认报文段时，表示", "A": "报文段99 已收到", "B": "报文段 100已收到", "C": "末字节序号为 99 的报文段已收到", "D": "末字节序号为 100 的报文段已收到", "Answer": "C", "Explanation": "TCP的确认号是指明接收方下一次希望收到的报文段的数据部分第一个字节的编号，可以看出，前一个已收到的报文段的最后一个字节的编号为 99，所以 C 选项正确。"}
{"ID": 3807, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于TCP 工作原理与过程的描述中，错误的是( )。", "A": "TCP 连接建立过程需要经过“三次握手”的过程", "B": "TCP 传输连接建立后，客户端与服务器端的应用进程进行全双工的字节流传输", "C": "TCP 传输连接的释放过程很复杂，只有客户端可以主动提出释放连接的请求", "D": "TCP连接的释放需要经过“四次挥手”的过程", "Answer": "C", "Explanation": "参与TCP连接的两个进程中的任何一个都能提出释放连接的请求"}
{"ID": 3808, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "TCP的滑动窗口协议中，规定重传分组的数量最多可以 ( )。", "A": "是任意的", "B": "1个", "C": "大于滑动窗口的大小", "D": "等于滑动窗口的大小", "Answer": "D", "Explanation": "TCP 滑动窗口协议中发送方滑动窗口的大小规定了发送方最多能够传送的分组数目，只有窗口滑动了，才能往后继续发送。分组重传的最大值也是发送方能发送数据的最大值，因而重传分组的数量最多也不能超过滑动窗口的大小。"}
{"ID": 3809, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于TCP 窗口与拥塞控制概念的描述中，错误的是 ( )。", "A": "接收端窗口 (rwnd)通过TCP 首部中的窗口字段通知数据的发送方", "B": "发送窗口确定的依据是: 发送窗口 =min[接收端窗口，拥塞窗口]", "C": "拥塞窗口是接收端根据网络拥塞情况确定的窗口值", "D": "拥塞窗口大小在开始时可以按指数规律增长", "Answer": "C", "Explanation": "拥塞窗口是发送端根据网络拥塞情况确定的窗口值。"}
{"ID": 3810, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "TCP“三次握手”过程中，第二次“握手”时，发送的报文段中( ) 标志位被置为 1", "A": "SYN", "B": "ACK", "C": "SYN和ACK", "D": "ACK和RST", "Answer": "C", "Explanation": "在TCP的“三次握手”中，第二次握手,SYN和ACK均被置为1."}
{"ID": 3811, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "A和B之间建立了TCP 连接，A向B发送了一个报文段，其中序号字段 seq=200，确认号字段 ack=201，数据部分有 2个字节，那么在B 对该报文的确认报文段中( )", "A": "seq = 202，ack =200", "B": "seq = 201，ack = 201", "C": "seq = 201，ack = 202", "D": "seq=202,ack=201", "Answer": "C", "Explanation": "在 B 发给A 的报文(带确认)中，seq 值应和A 发向 B 的报文中的 ack 值相同，即 201;ack 值表示 B 期望下次收到A 发出的报文段的第一个字节的编号，应是200+2=202。"}
{"ID": 3812, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个TCP 连接的数据传输阶段，如果发送端的发送窗口值由2000 变为 3000，那么意味着发送端可以( )。", "A": "在收到一个确认之前可以发送3000个TCP 报文段", "B": "在收到一个确认之前可以发送 1000B", "C": "在收到一个确认之前可以发送3000B", "D": "在收到一个确认之前可以发送 2000个TCP报文段", "Answer": "C", "Explanation": "TCP 提供的是可靠的字节流传输服务，使用窗口机制进行流量控制与拥塞控制。TCP的滑动窗口机制是面向字节的，因此窗口大小的单位为字节。假设发送窗口的大小为 N，这意味着发送端可以在没有收到确认的情况下连续发送N个字节。"}
{"ID": 3813, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在一个TCP连接中，MSS为1KB，当拥塞窗口为 34KB 时发生了超时事件。如果在接下来的 4个RTT 内报文段传输都是成功的，那么当这些报文段均得到确认后，拥塞窗口的大小是( )。", "A": "8KB", "B": "9KB", "C": "16KB", "D": "17KB", "Answer": "C", "Explanation": "在拥塞窗口为34KB 时发生了超时，那么开始门限值 (ssthresh)就被设定为17KB，并且在第一个RTT中拥塞窗口(cwnd)置为 1KB。按照开始算法，第二个RTT中cwnd=2KB，第三个RTT中cwnd=4KB，第四个RTT 中cwnd =8KB。当第四个RTT中发出去的8个报文段的确认报文收到后，cwnd=16KB(此时还未超过开始门限值)。所以选C。本题中“这些报文段 均得到确认后”这句话很重要。"}
{"ID": 3814, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "TCP 的拥塞窗口的慢开始门限值初始为8(单位为报文段)，当拥塞窗口上升到 12时发生超时，TCP 开始慢启动和拥塞避免，那么第 13 次传输时拥塞窗口的大小为( )", "A": 4, "B": 6, "C": 7, "D": 8, "Answer": "C", "Explanation": "在慢开始和拥塞避免算法中，拥塞窗口初始为 1，窗口大小开始按指数增长。当拥塞窗口大于慢开始门限后停止使用慢开始算法，改用拥塞避免算法。此处慢开始的门限值初始为 8，当拥塞窗口增大到8 时改用拥塞避免算法，窗口大小按线性增长，每次增加1个报文段，当增加到12时，出现超时，重新设门限值为 6(12 的一半)，拥塞窗口再重新设为 1，执行慢开始算法，到门限值6时执行拥塞避免算法。 这样，拥塞窗口的变化就为1,2.4,8,9,10,11,12,1,2,4,6,7,8,9…,其中第13 次传输时拥塞窗口的大小为 7。"}
{"ID": 3815, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在一个TCP 连接中，MSS为1KB，当拥塞窗口为34KB 时收到了3 个余ACK报文如果在接下来的 4个RTT 内报文段传输都是成功的，那么当这些报文段均得到确认后，拥塞窗口的大小是(）", "A": "8KB", "B": "16KB", "C": "20KB", "D": "21KB", "Answer": "D", "Explanation": "条件“收到了3个余ACK报文”说明此时应执行快复法因此开始门限值设为17KB并在接下来的第一个RTT中cwnd 也被设为17KB,第二个RTT中cwnd=18,第三个RTT中cwnd=19KB，第四个RTT中cwmd =20KB，第四个RTT中发出的报文全部得到确认后，cwnd再增加1KB，变为21KB。注意 cwnd 的增加都发生在收到确认报文后。"}
{"ID": 3816, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设在没有发生拥塞的情况下，在一条往返时延 RTT为10ms 的线路上采用慢开始控制策略。如果接收窗口的大小为 24KB，最大报文段 MSS为2KB。那么发送方能发送出第一个完全窗口 (也就是发送窗口达到 24KB)需要的时间是 ( )", "A": "30ms", "B": "40ms", "C": "50ms", "D": "60ms", "Answer": "B", "Explanation": "按照慢开始算法，发送窗口的初始值为拥塞窗口的初始值即MSS的大小2KB，然后依次增大为KB、8KB、16KB，然后是接收窗口的大小24KB，即达到第一个完全窗口。因此达到第一个完全窗口所需要的时间为 4RTT=40ms。"}
{"ID": 3817, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "如果主机1的进程以端口x和主机2的端口y建立了一条TCP 连接，这时如果希望再在这两个端口间建立一个TCP 连接，那么会( )", "A": "建立失败，不影响先建立连接的传输", "B": "建立成功，且两个连接都可以正常传输", "C": "建立成功，先建立的连接被断开", "D": "建立失败，两个连接都被断开", "Answer": "A", "Explanation": "一条连接使用它们的套接字来表示，因此(1，x)-（2，y）是在两个之间唯可能的连接。而后建立的连接会被阻止。"}
{"ID": 3818, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "UDP是一种？()", "A": "面向连接的协议", "B": "面向字节流的协议", "C": "无连接协议", "D": "可靠传输协议", "Answer": "C"}
{"ID": 3819, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "UDP协议的特点之一是？()", "A": "面向连接", "B": "有拥塞控制", "C": "首部开销较大", "D": "无连接", "Answer": "D"}
{"ID": 3820, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "TCP的流量控制是通过什么实现的？()", "A": "窗口机制", "B": "滑动窗口", "C": "拥塞控制", "D": "超时重传", "Answer": "B"}
{"ID": 3821, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "为什么需要等待2MSL？()", "A": "等待服务器释放连接", "B": "等待客户端释放连接", "C": "等待最后一次ACK", "D": "等待最后一个报文", "Answer": "D"}
{"ID": 3822, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "TCP和UDP的区别之一是？()", "A": "TCP是无连接的协议", "B": "UDP是无连接的协议", "C": "TCP提供无拥塞控制", "D": "UDP首部开销较大", "Answer": "B"}
{"ID": 3823, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "可靠传输的基本原理包括？()", "A": "差错检测、确认、重传、序号", "B": "流量控制、拥塞控制、窗口机制、超时重传", "C": "校验和、滑动窗口、慢启动、快重传", "D": "CRC校验、停止等待协议、慢启动、快恢复", "Answer": "A"}
{"ID": 3824, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在TCP协议中，什么机制解决数据丢失问题？()", "A": "窗口机制", "B": "滑动窗口", "C": "超时重传", "D": "拥塞控制", "Answer": "C"}
{"ID": 3825, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "TCP的可靠传输机制中，如何处理接收方对已接收数据的确认？()", "A": "应答确认序号", "B": "拥塞控制", "C": "重传数据", "D": "窗口调整", "Answer": "A"}
{"ID": 3826, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "拥塞控制中的慢开始算法的特点是？()", "A": "拥塞窗口从1指数增长", "B": "到达阈值时进入拥塞避免", "C": "超时时阈值减半", "D": "不受拥塞控制影响", "Answer": "A"}
{"ID": 3827, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "UDP协议的一个特点是？()", "A": "有拥塞控制", "B": "无连接协议", "C": "提供可靠传输", "D": "面向连接", "Answer": "B"}
{"ID": 3828, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "DNS协议用于解析什么？()", "A": "IP地址到MAC地址", "B": "域名到IP地址", "C": "端口号到应用层协议", "D": "子网掩码到网络ID", "Answer": "B"}
{"ID": 3829, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "FTP协议中，用于传输文件的数据连接是在哪个端口上建立的？()", "A": 20, "B": 21, "C": 22, "D": 23, "Answer": "A"}
{"ID": 3830, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "发送邮件的客户端使用的协议是什么？()", "A": "POP3", "B": "IMAP", "C": "SMTP", "D": "HTTP", "Answer": "C"}
{"ID": 3831, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "域名解析的顺序中，找DNS服务器的过程是什么？()", "A": "本机hosts文件 -> 浏览器缓存 -> 路由缓存 -> DNS服务器", "B": "本机hosts文件 -> 路由缓存 -> 浏览器缓存 -> DNS服务器", "C": "浏览器缓存 -> 本机hosts文件 -> 路由缓存 -> DNS服务器", "D": "路由缓存 -> DNS服务器 -> 本机hosts文件 -> 浏览器缓存", "Answer": "C"}
{"ID": 3832, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "HTTPS协议是基于哪个协议提供加密处理数据、验证身份以及数据完整性保护？()", "A": "FTP", "B": "TLS", "C": "DNS", "D": "SNMP", "Answer": "B"}
{"ID": 3833, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在域名解析的顺序中，浏览器缓存的查询位置是？()", "A": "第一", "B": "第二", "C": "第三", "D": "第四", "Answer": "A"}
{"ID": 3834, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "DHCP协议的端口号是多少？()", "A": 21, "B": 53, "C": 67, "D": 80, "Answer": "C"}
{"ID": 3835, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "HTTP协议中，哪个版本引入了持久连接（Keep-Alive）？()", "A": "HTTP/1.0", "B": "HTTP/1.1", "C": "HTTP/2.0", "D": "HTTP/3.0", "Answer": "B"}
{"ID": 3836, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "DNS解析域名的顺序中，哪个步骤是递归查询？()", "A": "浏览器缓存", "B": "本机hosts文件", "C": "路由缓存", "D": "找DNS服务器", "Answer": "D"}
{"ID": 3837, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列关于客户/服务器模型的说法中，不正确的是( )。", "A": "服务器专用于完成某些服务，而客户机则作为这些服务的使用者", "B": "客户机通常位于前端，服务器通常位于后端", "C": "客户机和服务器通过网络实现协同计算任务", "D": "客户机是面向任务的，服务器是面向用户的", "Answer": "D"}
{"ID": 3838, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "域名与()具有一一对应的关系。", "A": "IP地址", "B": "MAC 地址", "C": "主机", "D": "以上都不是", "Answer": "D"}
{"ID": 3839, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列说法错的是( )", "A": "Internet 上提供客户访问的主机一定要有域名", "B": "同一域名在不同时间可能解析出不同的 IP 地址", "C": "多个域名可以指向同一台主机 IP 地址", "D": "IP 子网中的主机可以由不同的域名服务器来维护其映射", "Answer": "A"}
{"ID": 3840, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "DNS是基于()模型的分布式系统。", "A": "C/S", "B": "B/S", "C": "P2P", "D": "以上均不正确", "Answer": "A"}
{"ID": 3841, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "域名系统 (DNS)的组成不包括( ).", "A": "域名空间", "B": "分布式数据库", "C": "域名服务器", "D": "从内部 IP 地址到外部 IP 地址的翻译程序", "Answer": "D"}
{"ID": 3842, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "( )可以将其管辖的主机名转换为主机的 IP 地址", "A": "本地域名服务器", "B": "根域名服务器", "C": "授权域名服务器", "D": "代理域名服务器", "Answer": "C"}
{"ID": 3843, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列关于FTP连接的叙述中，正确的是()", "A": "控制连接先于数据连接被建立，并先于数据连接被释放", "B": "数据连接先于控制连接被建立，并先于控制连接被释放", "C": "控制连接先于数据连接被建立，并晚于数据连接被释放", "D": "数据连接先于控制连接被建立，并晚于控制连接被释放", "Answer": "C"}
{"ID": 3844, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "匿名FTP访问通常使用 ( )作为用户名", "A": "guest", "B": "E-mail 地址", "C": "anonymous", "D": "主机id", "Answer": "C"}
{"ID": 3845, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "因特网用户的电子邮件地址格式必须是 ( )。", "A": "用户名@单位网络名", "B": "单位网络名@用户名", "C": "邮箱所在主机的域名@用户名", "D": "用户名@邮箱所在主机的域名", "Answer": "D"}
{"ID": 3846, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "用Firefox在 Gmail 中向邮件服务器发送邮件时，使用的是( )协议。", "A": "HTTP", "B": "POP3", "C": "P2P", "D": "SMTP", "Answer": "A"}
{"ID": 3847, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列关于电子邮件格式的说法中，错误的是 ( )", "A": "电子邮件内容包括邮件头与邮件体两部分", "B": "邮件头中发信人地址(From:)、发送时间、收信地址(To:)及邮件主题(Subject:)是由系统自动生成的", "C": "邮件体是实际要传送的信函内容", "D": "MIME 允许电子邮件系统传输文字、图像、语音与视频等多种信息", "Answer": "B"}
{"ID": 3848, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "从某个已知的 URL 获得一个万维网文档时，若该万维网服务器的IP地址开始时并不知道，则需要用到的应用层协议有()", "A": "FTP 和 HTTP", "B": "DNS和FTP", "C": "DNS 和 HTTP", "D": "TELNET和HTTP", "Answer": "C"}
{"ID": 3849, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "HTTP 是一个无状态协议，然而 Web 站点经常希望能够识别用户，这时需要用到 ( )", "A": "Web缓存", "B": "Cookie", "C": "条件GET", "D": "持久连接", "Answer": "B"}
{"ID": 3850, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列关于 Cookie 的说法中，错误的是 ( )。", "A": "Cookie 存储在服务器端", "B": "Cookie 是服务器产生的", "C": "Cookie 会威胁客户的隐私", "D": "Cookie 的作用是跟踪用户的访问和状态", "Answer": "A"}
{"ID": 3851, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面关于客户/服务器模型的描述，( )存在错误。 I，客户端必须提前知道服务器的地址，而服务器则不需要提前知道客户端的地址 II.客户端主要实现如何显示信息与收集用户的输入，而服务器主要实现数据的处理 III.浏览器显示的内容来自服务器 IV，客户端是请求方，即使连接建立后，服务器也不能主动发送数据", "A": "I、IV", "B": "III、IV", "C": "只有IV", "D": "只有III", "Answer": "C", "Explanation": "在连接未建立前，服务器在某一个端口上监听。客户端是连接的请求方，客户端必须事先知道服务器的地址才能发出连接请求，而服务器则从客户端发来的数据包中获取客户端的地址。一旦连接建立，服务器就能响应客户端请求的内容，服务器也能主动发送数据给客户端，用于一些消息的通知，如一些错误的通知。所以只有IV 错误。"}
{"ID": 3852, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于 P2P概念的描述中，错误的是()", "A": "P2P 是网络结点之间采取对等方式直接交换信息的工作模式", "B": "P2P 通信模式是指 P2P 网络中对等结点之间的直接通信能力", "C": "P2P 网络是指与互联网并行建设的、由对等结点组成的物理网络", "D": "P2P 实现技术是指为实现对等结点之间直接通信的功能所需要设计的协议、软件等", "Answer": "C", "Explanation": "选项C中“P2P网络是一种物理网络”的述是错的。P2P网络是指在互联网中对等结点组成的一种覆盖网络(Overlay Network)，是一种动态的逻辑网络。另外，对等结点之间具有直接通信的能力是 P2P 的显著特点。"}
{"ID": 3853, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "互联网中域名解析依赖于由域名服务器组成的逻辑树。在域名解析过程中，主机上请求域名解析的软件不需要知道 ( )信息。I.本地域名服务器的IP II.本地域名服务器父结点的 IP III.域名服务器树根结点的 IP", "A": " I和II", "B": " I和III", "C": " II和III", "D": "I和II和III", "Answer": "C", "Explanation": "正常情况下，客户机只需把域名解析请求发往本地域名服务器，其他事情都由本地域名服务器完成，并把最后结果返回给客户机。所以主机只需要知道本地域名服务器的IP"}
{"ID": 3854, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在DNS 的递归查询中，由 ( )给客户端返回地址。", "A": "最开始连接的服务器", "B": "最后连接的服务器", "C": "目的地址所在服务器", "D": "不确定", "Answer": "A", "Explanation": "在递归查询中，每台不包含被请求信息的服务器都转到其他地方去查找，然后它再往回发送结果，所以客户端最开始连接的服务器最终将返回正确的信息。"}
{"ID": 3855, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一台主机要解析 www.baidu.com 的 IP 地址，如果这台主机配置的域名服务器为202.120.66.68，因特网顶级域名服务器为11.2.8.6，而存储 www.baidu.com 的IP地址对应关系的域名服务器为 202.113.16.10，那么这台主机解析该域名通常首先查询( )", "A": "202.120.66.68 域名服务器", "B": "11.2.8.6 域名服务器", "C": "202.113.16.10 域名服务器", "D": "可以从这3 个域名服务器中任选一个", "Answer": "A", "Explanation": "当这台主机发出对 www.baidu.com 的 DNS 查询报文时，这个查询报文首先被送往该主机的本地域名服务器 202.120.66.68。本地域名服务器不能立即答该查时，就以 DNS 客户的身份向某一根域名服务器查询。但不管采用何种查询方式，首先都要查询本地域名服务器。"}
{"ID": 3856, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于FTP的叙述中，错误的是()", "A": "FTP 可以在不同类型的操作系统之间传送文件", "B": "FTP 并不适合用在两个计算机之间共享读写文件", "C": "控制连接在整个 FTP 会话期间一直保持", "D": "客户端默认使用端口 20 与服务器建立数据传输连接", "Answer": "D", "Explanation": "控制连接建立后，服务器进程用自己传送数据的熟知端口 20 与客户进程所提供的端口号建立数据传输连接，即客户进程的端口号是客户进程自己提供的。"}
{"ID": 3857, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "用户代理只能发送而不能接收电子邮件时，可能是 ( )地址错误。", "A": "POP3", "B": "SMTP", "C": "HTTP", "D": "Mail", "Answer": "A", "Explanation": "用户代理使用 POP3 协议接收邮件。通常用户在配置电子邮用户代理时需要设置邮件服务器的 POP3 地址(如 pop3.gmail.com)，若这个地址设置错误，则会导致用户无法接收邮件。用户代理中的 SMTP 地址错误时会导致无法发送邮件，收件人 E-mail 地址错误时，可能会发错人，也可能会导致投递失败（不存在的地址）。"}
{"ID": 3858, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于POP3 协议的说法，( )是错误的。", "A": "由客户端而非服务器选择接收后是否将邮件保存在服务器上", "B": "登录到服务器后，发送的密码是加密的", "C": "协议是基于 ASCII 码的，不能发送二进制数据", "D": "一个账号在服务器上只能有一个邮件接收目录", "Answer": "B", "Explanation": "POP3 协议在传输层是使用明文来传输密码的，并不对密码进行加密，所以 B 选项错误。POP3 协议基于 ASCII 码，如果要传输非 ASCII 码的数据，那么需要使用 MIME 将数据转换成 ASCII 码形式。"}
{"ID": 3859, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面的()协议中，客户机与服务器之间采用面向无连接的协议进行通信。", "A": "FTP", "B": "SMTP", "C": "DNS", "D": "HTTP", "Answer": "C", "Explanation": "DNS采用UDP来传送数据，UDP是一种面向无连接的协议。"}
{"ID": 3860, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "从协议分析的角度，WWW服务的第一步操作是浏览器对服务器的 ()", "A": "请求地址解析", "B": "传输连接建立", "C": "请求域名解析", "D": "会话连接建立", "Answer": "C", "Explanation": "建立浏览器与服务器之间的连接需要知道服务器的IP地址和端口号（80端口是熟知端口），而访问站点时浏览器从用户那里得到的是 WWW 站点的域名，所以浏览器必须首先向 DNS 请求域名解析，获得服务器的IP地址后，才能请求建立TCP连接。"}
{"ID": 3861, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "使用鼠标单击一个万维网文档时，若该文档除有文本外，还有三幅 gif 图像，则在HTTP/1.0中需要建立 ()次UDP 连接和()次TCP 连接", "A": "0，4", "B": "1，3", "C": "0，2", "D": "1，2", "Answer": "A", "Explanation": "HTTP在传输层使用TCP，所以无需建立UDP连接。HTTP/1.0只支持非持续连接，所以每请求一个对象需要建立一次TCP连接。在本题的情景中共需要传输1个基本HTML对象和3个gif对象，所以共需建立4次TCP连接。"}
{"ID": 3862, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于非持续连接 HTTP 特点的描述中，错误的是 ( )。", "A": "HTTP 支持非持续连接与持续连接", "B": "HTTP/1.0使用非持续连接，而 HTTP/1.1 的默认方式为持续连接", "C": "非持续连接中对每次请求/响应都要建立一次 TCP 连接", "D": "非持续连接中读取一个包含 100 个图片对象的 Web 页面，需要打开和关闭 100 次 TCP 连接", "Answer": "D", "Explanation": "非持续连接中，读取一个包含 100 个图片对象的 Web 页面需要打开和关闭 101 次 TCP 连接，而不是 100 次。"}
{"ID": 3863, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "MAC帧首部+尾部的总长度为18字节。", "Answer": true}
{"ID": 3864, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在数据链路层，常见的协议包括ARP、ICMP、IP和OSPF。", "Answer": false}
{"ID": 3865, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "冲突域是指能收到信号的站点数量。", "Answer": true}
{"ID": 3866, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "MAC帧的总长度范围是从46字节到1500字节。", "Answer": false}
{"ID": 3867, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "MAC帧的控制部分占18字节。", "Answer": true}
{"ID": 3868, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP数据报的标志字段中，DF表示允许分片，MF表示不是最后一个分片。", "Answer": false}
{"ID": 3869, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "路由器的主要工作层次是数据链路层。", "Answer": false}
{"ID": 3870, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机网络的功能包括连接各计算机、实现资源共享、传递消息和使各计算机相对独立。", "Answer": true}
{"ID": 3871, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机软件是属于资源子网的设备。", "Answer": true}
{"ID": 3872, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机网络分为广域网、城域网和局域网的划分主要依据是网络的作用范围。", "Answer": true}
{"ID": 3873, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "城域网是为淘汰局城网和广城网而提出的一种新技术。", "Answer": false}
{"ID": 3874, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "广域网的拓扑结构通常采用总线形。", "Answer": false}
{"ID": 3875, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在n个结点的星形拓扑结构中，有 n-1 条物理链路。", "Answer": true}
{"ID": 3876, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在OSI参考模型中，第n层与它之上的第n+1层的关系是第n层和第n+1层相互没有影响。", "Answer": false}
{"ID": 3877, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在 OSI参考模型中，实现端到端的应答、分组排序和流量控制功能的协议层是传输层。", "Answer": true, "Explanation": "只有传输层及以上各层的通信才能称为端到端。会话层管理不同机间进程的对话，而传输层实现应答、分组排序和流量控制功能。"}
{"ID": 3878, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "奈奎斯特定理限制的是带宽。", "Answer": false}
{"ID": 3879, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "香农定理适用于带宽受限的情况。", "Answer": true}
{"ID": 3880, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在计算机网络中，机械特性主要关注时序。", "Answer": false}
{"ID": 3881, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "集线器的特点是具备信号的定向传送能力。", "Answer": false}
{"ID": 3882, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "如果奈奎斯特定理和香农定理的条件都满足，应选择取小的那个来限制。", "Answer": true}
{"ID": 3883, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "波特率为2400且每个波特内有4个比特时，比特率为4800 bps。", "Answer": false}
{"ID": 3884, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在香农定理中，带宽指的是传输介质的宽度。", "Answer": false}
{"ID": 3885, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "电路交换的主要缺点是低开销。", "Answer": false}
{"ID": 3886, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "影响信道最大传输速率的因素主要有发送功率和噪声功率。", "Answer": false}
{"ID": 3887, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "双绞线是用两根绝缘导线绞合而成的，绞合的目的是减少干扰。", "Answer": true}
{"ID": 3888, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "利用一根同轴电缆互连主机构成以太网，主机间的通信方式为不确定。", "Answer": false}
{"ID": 3889, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "同轴电缆比双绞线的传输速率更快，得益于同轴电缆具有更高的屏蔽性，同时有更好的抗嗓声性。", "Answer": true}
{"ID": 3890, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一般来说，集线器连接的网络在拓扑结构上属于网状。", "Answer": false}
{"ID": 3891, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "信息传输速率是指通信信道上每秒传输的码元数。", "Answer": false, "Explanation": "信息传输速率是指通信信道上每秒传输的比特数（bits per second, bps），而不是码元数。码元速率（或波特率）是指每秒传输的码元数，二者是不同的概念。信息传输速率和码元速率之间的关系取决于每个码元包含的比特数。在某些情况下，它们可能相等，但在一般情况下，它们是不同的。"}
{"ID": 3892, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "分组交换对报文交换的主要改进是使路由算法更加简单。", "Answer": false, "Explanation": "相对于报文交换而言，分组交换中将报文划分为一个个具有固定最大长度的分组，以分组为单位进行传输。"}
{"ID": 3893, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "电路交换方式不提供差错控制功能。", "Answer": true, "Explanation": "电路交换方式（Circuit Switching）本身不提供差错控制功能。在电路交换中，一条专用的通信路径在通信双方之间建立并保持，直到通信会话结束为止。这个方式主要用于传统电话网络。电路交换注重的是建立和维持一个连续的传输路径，而不是在传输过程中对数据进行差错检测和纠正。差错控制功能通常由更高层次的协议（如传输层协议）来实现，而不是由电路交换本身提供。"}
{"ID": 3894, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "CSMA/CD主要用于广域网。", "Answer": false}
{"ID": 3895, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "IEEE 802.3以太网采用的是CSMA/CD访问控制方式。", "Answer": true}
{"ID": 3896, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在零比特填充法中，帧开始和帧结束的标志是1111110。", "Answer": true}
{"ID": 3897, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层设备中的高速缓冲存储器的主要作用是缓存主存与CPU之间的数据。", "Answer": true}
{"ID": 3898, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CSMA/CD中，采用的是随机退避算法。", "Answer": false}
{"ID": 3899, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CSMA/CA中的预约信道过程中，接收方返回的是ACK帧。", "Answer": true}
{"ID": 3900, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层的最基本服务是提供可靠的数据传输。", "Answer": true}
{"ID": 3901, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层的主要协议是以太网。", "Answer": true}
{"ID": 3902, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "循环冗余校验码CRC是根据数据的长度而产生的。", "Answer": false}
{"ID": 3903, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在数据链路层的总线型拓扑结构中，当拓扑结构太复杂时可能会发生冲突。", "Answer": false}
{"ID": 3904, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层协议的功能不包括定义数据格式。", "Answer": false}
{"ID": 3905, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "网卡实现的主要功能在物理层和数据链路层。", "Answer": true}
{"ID": 3906, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "IEEE 802局域网标准对应OSI参考模型的数据链路层和网络层。", "Answer": false}
{"ID": 3907, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "吉比特以太网同时支持全双工模式和半双工模式。", "Answer": true}
{"ID": 3908, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "链路聚合不是虚拟局域网（VLAN）的优点。", "Answer": true}
{"ID": 3909, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "HDLC常用的操作方式中，传输过程只能由主站启动的是异步响应模式。", "Answer": true}
{"ID": 3910, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "交换机是一种设备，它不能分割碰域。", "Answer": false}
{"ID": 3911, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "通过交换机连接的一组工作站组成一个广播域，但不是一个冲突域。", "Answer": true}
{"ID": 3912, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "奇偶校验码具有的特征是能够检测出长度任意一个比特的错误。", "Answer": false, "Explanation": "奇偶校验的原理是通过增加几余位来使得码字中“1”的个保持为数或数的编码方法。它只能发现奇数个比特的错误。"}
{"ID": 3913, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于10位要传输的数据，如果采用汉明校验码，需要增加的冗余信息位数是6位。", "Answer": false, "Explanation": "在k比特信息位上附加r比特余信息，构成k+r比特的码字，必须满足 2^r >= k + r + 1。如果 r 的取值小于等于 11 且大于 4，那么 r = 4。对于 10 位的数据，需要增加 4 位的冗余信息位。"}
{"ID": 3914, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "若采用后退 N 帧的 ARO 协议进行流量控制，编号字段为 7 位，则发送窗口的最大长度为 127。", "Answer": true, "Explanation": "接收窗口整体向前移动时，新窗口中的序列号和旧窗口的序列号产生重叠，致使接收方无法区分发送方发送的是重发还是新帧，因此在后 N 的 ARQ 协议中，发送窗口 W_T <= 2^(n-1)。本题中 n=7，因此发送窗口的最大长度是 127。"}
{"ID": 3915, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "TDM 所用传输介质的性质是介质的位速率大于单个信号的位速率。", "Answer": true, "Explanation": "时分复用 TDM 共享带宽，分时用信道。将时间划分成一段等长的时分复用(TDM)，参与带宽共享的每个时分复用的用户在每个 TDM 中占用固定序号的时隙。显然，在这种情况下，介质的位速率大于单个信号的位速率。"}
{"ID": 3916, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "计算机网络更多地使用 TDM 而非 FDM 是因为 TDM 能更充分地利用带宽。", "Answer": false, "Explanation": "TDM 与 FDM 相比，抗干扰能力强，可以逐级再生整形，避免干扰的积累，而且数字信号比较容易实现自动转换，所以根据 FDM 和 TDM 的工作原理，FDM 适合于传输模拟信号，而 TDM 适用于传输数字信号。"}
{"ID": 3917, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "多路复用器的主要功能是结合来自两条或更多条线路的传输。", "Answer": true, "Explanation": "多路复用器的主要功能是结合来自两条或更多条线路的传输，以充分利用信道。"}
{"ID": 3918, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "HDLC 协议为实现透明传输，采用的填充方法是字符填充的首尾定界符法。", "Answer": false, "Explanation": "HDLC 采用零比特填充法来实现数据链路层的透明传输(PPP 协议采用字节填充法来实现)，即在两个标志字段之间不出现 6 个连续的“1”。具体做法是:在发送端，当一个比特尚未加上标志字段时，先用硬件扫描个，只要发现 5 个连续的“1”，就在其后插入 1 个“0”；而在接收端先找到 F 字段以确定边界，然后对其中的比特流进行扫描，每当发现 5 个连续的“1”，就将这 5 个连续的“1”后的一个“0”删除，进而还原成原来的比特流。"}
{"ID": 3919, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在使用以太网交换机的局域网中，交换机的多个端口可以并行传输。", "Answer": true, "Explanation": "在使用以太网交换机的局域网中，交换机的多个端口可以并行传输的原因在于交换机具有独立的交换矩阵。每个端口都有独立的带宽和连接路径，交换机能够同时处理多个端口之间的数据传输，而不会产生冲突或干扰。这使得交换机可以高效地管理和转发数据包，显著提高网络的传输效率和吞吐量。"}
{"ID": 3920, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP地址的分类中，A类地址的首字节范围是64-127。", "Answer": true}
{"ID": 3921, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP地址为192.168.1.100，子网掩码为255.255.255.0，它所在的子网范围是192.168.1.0 - 192.168.1.63。", "Answer": false}
{"ID": 3922, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "RIP协议的全称是Routing Information Protocol。", "Answer": true}
{"ID": 3923, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在ICMP协议中，Ping命令属于Echo Reply消息类型。", "Answer": false}
{"ID": 3924, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP数据包分片的原因是为了防止数据包丢失。", "Answer": false}
{"ID": 3925, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP数据包大小为3500B，并且MTU为1500B，因此数据包将被分片。在分片后的数据包中，第一个分片的偏移量为0。", "Answer": true}
{"ID": 3926, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "ARP协议用于解析MAC地址。", "Answer": false}
{"ID": 3927, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "IPv6地址中有96位用于网络标识。", "Answer": false}
{"ID": 3928, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "TTL字段在IP数据报中的作用是限制数据报的寿命。", "Answer": true}
{"ID": 3929, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "Ping应用的主要功能是测试网络故障。", "Answer": true}
{"ID": 3930, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个管理域是自治系统（AS）。", "Answer": true}
{"ID": 3931, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个IPv4地址有32位。", "Answer": true}
{"ID": 3932, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "ICMP协议的报文封装在UDP协议中。", "Answer": false}
{"ID": 3933, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "集线器是能够分隔广播域的设备。", "Answer": false}
{"ID": 3934, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在IP 首部的字段中，与分片和重组无关的字段是标识。", "Answer": false}
{"ID": 3935, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "255.255.255.0是属于本地回路地址的一个例子。", "Answer": false}
{"ID": 3936, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一台主机有两个IP地址，一个地址是192.168.11.25，另一个地址可能是192.168.11.24。", "Answer": false}
{"ID": 3937, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "根据 NAT 协议，192.172.56.23 不允许出现在因特网上。", "Answer": false}
{"ID": 3938, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "路由表的分组转发部分由输入端口组成。", "Answer": false}
{"ID": 3939, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在链路状态路由算法中，每个路由器都得到网络的完整拓扑结构后，使用Dijkstra最短路径算法来找出它到其他路由器的路径长度。", "Answer": true, "Explanation": "在链路状态路由算法中，路由器通过交换每个结点到邻居结点的延迟或开销来构建一个完整的网络拓扑结构。得到完整的拓扑结构后，路由器就使用 Dijkstra 最短路算法来计算到所有结点的最短路径。"}
{"ID": 3940, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "如果一个路由器收到的IPv6数据包因太大无法转发到链路上，那么路由器将把该数据包转发至能支持该数据包的链路上。", "Answer": false, "Explanation": "IPv6 中不允许分片。因此，如果路由器发现到来的数据报太大而不能转发到链路上，那么丢弃该数据报，并向发送方发送一个指示分组太大的 ICMP 报文。"}
{"ID": 3941, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "通常的路由器可以支持多种网络层协议，并提供不同协议之间的分组转发。", "Answer": true, "Explanation": "通常的路由器（routers）确实可以支持多种网络层协议，并提供不同协议之间的分组转发。路由器的主要功能是根据目标地址将数据包从一个网络转发到另一个网络，这个过程通常包括支持和处理多种网络层协议（如IPv4和IPv6）。此外，路由器可以使用不同的协议来进行路由选择（如RIP、OSPF、BGP），并能够在不同网络层协议之间进行转换和分组转发，以确保数据包能够在不同类型的网络中正确传输。"}
{"ID": 3942, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "决定路由器转发表中的值的算法是路由算法。", "Answer": true, "Explanation": "由于转发表是根据路由表生成的，而路由表又是由路由算法得到的，因此路由算法决定了转发表中的值。"}
{"ID": 3943, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "传输层常见的两个协议是TCP和UDP。", "Answer": true}
{"ID": 3944, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "传输层连接的建立是通过同步阶段实现的。", "Answer": true}
{"ID": 3945, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "多路复用是通过MAC地址实现的。", "Answer": false}
{"ID": 3946, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "超时重传的时间间隔通常由往返时间决定。", "Answer": true}
{"ID": 3947, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "传输层负责处理物理层的信号传输。", "Answer": false}
{"ID": 3948, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "传输层为路由器之间提供逻辑通信。", "Answer": false}
{"ID": 3949, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "UDP数据报首部不包含UDP 数据报首部长度。", "Answer": true}
{"ID": 3950, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "服务器的TCP协议规定HTTP进程的端口号为80。", "Answer": true}
{"ID": 3951, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "为保证数据传输的可靠性，TCP采用了对报文段的确认机制。", "Answer": true}
{"ID": 3952, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "TCP采用的差错检测机制是摘要算法。", "Answer": false}
{"ID": 3953, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在四次挥手的过程中，第二次挥手是由客户端发起的。", "Answer": true}
{"ID": 3954, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "TCP拥塞控制的方法主要包括窗口机制和流量控制。", "Answer": false}
{"ID": 3955, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "TCP连接的建立阶段是通过两次握手完成的。", "Answer": false}
{"ID": 3956, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "UDP协议的特点之一是提供可靠传输。", "Answer": false}
{"ID": 3957, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "拥塞控制的方法包括慢开始算法和拥塞避免算法。", "Answer": true}
{"ID": 3958, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "TCP和UDP的主要区别之一是TCP是面向字节流的协议。", "Answer": true}
{"ID": 3959, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在DNS中，负责将域名解析为IP地址的记录是PTR记录。", "Answer": false}
{"ID": 3960, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "SMTP协议用于进行远程登录。", "Answer": false}
{"ID": 3961, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在HTTP协议中，DELETE请求方法用于向服务器提交数据。", "Answer": false}
{"ID": 3962, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "DHCP协议的作用是进行路由选择。", "Answer": false}
{"ID": 3963, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "DHCP协议属于网络层。", "Answer": false}
{"ID": 3964, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "DNS协议使用的传输层协议是UDP。", "Answer": true}
{"ID": 3965, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "DHCP协议使用的传输层协议是UDP。", "Answer": true}
{"ID": 3966, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "DHCP协议主要用于在局域网中为用户分配IP地址。", "Answer": true}
{"ID": 3967, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "用户提出服务请求，网络将用户请求传送到服务器，服务器执行用户请求，完成所要求的操作并将结果送回用户，这种工作模式称为C/S 模型。", "Answer": true}
{"ID": 3968, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件传输协议 (FTP)的一个主要特征是允许客户指明文件的类型与格式。", "Answer": true}
{"ID": 3969, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "控制信息是带外传送的协议是 FTP。", "Answer": true}
{"ID": 3970, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个FTP用户发送了一个LIST命令来获取服务器的文件列表，这时服务器应通过21端口来传输该列表。", "Answer": false}
{"ID": 3971, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "当一台计算机从 FTP 服务器下载文件时，该 FTP 服务器上对数据进行封装的5个转换是数据、数据段、数据报、数据帧和比特。", "Answer": true}
{"ID": 3972, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "SMTP基于传输层的UDP协议，POP3基于传输层的UDP协议。", "Answer": false}
{"ID": 3973, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "TCP和UDP的一些端口保留给一些特定的应用使用。为HTTP保留的端口号为TCP的80端口。", "Answer": true}
{"ID": 3974, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "使用PUT方法的HTTP请求报文仅需Web服务器对HTTP报文进行响应，而不需要返回请求对象。", "Answer": false}
{"ID": 3975, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "FTP工作模型中，用于控制连接的TCP连接在服务器端使用的熟知端口号为21。", "Answer": true, "Explanation": "在FTP（文件传输协议）工作模型中，用于控制连接的TCP连接在服务器端使用的熟知端口号确实是21。FTP有两个主要的连接：控制连接和数据连接。控制连接用来传输FTP命令和响应，而数据连接则用来传输实际的数据。控制连接始终使用端口21，这个端口号是FTP协议的标准端口号。"}
{"ID": 3976, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP数据报的首部长度字段占多少位？()", "Answer": "4位"}
{"ID": 3977, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "ARP表用于映射哪两种地址？", "Answer": "IP-MAC"}
{"ID": 3978, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "MAC帧的控制部分占多少字节？()", "Answer": "18B"}
{"ID": 3979, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "若数据部分为3800B，最大分片不超过1420B，第三个分片的总长度是多少字节？()", "Answer": "1020B"}
{"ID": 3980, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机网络拓扑结构主要取决于它的 ( )", "Answer": "通信子网"}
{"ID": 3981, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "1968年6月，世界上出现的最早计算机网络是 ( )", "Answer": "ARPAnet"}
{"ID": 3982, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在ISO/OSI参考模型中，可同时提供无连接服务和面向连接服务的是( )", "Answer": "网络层"}
{"ID": 3983, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "在OSI参考模型中，当两台计算机进行文件传输时，为防止中间出现网络故障而重传整个文件的情况，可通过在文件中插入同步点来解决，这个动作发生在( )。", "Answer": "会话层", "Explanation": "在 OSI 参考模型中，会话层的两个主要服务是会话管理和同步。会话层使用校验点可使通信"}
{"ID": 3984, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "在TCP/IP 模型中，( )处理关于可靠性、流量控制和错误校正等问题。", "Answer": "传输层", "Explanation": "TCP/IP 模型的传输层提供端到端的通信，并负责差错控制和流量控制，可以提供可靠的面向连接的服务或不可靠的无连接服务。"}
{"ID": 3985, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "比特率的单位是什么？()", "Answer": "b/s"}
{"ID": 3986, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "分组交换中，分组的长度由谁确定？()", "Answer": "网络层"}
{"ID": 3987, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "如果信噪比为20dB，那么信噪比是多少倍？ ()", "Answer": "100"}
{"ID": 3988, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "( )被用于计算机内部的数据传输", "Answer": "并行传输"}
{"ID": 3989, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "利用模拟通信信道传输数字信号的方法称为 ( )", "Answer": "频带传输"}
{"ID": 3990, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "就交换技术而言，以太网采用的是（）", "Answer": "分组交换技术"}
{"ID": 3991, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "不受电磁干扰和噪声影响的传输介质是 ( )", "Answer": "光纤"}
{"ID": 3992, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "为了使数字信号传输得更远，可采用的设备是 ( )", "Answer": "中继器"}
{"ID": 3993, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在粗缆以太网中可通过中继器扩充网段，中继器最多可有 ( )", "Answer": "4个"}
{"ID": 3994, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "电话系统的典型参数是信道带宽为 3000Hz，信噪比为 30dB，则该系统的最大数据传输速率为( )", "Answer": "30kb/s", "Explanation": "信噪比 S/N 常用分贝(dB)表示，数值上等于 10 log(S/N) dB。依题有 30 = 10 log(S/N)，可解出 S/N = 1000。根据香农定理，最大数据传输速率 = 3000 log₂(1 + S/N) = 30kb/s。"}
{"ID": 3995, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "CSMA/CA（载波监听多路接入/碰撞避免）适用于哪种类型的网络？()", "Answer": "无线局域网"}
{"ID": 3996, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CSMA/CA中，数据帧传输前的预约信道过程中，接收方返回的是什么帧？()", "Answer": "ACK帧"}
{"ID": 3997, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "以太网提供的是什么类型的服务？()", "Answer": "无连接、不可靠的服务g"}
{"ID": 3998, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在数据链路层的错误控制中，常用的方法是什么？ ()", "Answer": "CRC"}
{"ID": 3999, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "滑动窗口机制中，GBN（后退N帧协议）的接收窗口大小是多少？ ()", "Answer": "1"}
{"ID": 4000, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CSMA/CD中，争用期的最大长度是多少？()", "Answer": "64B"}
{"ID": 4001, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "以太网是一种什么类型的网络？()", "Answer": "广播网络"}
{"ID": 4002, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层的设备主要与哪一层协同工作？()", "Answer": "物理层"}
{"ID": 4003, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "以太网帧的最短长度是多少字节？()", "Answer": "64"}
{"ID": 4004, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "MAC地址的长度是多少位？()", "Answer": "48位"}
{"ID": 4005, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "MAC地址是几位二进制数？()", "Answer": "48位"}
{"ID": 4006, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层的哪个功能确保了帧的有序传输？()", "Answer": "流量控制"}
{"ID": 4007, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层提供的哪个功能通过MAC地址实现？()", "Answer": "地址解析"}
{"ID": 4008, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层的哪个机制确保了在帧丢失时的重传？()", "Answer": "重传机制"}
{"ID": 4009, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "数据链路层地址分为两种，一种是MAC地址，另一种是()", "Answer": "IP地址"}
{"ID": 4010, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "10BaseT 以太网采用的传输介质是()。", "Answer": "双绞线"}
{"ID": 4011, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "广域网覆盖的地理范围从几十千米到几千千米，它的通信子网主要使用 ( ).", "Answer": "分组交换技术"}
{"ID": 4012, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "广域网所使用的传输方式是 ( ).", "Answer": "存储转发式"}
{"ID": 4013, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "对于由交换机连接的 10Mb/s 的共享式以太网，若共有 10 个用户，则每个用户能够占有的带宽为 ( )。", "Answer": "10Mb/s"}
{"ID": 4014, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "为了纠正2比特的错误，编码的海明距应该为 ( )", "Answer": "5", "Explanation": "海明码“纠错”d位，需要码距为2d+1的编码方案。"}
{"ID": 4015, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "与 CSMA/CD 网络相比，令牌环网更适合的环境是（）", "Answer": "负载重", "Explanation": "令牌环网是一种基于令牌传递的网络协议，它不会发生冲突。相比之下，CSMA/CD 网络可能因负载重而产生冲突。因此，令牌环网更适合负载重的环境。"}
{"ID": 4016, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "IPv6地址的长度是多少位？()", "Answer": "128位"}
{"ID": 4017, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "ARP请求是以什么形式广播的？()", "Answer": "数据帧"}
{"ID": 4018, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP首部长度的最大值是多少字节？()", "Answer": "60"}
{"ID": 4019, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在IP地址的子网划分中，A类地址的主机号有多少位？()", "Answer": "24"}
{"ID": 4020, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "RIP协议的网络直径限制是多少跳？()", "Answer": "15"}
{"ID": 4021, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "OSPF协议使用的是哪种路由选择算法？()", "Answer": "链路状态"}
{"ID": 4022, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "BGP协议的信息交换方式是什么？()", "Answer": "单播"}
{"ID": 4023, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "IP数据报的总长度字段占几位？()", "Answer": "16"}
{"ID": 4024, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "网络层负责对子网间的数据包进行什么操作？()", "Answer": "路由选择"}
{"ID": 4025, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "路由器转发分组的根据是报文的( )。", "Answer": "IP地址"}
{"ID": 4026, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "当数据报到达目的网络后，要传送到目的主机，需要知道IP 地址对应的 ( )", "Answer": "物理地址"}
{"ID": 4027, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "可以动态为主机配置IP 地址的协议是( )", "Answer": "DHCP"}
{"ID": 4028, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "OSPF 协议使用 () 分组来保持与其邻居的连接", "Answer": "Hello"}
{"ID": 4029, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "路由器中计算路由信息的是 ( )", "Answer": "路由选择处理机"}
{"ID": 4030, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "为了提供更多的子网，为一个B 类地址指定了子网掩码 255.255.240.0，则每个子网最多可以有的主机数是()", "Answer": "4094", "Explanation": "由于240_10=11110000_2，所以共有 12 比特位用于机地址，且主机位全0 和全1不能使用，所以最多可以有的主机数为2^{12}-2=4094"}
{"ID": 4031, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "主机发送IP 数据报给主机 B，途中经过了5个路由器。请问在此过程中总共使用了()次 ARP", "Answer": "6", "Explanation": "主机先使用 ARP 来询问本网络路由器的地址，然后每个路由器使用 ARP 来寻找下一跳路由的地址，总共使用了 4 次 ARP 从机 A 网络的路由器到达主机 B 网络的路由器。然后，主机 B 网络的路由器使用 ARP 找到主机 B，所以总共使用了 1+4+1=6 次 ARP。"}
{"ID": 4032, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "TCP的流量控制是通过什么实现的？()", "Answer": "滑动窗口"}
{"ID": 4033, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "UDP协议适用于哪种类型的通信？()", "Answer": "无连接"}
{"ID": 4034, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在TCP协议中，何时发送SYN报文？()", "Answer": "连接建立时"}
{"ID": 4035, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "可靠性传输通常通过什么机制实现？()", "Answer": "超时重传"}
{"ID": 4036, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在传输层中，端口号的作用是什么？()", "Answer": "标识应用程序"}
{"ID": 4037, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "滑动窗口的作用是()", "Answer": "流量控制"}
{"ID": 4038, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "若用户程序使用 UDP 进行数据传输，则( )层协议必须承担可靠性方面的全部工作。", "Answer": "应用层", "Explanation": "传输层协议需要具有的主要功能包括:创建进程到进程的通信，提供流量控制机制。UDP在一个低的水平上完成以上功能，使用端口号完成进程到进程的通信，但在传送数据时没有流量控制机制，也没有确认，而且只提供有限的差错控制。因此 UDP 是一个无连接、不可靠的传输层协议。如果用户应用程序使用 UDP 进行数据传输，那么必须在传输层的上层即应用层提供可靠性方面的全部工作。"}
{"ID": 4039, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "使用UDP 的网络应用，其数据传输的可靠性由( )负责", "Answer": "应用层", "Explanation": "UDP 本身是无法保证传输的可靠性的，并且 UDP 是基于网络终端的，其特点是尽最大努力交付，因此无法在网络层及数据链路层提供可靠传输。因此，只能通过应用层协议来实现可靠传输。"}
{"ID": 4040, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "在采用TCP 连接的数据传输阶段，如果发送端的发送窗口值由 1000 变为2000，那么发送端在收到一个确认之前可以发送 ( )。", "Answer": "2000B", "Explanation": "TCP 使用滑动窗口机制来进行流控制。在 ACK 应信息中，TCP 在接收端用 ACK 加上接收方允许接收数据范围的最大值回送给发送方，发送方把这个最大值当作发送窗口值，表明发送端在未收到确认之前可以发送的最大字节数，即2000B。"}
{"ID": 4041, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "TCP滑动窗口的作用是( )。", "Answer": "流量控制", "Explanation": "TCP 采用大小可变的滑动窗口进行流量控制。"}
{"ID": 4042, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "超时重传的时间间隔通常由什么决定？()", "Answer": "往返时间"}
{"ID": 4043, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "释放连接的最后一次是由哪一方发起的？", "Answer": "服务器端"}
{"ID": 4044, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "HTTP协议默认使用的端口号是多少？()", "Answer": "80"}
{"ID": 4045, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "哪个应用层协议用于在网络中传输电子邮件？()", "Answer": "SMTP"}
{"ID": 4046, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "FTP协议的默认传输模式是什么？()", "Answer": "主动模式"}
{"ID": 4047, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "HTTP协议是基于什么模型的？()", "Answer": "客户-服务器模型"}
{"ID": 4048, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在HTTP请求报文方式中，用于向服务器提交数据进行处理请求的方法是？()", "Answer": "POST"}
{"ID": 4049, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "HTTPS协议提供加密处理数据、验证身份以及数据完整性保护是通过哪个协议实现的？()", "Answer": "TLS"}
{"ID": 4050, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在HTTPS协议中，端口号为443，这是基于哪个协议的端口号？()", "Answer": "HTTP"}
{"ID": 4051, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "HTTP协议中，哪个请求方法用于向服务器提交数据进行处理请求？()", "Answer": "POST"}
{"ID": 4052, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在客户/服务器模型中，客户指的是( ).", "Answer": "请求方"}
{"ID": 4053, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "FTP 客户发起对 FTP 服务器连接的第一阶段是建立()", "Answer": "控制连接"}
{"ID": 4054, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "在两台计算机之间传输一个文件有两种可行的确认策略。第一种策略把文件截成分组，接收方逐个确认分组，但就整体而言，文件没有得到确认。第二种策略不确认单个分组，但当文件全部收到后，对整个文件予以确认。请讨论这两种方式的优缺点。", "Answer": "如果网络容易丢失分组，那么对每个分组逐一进行确认较好，此时仅重传丢失的分组。另一方面，如果网络高度可靠，那么在不发生差错的情况下，仅在整个文件传送的结尾发送一次确认，从而减少了确认次数，节省了带宽。不过，即使只有单个分组丢失，也要重传整个文件。"}
{"ID": 4055, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "有两个网络，它们都提供可靠的面向连接的服务，一个提供可靠的字节流，另一个提供可靠的报文流。请问两者是否相同?为什么?", "Answer": "不相同。在报文流中，网络保持对报文边界的跟踪;而在字节流中，网络不进行这样的跟踪。例如，一个进程向一条连接写了 1024B，稍后又写了1024B，那么接收方共读了2048B。对于报文流，接收方将得到两个报文，每个报文1024B。而对于字节流，报文边界不被识别，接收方将全部 2048B 作为一个整体，在此已经体现不出原先有两个不同报文的事实。"}
{"ID": 4056, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "协议与服务有何区别?有何联系?", "Answer": "协议是控制两个对等实体之间通信的规则的集合。在协议的控制下，两个对等实体间的通信使得本层能够向上一层提供服务，而要实现本层协议，还需要使用下一层提供的服务。协议和服务概念的区分: 1)协议的实现保证了能够向上一层提供服务。本层的服务用户只能看见服务而无法看见下面的协议，即下面的协议对上面的服务用户是透明的。2)协议是“水平的”，即协议是控制两个对等实体之间的通信的规则。但服务是“垂直的”即服务是由下层通过层间接口向上层提供的。"}
{"ID": 4057, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "根据通信协议，每个分组都引入100字节的开销用于头和成帧。现在使用这个协议发送10^6字节的数据，然而在传送的过程中有一个字节被破坏，因而包含该字节的那个分组被丢弃。试对于1000字节和20000字节的分组的有效数据大小分别计算“开销+丢失”字节的总数目。分组数据大小的最佳值是多少？", "Answer": "设D是分组数据的大小，需要的分组数目=10^6/D，开销=100xN(被丢弃分组的头部也已计入开销)，因此“开销+丢失”=100x10^6/D+D。当D=1000 时，“开销+丢失”=100x10^6/1000+1000=101000B。当D=20000 时，“开销+丢失”=100x10^6/20000+20000=25000B。设“开销+丢失”字节总数目为y，y=10^8/D+D，求全微分有dy/dD=1-10^8/D^2。当D=10^4时，dy/dD=0，所以分组数据大小的最佳值是10000B"}
{"ID": 4058, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "考虑一个最大距离为2km的局域网，当带宽为多大时，传播延时（传播速率为2x10^8m/s）等于100字节分组的发送延时？对于512字节分组结果又当如何？", "Answer": "传播时延=2x10^3m/(2x10^8m/s)=10^{-5}s=10μs。1)分组大小为 100B:假设带宽大小为x，要使得传播时延等于发送时延，带宽x=100B/10μs=10MB/s=80Mb/s 2)分组大小为 512B:假设带宽大小为y，要使得传播时延等于发送时延，带宽y=512B/10μs=51.2MB/s=409.6Mb/s。因此，带宽应分别等于 80Mb/s和409.6Mb/s。"}
{"ID": 4059, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "试在下列条件下比较电路交换和分组交换。要传送的报文共x比特。从源点到终点共经过k段链路，每段链路的传播时延为d秒，数据传输速率为b比特/秒。在电路交换时电路的建立时间为s秒。在分组交换时分组长度为p比特，且各结点的排队等待时间可忽略不计，问在怎样的条件下，分组交换的时延比电路交换的时延要小？（提示：画草图标明各段链路共有几个结点。）", "Answer": "由于忽略排队时延，因此电路交换时延=连接时延+发送时延+传播时延，分组交换时延= 发送时延 + 传播时延。显然，二者的传播时延都为kd。对电路交换，由于不采用存储转发技术，虽然是k段链路，连接后没有存储转发的时延，因此发送时延=数据块长度/信道带宽=x/b，从而电路交换总时延为 s+x/b+kd (1)。对于分组交换，设共有n个分组，由于采用存储转发技术，一个站点的发送时延为t=p/b。显然，数据在信道中经过k-1个t时间的流动后，从第k个开始，每个时间段内将有一个分组到达目的站(把传播时延和发送时延分开讨论后，这里不再考虑传播时延)，从而个分组的发送时延为(k-1)t+nt=(k-1)p/b+np/b，分组交换的总时延为kd+(k- 1)p/b+ np/b。比较式(1)和式(2)可知，要使分组交换时延小于电路交换时延，要求kd+(k-l)p/b+ np/b<s+x/b+ kd。对于分组交换，np≈x，(k-1)p/b<s时，分组交换总时延小于电路交换总时延。"}
{"ID": 4060, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Overview and Architecture", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在OSI参考模型中，各层都有差错控制过程。指出以下每种差错发生在OSI参考模型的哪些层中?1)噪声使传输链路上的一个0变成1或一个1变成0。2)一个分组被传送到错误的目的站。3)收到一个序号错误的目的帧。4)一台打印机正在打印，突然收到一个错误指令要打印头回到本行的开始位置。5)一个半双工的会话中，正在发送数据的用户突然接收到对方用户发来的数据。", "Answer": "1)物理层。物理层负责正确、透明地传输比特流(0、1)。 2)网络层。网络层的 PDU称为分组，分组转发是网络层的功能。 3)数据链路层。数据链路层的 PDU 称为帧，帧的差错检测是数据链路层的功能 4)应用层。打印机是向用户提供服务的，运行的是应用层的程序。 5)会话层。会话层允许不同主机上的进程进行会话。"}
{"ID": 4061, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "试比较分组交换与报文交换，并说明分组交换优越的原因", "Answer": "报文交换与分组交换的原理如下:用户数据加上源地址、目的地址、长度、校验码等辅助信息后，封装成 PDU，发给下一个结点。下一个结点收到后先暂存报文，待输出线路空闲时再转发给下一个结点，重复该过程直到到达目的结点。每个PDU可单独选择到达目的结点的路径。不同之处在于:分组交换生成的 PDU的长度较短且是固定的，而报文交换生成的PDU的长度不是固定的。正是这一差别使得分组交换具有独特的优点:①缓冲区易于管理:②分组的平均延迟更小，网络中占用的平均缓冲区更少:③更易标准化;④更适合应用。因此，现在的主流网络基本上都可视为分组交换网络。"}
{"ID": 4062, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定在地球和月球之间建立一条 100Mb/s 的链路。月球到地球的距离约为 385000km，数据在链路上以光速 3x10^8 m/s 传输。1)计算该链路的最小 RTT。2)使用 RTT作为延迟，计算该链路的“延迟x带宽”值，3)在2)中计算的“延迟x带宽”值的含义是什么?4)在月球上用照相机拍取地球的相片，并把它保存到磁盘上。假定要在地球上下载 25MB 的最新图像，那么从发出数据请求到传送结束最少要花多少时间?", "Answer": "RTT 表示往返传输时间(等于单向传输时间的2倍)，1)最小RTT等于2x385000000m/(3x10^8ms)=2.57s。2)“延迟x带宽”值等于2.57sx100Mb/s=257Mb≈32MB.3)它表示发送方在收到一个响应之前能够发送的数据量，4)在图像可以开始到达地面之前，至少需要一个 RTT。假定仅有带宽延迟，那么发送需要的时间等于25MB/(100Mb/s)=(25x1024x1024x8)bit/(100Mb/s)≈2.1s。因此，直到最后一个图像位到达地球，总共花的时间等于2.1+2.57=4.67s。"}
{"ID": 4063, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个简单的电话系统由两个端局和一个长途局连接而成，端局和长途局之间由 1MHz的全双工主干连接。在8小时的工作日中，一部电话平均使用4次，每次的平均使用时间为6分钟。在所有通话中，10%的通话是长途(即通过端局),假定每条通话线路的带宽是4KHz，请分析一个端局能支持的最大电话数。", "Answer": "每部电话平均每小时通话次数=4/8=0.5次，每次通话6分钟，因此一部电话每小时占用一条电路3分钟，即 20部电话可共享一条线路。由于只有10%的呼叫是长途，因此 200部电话占用一条完全时间的长途线路。局间干线复用了10^6/(4x10)=250条线路，每条线路支持 200 部电话，因此一个端局能支持的最大电话数是200x250=50000部。"}
{"ID": 4064, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "T1系统共有 24个话路进行时分复用，每个话路采用7比特编码，然后加上1比特信令码元，24个话路的一次采样编码构成一帧。另外，每帧数据有1比特同步码，每秒采样8000次。请问T1的数据率是多少?", "Answer": "由于每个话路采用 7bit编码，然后再加上 1bit 信令码元，因此一个话路占用 8bit。帧同步码是在 24路的编码之后加上 1bit，因此每帧有8bitx24+1bit=193bit。因为每秒采样 8000次，因此采样频率为8000Hz，即采样周期为1/8000s=125μS。所以T1的数据率为193bit/(125x10^{-6}s)=1.544Mb/s。"}
{"ID": 4065, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Physical Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个分组交换网采用虚电路方式转发分组，分组的首部和数据部分分别为h位和p位。现有L(L>>p)位的报文要通过该网络传送，源点和终点之间的线路数为k，每条线路上的传播时延为d秒，数据传输速率为b位/秒，虚电路建立连接的时间为s秒，每个中间结点有 m秒的平均处理时延。求源点开始发送数据直至终点收到全部数据所需要的时间。", "Answer": "整个传输过程的总时延=连接建立时延+源点发送时延+中间结点的发送时延+中间结点的处理时延 +传播时延。 虚电路的建立时延已给出，为s秒。 源点要将L位的报文分割成分组，分组数=L/p，每个分组的长度为(h+p)，源点要发送的数据量=(h+p)L/p，所以源点的发送时延=(h+p)L/(pb)秒。 每个中间结点的发送时延=(h+p)/b秒，源点和终点之间的线路数为k，所以有k-1个中间结点，因此中间结点的发送时延=(h+p)(k-1)/b 秒。 中间结点的处理时延=m(k-1)秒，传播时延=kd秒。所以源结点开始发送数据直至终点收到全部数据所需要的时间=s+(h+p)L/(pb)+(h+p)(k-1)/b+m(k-1)+ kd 秒。"}
{"ID": 4066, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在一个数据链路协议中使用下列字符编码:A 01000111;B 11100011;ESC 11100000;FLAG 01111110在使用下列成帧方法的情况下，说明为传送4个字符A、B、ESC、FLAG 所组织的帧而实际发送的二进制位序列(使用FLAG作为首尾标志，ESC作为转义字符)1)字符计数法。2)使用字符填充的首尾定界法，3)使用比特填充的首尾标志法。", "Answer": "(1)第一字节为所传输的字符计数5，转换为二进制为00000101，后面依次为A、B、ESC、FLAG 的二进制编码: 00000101 01000111 11100011 11100000 01111110(2)首尾标志位FLAG(01111110)，在所传输的数据中，若出现控制字符，则在该字符前插入转义字符 ESC(11100000): 01111110 01000111 11100011 11100000 11100000 11100000 01111110 01111110(3)首尾标志位 FLAG(01111110)，在所传输的数据中，若连续出现5个“1”，则在其后插入“0”: 01111110 01000111 110100011 111000000 011111010 01111110"}
{"ID": 4067, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在数据传输过程中，若接收方收到的二进制比特序列为 10110011010，接收双方采用的生成多项式为 G(x)=x^4+x^3+1,则该二进制比特序列在传输中是否出错?如果未出现差错，那么发送数据的比特序列和CRC检验码的比特序列分别是什么?", "Answer": "根据题意，生成多项式 G(x)对应的二进制比特序列为 11001。进行如下的二进制模2除法被除数为 10110011010，除数为11001:\n所得余数为0,因此该二进制比特序列在传输过程中未出现差错。发送数据的比特序列是 1011001，CRC 检验码的比特序列是 1010。\n注意:CRC检验码的位数等于生成多项式 G(x)的最高次数，"}
{"ID": 4068, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在选择 ARQ协议中，设编号用 3bit，发送窗口W_T=6，接收窗口W_R=3。试找出一种情况，使得在此情况下协议不能正确工作。", "Answer": "对于选择重传协议，接收窗口和发送窗口的尺寸需满足: 接收窗口尺寸 + 发送窗口尺寸 ≤ 2^n。而题目中给出的数据是 W_R + W_T =9 >= 2^3，所以是无法正常工作的。举例如下: 发送方: 01234567012345670 接收方: 01234567012345670 发送方发送 0~5 号共 6 个数据帧时，因发送窗口已满，发送暂停。接收方收到所有数据帧对每个帧都发送确认帧，并期待后面的 6、7、0 号帧。若所有的确认帧都未到达发送方，经过发送方计时器控制的超时时间后，发送方再次发送之前的 6 个数据，而接收方收到 0 号后，无法判断是新的数据帧还是旧的重传的数据帧。"}
{"ID": 4069, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设一个信道的数据传输速率为 5kb/s，单向传输时延为 30ms，那么帧长在什么范围内，才能使用于差错控制的停止-等待协议的效率至少为50%?", "Answer": "设帧长为L。在停止-等待协议中，协议忙的时间为数据发送的时间L/B，协议空闲的时间为数据发送后等待确认返回的时间 2R。要使协议的效率至少为 50%,要求信道利用率u至少为 50%,而信道利用率=数据发送时延/(传播时延+数据发送时延)，则 u=(L/B)/(L/B+2R)>=50%可得L>=2RB=2x5000x0.03bit=300bit。因此，当帧长大于等于 300bit时，停止-等待协议的效率至少为50%。"}
{"ID": 4070, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定卫星信道的数据率为 100kb/s，卫星信道的单程传播时延为 250ms，每个数据帧的长度均为 2000 位，并且不考虑误码、确认帧长、头部和处理时间等开销，为达到传输的最大效率，试问帧的顺序号应为多少位?此时信道利用率是多少?", "Answer": "RTT=250x2=500ms=0.5s.一个帧的发送时间等于 2000bit(100kb/s)= 20x10^{-3}'s。一个帧发送完后经过一个单程时延到达接收方，再经过一个单程时延发送方收到应答，从而可以继续发送，因此要达到传输效率最大，就是不用等确认也可继续发送。设窗口值等于x，令2000bit×x/(100kb/s)=20×10^{-3}s+RTT=20x10^{-3}s+0.5s=0.52s得x=26。要取得最大信道利用率，窗口值是26即可，因为在此条件下，可以不间断地发送所以发送速率保持在 100kb/s。由于16<26<32，帧的顺序号应为5位。在使用后退N帧ARQ的情况下，最大窗口值是 31，大于 26，可以不间断地发送帧，此时信道利用率是 100%。"}
{"ID": 4071, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在数据传输速率为 50kb/s 的卫星信道上传送长度为 1kbit 的帧，假设确认帧总由数据帧捎带，帧头的序号长度为 3bit，卫星信道端到端的单向传播延迟为 270ms。对于下面三种协议，信道的最大利用率是多少?1)停止-等待协议。2)后退N帧协议。3)选择重传协议(假设发送窗口和接收窗口相等)。", "Answer": "最大信道利用率即每个传输周期内每个协议可发送的最大帧数。由题意，数据的长度为1kbit，信道的数据传输速率为 50kb/s，因此信道的发送时延为1/50s=0.02s，另外信道端到端的传播时延=0.27s。本题中的确认帧是捎带的(通过数据帧来传送)，因此每个数据的传输周期为(0.02+0.27+0.02+0.27)s=0.58s, 1)在停止-等待协议中，发送方每发送一帧，都要等待接收方的应答信号，之后才能发送下一帧;接收方每接收一帧，都要反馈一个应答信号，表示可接收下一。其中用于发送数据帧的时间为 0.02s。因此，信道的最大利用率为0.02/0.58=3.4%。 2)在后退 N帧协议中，接收窗口尺寸为1，若采用n比特对编号，则其发送窗口的尺寸V满足1<W<2^n-1。发送方可以连续再发送若干数据帧，直到发送窗口内的数据帧都发送完毕。如果收到接收方的确认帧，那么可以继续发送。若某个出错，则接收方只是简单地丢弃该帧及所有的后续帧，发送方超时后需重传该数据帧及所有的后续数据帧。根据题目条件，在达到最大传输速率的情况下，发送窗口的大小应为2^n-1=7，此时在第一帧的数据传输周期 0.58s内，实际连续发送了7帧(考虑极限情况，0.58s后接收方只收到0号帧的确认，此时又可以发出一个新帧，这样依次下去，取极限即是每个传输周期 0.58s 内发送了7帧)，因此此时的最大信道利用率为7x0.02/0.58=24.1%。 3)选择重传协议的接收窗口尺寸和发送窗口尺寸都大于 1，可以一次发送或接收多个帧。若采用n比特对帧编号，则窗口尺寸应满足:接收窗口尺寸+发送窗口尺寸≤2^n，当发送窗口与接收窗口尺寸相等时，应有接收窗口尺寸≤2^{n-1}且发送窗口尺寸≤2^{n-1}。发送方可以连续发送若干数据帧，直到发送窗口内的数据帧都发送完毕。如果收到接收方的确认帧，那么可以继续发送。若某个帧出错，则接收方只是简单地丢弃该帧，发送方超时后需重传该数据帧。 和 2)问中的悄况类似，唯一不同的是为达到最大信道利用率，发送窗口大小应为2^{n-1}=4,因此，此时的最大信道利用率为 4x0.02/0.58=13.8%。"}
{"ID": 4072, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于下列给定的值，不考虑差错重传，非受限协议(无须等待应答)和停止-等待协议的有效数据率是多少?(即每秒传输了多少真正的数据，单位为b/s。)R=传输速率(16Mb/s) S=信号传播速率(200m/μs) D=接收主机和发送主机之间传播距离(200m) T=创建帧的时间(2μs) F=每帧的长度(500bit) N=每帧中的数据长度(450bit) A=确认帧 ACK的帧长(80bit)", "Answer": " 1)非受限协议 有效数据率=N/(T+F/R)=450bit/(2μs+500bit/16bits/μs)≈13.53bit/μs=13.53Mb/s 2)停止等待协议 有效数据率=N/(2*(T+D/S)+(F+A)/R)=450bit/(2*(2μs+200m/(200m/μs))+(500bit+80bit)/(16bit/μs))≈10.65bit/μs=10.65Mb/s"}
{"ID": 4073, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "长度为 1km、数据传输速率为 10Mb/s 的 CSMA/CD 以太网，信号在电缆中的传播速率为 200000km/s。试求能够使该网络正常运行的最小帧长。", "Answer": "对于 1km 长的电缆，单程传播时间为1/200000=5μs，来回路程传播时间为10μs=10^{-5}s。为了使该网络能按照 CSMA/CD 工作，最小的发送时间不能小于10us。以10Mb/s速率工作时，10^{-5}s内可以发送的比特数为(10x10^6b/s)x10^{-5}s=100。因此最小帧长为100 比特。"}
{"ID": 4074, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "10000个航空订票站在竞争使用单个时隙 ALOHA 通道，各站平均每小时做 18 次请求，一个时隙是 125μs。总通信负载约为多少?", "Answer": "每个终端每 3600/18=200s做一次请求，共有10000个终端，因此总负载是200s做10000次请求，平均每秒 50 次请求。每秒 8000 个时隙，平均每个时隙的发送次数是 50/8000=1/160，即通信负载 G=1/160=0.00625。"}
{"ID": 4075, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "一组N个站点共享一个 56kb/s 的纯 ALOHA 信道，每个站点平均每 100s 输出一个 1000bit的帧，即使前一个帧未发送完也依旧进行。问N可取的最大值是多少?", "Answer": "对于纯 ALOHA 协议，其信道利用率为0.184，因此可用带宽是0.184x56Kb/S。每个站需要的带宽是1000/100=10b/s。因此，N 可取的最大值是1030。"}
{"ID": 4076, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "考虑建立一个 CSMA/CD 网，电缆长 1km，不使用重发器，运行速率为 1Gb/s，电缆中的信号速率是 200000km/s，最小帧长度是多少?", "Answer": "对于1km的电缆，单程传播时延是1/200000=5x10^(-6)s，即5μs，往返传播时延是10μs。要能按照 CSMA/CD 工作，最小帧的发送时间不能小于10μs。以1Gb/s 速率工作时，10μs 内可以发送的比特数为(10x10^(-6))/(1x10^(-9))=10000，因此最小帧应是 10000bit。注意:争用期一定要保证大于来回往返时延。因为假设现在传了一个帧，还未到往返时延就发送完毕，而且在中途出现碰撞，这样就检测不出错误;如果中途发生碰撞，且这个还未发送完，那么就可以检测出错误。所以要保证CSMA/CD正常工作，就必须使得发送时间(即争用期)大于等于来回往返时延。"}
{"ID": 4077, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Data Link Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在一个采用 CSMA/CD 协议的网络中，传输介质是一根完整的电缆，传输速率为1Gb/s。电缆中信号的传播速率是 200000km/s。若最小数据帧长度减少 800bit，则最远的两个站点之间的距离应至少变化多少才能保证网络正常工作?", "Answer": "CSMA/CD 方式要求帧的最短长度须满足条件:在发送帧的最后一位时，如果有冲突，那么发送方应能检测到冲突，即发送帧的时间至少是信号在最远两个端点之间往返传输的时间。现在的条件是帧的长度减少了800bit，即发送帧的时间减少了800b/(1Gb/s)，所以信号在最远两个端点之间往返的时间必须减少800b/(1Gb/s)。设减少的长度为x米，要计算往返传输的距离，有 2x/(200000x10^3)≥800/(10^9)，得到x≥80m，即最远的两个端点之间的距离应至少减少 80m。"}
{"ID": 4078, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "因特网的组播是怎样实现的?为什么因特网上的组播比以太网上的组播复杂得多?", "Answer": "因特网的组播是靠路由器来实现的，这些路由器必须增加一些能够识别组播的软件。能够运行组播协议的路由器可以是一个单独的路由器，也可以是运行组播软件的普通路由器。因特网上的组播比以太网上的组播复杂得多，因为以太网本身支持广播和组播，而因特网上当前的路由器考入时时精神家园和许多物理网络都不支持广播和组播。"}
{"ID": 4079, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个即分组报头中的首部长度字段值为101(=进制)，而总长度字段值为101000(二进制)。请问该分组携带了多少字节的数据?", "Answer": "要求出分组所携带数据的长度，就需要分别知道首部的长度和分组的总长度。解题的关键在于弄清首部长度的字段和总长度字段的单位。由于首部长度字段的单位是4B，101的十进制为5，所以首部长度=5x4=20B。而总长度字段的单位是字节，101000的十进制为40，所以总长度为40B，因此分组携带的数据长度为40-20=20B。"}
{"ID": 4080, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个数据报长度为 4000B(固定头部长度)。现在经过一个网络传送，但此网络能够传送的最大数据长度为 1500B。试问应当划分为几个短一些的数据报片?各数据片段的数据字段长度、片段偏移字段和 MF 标志应为何值?", "Answer": "数据报长度为4000B，有效载荷为4000-20=3980B。网络能传送的最大有效载荷为1500-20=1480B，因此应分为3个短些的片，各片的数据字段长度分别为1480、1480和1020B。片段偏移字段的单位为8B，1480/8=185，(1480x2)/8=370，因此片段偏移字段的值分别为0、185、370。MF=1时，代表后面还有分片；MF=0时，代表后面没有分片，因此MF字段的值分别为1、1和0。"}
{"ID": 4081, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某网络的一台主机产生了一个数据报，头部长度为 20B，数据部分长度为 2000B。该数据报需要经过两个网络到达目的主机，这两个网络所允许的最大传输单位(MTU)分别为 1500B 和 576B，问原 IP 数据报到达目的主机时分成了几个小报文?每个报文的数据部分长度分别是多少?", "Answer": "在 IP 层下面的每种数据链路层都有自己的帧格式，其中包括帧格式中的数据字段的最大长度，这称为最大传输单位(MTU)。1500-20=1480，2000-1480=520，所以原数据报经过第一个网络后分成了两个短些的数据报，第一个数据报的数据部分长度是1480B，第二个数据报的数据部分长度是520B。576-20-556，但556不能被8整除，所以分片时的数据部分最大只能取552。第一个数据报经过第2个网络后，1480-552x2=376<576，变成数据长度分别为552B、552B、376B的3个数据报；第2个数据报520<552，因此不用分片。因此到达目的主机时，原2000B的数据被分成数据长度分别为552B、552B、376B、520B的4个数据报。"}
{"ID": 4082, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "如果到达的分组的片偏移值为 100，分组首部中的首部长度字段值为5，总长度字段值为 100，那么数据部分第一个字节的编号是多少?能够确定数据部分最后一个字节的编号吗?", "Answer": "分片的片偏移值表示其数据部分首字节在原始分组的数据部分中的相对位置，单位为8B。首部长度字段以 4B 为单位，总长度字段以字节为单位。题目中，分组的片偏移值为100，因此其数据部分第一个字节的编号是 800。因为分组的总长度为100B，首部长度为4x5=20B，所以数据部分长度为80B。因此该分组的数据部分的最后一字节的编号是 879。"}
{"ID": 4083, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在4个“/24”地址块中进行最大可能的聚合:212.56.132.0/24、212.56.133.0/24、212.56.134.0/24、212.56.135.0/24。", "Answer": "由于一个 CIDR地址块中可以包含很多地址，所以路由表中就利用 CIDR地址块来查找目的网络，这种地址的聚合常称为路由聚合。本题已知有 212.56.132.0/24、212.56.133.0/24、212.56.134.0/24、212.56.135.0/24地址块，可知第3 字节前6位相同，因此共同前缀为8+8+6=22位，由于这4个地址块的第1、2个字节相同，考虑它们的第3个字节:132=(10000100)_2，133=(10000101)_2，134=(10000110)_2，135=(10000111)_2所以共同的前缀有 22 位，即 1101010000111000100001，聚合的CIDR地址块是 212.56.132.0/22。"}
{"ID": 4084, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "现有一公司需要创建内部网络，该公司包括工程技术部、市场部、财务部和办公室4个部门，每个部门有 20~30 台计算机。试问:1)若要将几个部门从网络上分开，如果分配给该公司使用的地址为一个 C 类地址，网络地址为 192.168.161.0，那么如何划分网络?可以将几个部门分开?2)确定各部门的网络地址和子网掩码，并写出分配给每个部门网络中的主机IP地址范围。", "Answer": "1)可以采用划分子网的方法对该公司的网络进行划分。由于该公司包括4个部门，共需要划分为4个子网。2)已知网络地址 192.168.161.0是一个C类地址，所需的子网数为4，每个子网的主机数为 20~30。由于子网号和主机号不允许为全0或全1，因此子网号的比特数为3，即最多有2^3-2=6个可分配的子网，主机号的比特数为5，即每个子网最多有2^5-2=30个可分配的主地址。4 个部门子网的子网掩码均为 255.255.255.224，各部门的网络地址与部门主机的 IP 地址范围可分配如下:部门\t工程技术部\t市场部\t财务部\t办公室\n部门网络地址\t192.168.161.32\t192.168.161.64\t192.168.161.96\t192.168.161.128\n主机 IP 地址范围\t192.168.161.33~192.168.161.62\t192.168.161.65~192.168.161.94\t192.168.161.97~192.168.161.126\t192.168.161.129~192.168.161.158"}
{"ID": 4085, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Network Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某个网络地址块 192.168.75.0 中有 5 台主机 A、B、C、D 和 E，主机 A 的 IP 地址为 192.168.75.18，主机 B 的 IP 地址为 192.168.75.146，主机 C 的 IP 地址为 192.168.75.158，主机 D 的 IP 地址为 192.168.75.161，主机 E 的 IP 地址为 192.168.75.173，共同的子网掩码是 255.255.255.240。请回答:1)5 台主机 A、B、C、D、E 分属几个网段?哪些主机位于同一网段?主机 D 的网络地址为多少?2)若要加入第 6 台主机 F，使它能与主机 A 属于同一网段，其 IP 地址范围是多少?3)若在网络中另加入一台主机，其 IP 地址为 192.168.75.164，它的广播地址是多少?哪些主机能够收到?", "Answer": "1) 主机A的网络号为192.168.75.16; 主机B和C在一个网段，网络号为192.168.75.144; 主机D和E在一个网段，网络号为192.168.75.160。2) 主机F所在的网段为192.168.75.16，IP地址范围为192.168.75.17~192.168.75.30，但不能为192.168.75.18。3) 广播地址为192.168.75.175，主机D和主机E可以收到。"}
{"ID": 4086, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "为什么要使用 UDP?让用户进程直接发送原始的IP分组不就足够了吗?", "Answer": "仅仅使用 IP 分组还不够。IP 分组包含 IP 地址，该地址指定一个目的机器。一旦这样的分组到达目的机器，网络控制程序如何知道把它交给哪个进程呢? UDP 分组包含一个目的端口，这一信息是必需的，因为有了它，分组才能被投递给正确的进程。此外，UDP 可以对数据报做包括数据段在内的差错检测，而 IP 只对其首部做差错检测。"}
{"ID": 4087, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "使用 TCP 对实时语音数据的传输是否有问题?使用 UDP 传送数据文件时有什么问题?", "Answer": "如果语音数据不需要实时播放，那么可以使用 TCP，因为 TCP 有重传机制，传输可靠。接收端用 TCP 将语音数据接收完毕后，可以在以后的任何时间进行播放。若假定是实时传输，不宜重传，则必须使用 UDP。UDP 不保证可靠递交，没有重传机制，因此在传输数据时可能会丢失数据，但 UDP 比 TCP 的开销要小很多，实时性好。"}
{"ID": 4088, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个应用程序用 UDP，到了第 4 层将数据报再划分为 4 个数据报片发送出去。结果前两个数据报片丢失，后两个到达目的站。过了一段时间应用程序重传 UDP，而 IP 层仍然划分为 4 个数据报片来传送。结果这次前两个到达目的站而后两个丢失。试问:在目的站能否将这两次传输的 4 个数据报片组装成为完整的数据报?假定目的站第一次收到的后两个数据片仍然保存在目的站的缓存中。", "Answer": "不行。重传时，IP 数据报的标识字段会有另一个标识符。仅当标识符相同的分段才能组装成一个完整的 IP 数据报。前两个分段的标识符与后两个分段的标识符不同，因此不能组装成一个 IP 数据报。"}
{"ID": 4089, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个UDP 用户数据报的数据字段为8192B，要使用以太网来传送。假定数据报无选项。试问应当划分为几个正数据报片?说明每个IP数据报片的数据字段长度和片段偏移字段的值。", "Answer": "以太网帧的数据段的最大长度是1500B，UDP用户数据报的首部是8B。假定IP数据报无选项，首部长度都是20B。IP数据报的片段偏移指出一个片段在原IP分组中的相对位置，偏移的单位是8B。UDP用户数据报的数据字段为8192B，加上8B的首部，总长度是8200B。应当划分为6个IP报片。各IP报片总长度、数据长度和片偏移如下表所示。\nIP报片总长度\t数据长度\t片偏移\n1500B\t1480B\t0\n1500B\t1480B\t185\n1500B\t1480B\t370\n1500B\t1480B\t555\n1500B\t1480B\t740\n820B\t740B\t925\n\n\n"}
{"ID": 4090, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在使用 TCP 传输数据时，如果有一个确认报文段丢失，那么也不一定会引起与该确认报文段对应的数据的重传。试说明理由。", "Answer": "这是因为发送方可能还未重传时，就收到了对更高序号的确认。例如主机A连续发送两个报文段(SEQ=92，DATA共8B)和(SEQ=100，DATA共20B)，均正确到达主机B。B连续发送两个确认(ACK=100和ACK=120)，但前一个确认帧在传送时丢失。例如A在第一个报文段(SEO=92，DATA共8B)超时之前收到了对第二个报文段的确认(ACK=120)，此时A知道，119号和在119号之前的所有字节(包括第一个报文段中的所有字节)均已被B正确接收，因此 A不会再重传第一个报文段。"}
{"ID": 4091, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "如果收到的报文段无差错，只是报文段失序，那么 TCP 对此未做明确规定，而是让 TCP 的实现者自行确定。试讨论两种可能的方法的优劣: 1)将失序报文段丢弃。2)先将失序报文段暂存于接收缓存内，待所缺序号的报文段收齐后再一起上交应用层。", "Answer": "第一种方法将失序报文段丢弃，会引起被丢弃报文段的重复传送，增加对网络带宽的消耗，但由于用不着将该报文段暂存，可避免对接收方缓冲区的占用。第二种方法先将失序报文段暂存于接收缓存内，待所缺序号的报文段收齐后再一起上交应用层;这样有可能避免发送方对已被接收方收到的失序报文段的重传，减少对网络带宽的消耗，但增加了接收方缓冲区的开销。"}
{"ID": 4092, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个 TCP 连接要发送 3200B 的数据。第一个字节的编号为10010。如果前两个报文各携带 1000B的数据，最后一个携带剩下的数据，请写出每个报文段的序号。", "Answer": "TCP为传送的数据流中的每个字节都编上一个序号。报文段的序号指的是本报文段所发送的数据的第一个字节的序号。因此第一个报文段的序号为10010，第二个报文段的序号为10010+1000=11010，第三个报文段的序号为11010+1000=12010。"}
{"ID": 4093, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "设 TCP 使用的最大窗口尺寸为 64KB，TCP 报文在网络上的平均往返时间为 20ms。问 TCP 协议所能得到的最大吞吐量是多少? (假设传输信道的带宽是不受限的。) ", "Answer": "最大吞吐量表明在一个 RTT 内将窗口中的字节全部发送完毕。在平均往返时间20ms内，发送的最大数据盘为最大窗口值，即64x1024B，64x1024x8/(20x10^-3)≈26.2Mb/s。因此，所能得到的最大吞吐量是26.2Mb/s。"}
{"ID": 4094, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知当前 TCP 连接的 RTT 值为 35ms，连续收到 3 个确认报文段，它们比相应的数据报文段的发送时间滞后了 27ms、30ms 与 21ms。设 a=0.2。计算第三个确认报文段到达后的新的 RTT 估计值。", "Answer": "新估计 RTT=(1-α)*(旧 RTT)+α*(新 RTT 样本)，因此有 RTT1=(1-0.2)x35+0.2x27=33.4ms，RTT2=(1-0.2)x33.4+0.2x30≈32.7ms，RTT3=(1-0.2)x32.7+0.2x21≈30.4ms。所以当第三个确认报文到达后，新的RTT估计值是30.4ms。"}
{"ID": 4095, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "网络允许的最大报文段的长度为 128B，序号用 8 位表示，报文段在网络中的寿命为 30s。求每条 TCP 连接所能达到的最高数据率。", "Answer": "具有相同编号的报文段不应同时在网络中传输，必须保证当序列号循环回来重复使用时，具有相同序列号的报文段已从网络中消失，类似于GBN原理(2^n-1)。现在序号用8位表示，报文段的寿命为30s，那么在30s的时间内发送方发送的报文段的数目不能多于255个，225*128*8/30=8704b/s，所以每条TCP连接所能达到的最高数据率为8704b/s。"}
{"ID": 4096, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在一个 TCP 连接中，信道带宽为 1Gb/s，发送窗口固定为 6553B，端到端时延为 20ms。可以取得的最大吞吐率是多少?线路效率是多少?(发送时延忽略不计，TCP 及其下层协议首部长度忽略不计，最大吞吐率=一个 RTT 传输的有效数据/一个 RTT 的时间。)", "Answer": "由于收到接收方的确认至少需要一个 RTT，因此在一个 RTT 内，发送的数据量不能超过发送窗口大小，所以吞吐率 =发送窗口大小/RTT。题目中告诉的是端到端时延，RTT=2x端到端时延，因此RTT=2x20=40ms，所以吞吐率=65535x(8/0.04)=13.107Mb/s。线路效率=吞吐率/信道带宽。本题中，线路效率(13.107Mb/s)/(1000Mb/s)=1.31%。本题在计算时要特别注意单位(是b还是B)，要区分Gb/s和GB/S。"}
{"ID": 4097, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "考虑在一条具有 10ms 来回路程时间的线路上采用慢启动拥塞控制而不发生网络拥塞情况下的效应，接收窗口为 24KB，且最大段长为2KB。那么需要多长时间才能发送第一个完全窗口?", "Answer": "慢启动拥塞控制考虑了两个潜在的问题，即网络容量和接收方容量，并且分别处理每个问题。为此，每个发送方都维持两个窗口，即接收方准许的窗口和拥窗口。发送方可以发送的字节数是这两个窗口中的最小值。建立一条连接时，发送方把拥塞窗口初始化为在该连接上使用的1个最大报文段尺寸。然后它发送一个最大报文段。如果这个报文段在超时之前得到确认，那么发送方就把拥塞窗口增加到2个最大报文段长，并发送两个报文段。发出去的每个报文段被确认后，拥塞窗口都要增加1个最大报文段。因此，当拥塞窗口是n个报文段时，如果所有n个报文段都及时得到确认，那么拥塞窗口将增加 n个最大报文段，变成 2n个最大报文段。事实上，每一次突发性连续报文段都会使拥塞窗口加倍。拥塞窗口继续按指数型增长，直到超时发生，或者到了接收方窗口的边界。其思想是如果突发量 1024B、2048B和4096B 工作得很好，但8192B的突发量引起超时，那么拥塞窗口应该设置成 4096B 以避免拥塞。只要拥塞窗口保持在 4096B，不管接收方许什么样的窗口空间，都不会发送大于 4096B 的突发量。这种算法称为慢启动。现在所有的TCP 实现都需要支持这个算法。现在，最大的段长是 2KB，开始的突发量分别是2KB,4KB,8KB和16KB，下面是 24KB，即第一个完全窗口。10msx4=40ms，因此需要40ms才能发送第一个完全窗口。"}
{"ID": 4098, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "设 TCP 的拥塞窗口的慢开始门限值初始为 12(单位为报文段)，当拥塞窗口达到 16 时出现超时，再次进入慢启动过程。从此时起若恢复到超时时刻的拥塞窗口大小，需要的往返次数是多少?", "Answer": "在慢启动和拥塞避免算法中，拥塞窗口初始为1，窗口大小开始按指数增长。当拥塞窗口大于慢开始门限后停止使用慢启动算法，改用拥塞避免算法。此处慢开始的门限值初始为12，当拥塞窗口增大到 12 时改用拥塞避免算法，窗口大小按线性增长，每次增加1个报文段，当增加到16 时，出现超时，重新设门限值为8(16的一半)，拥塞窗口再重新设为1，执行慢启动算法，到门限值8时执行拥塞避免算法。这样，拥塞窗口的变化就为1,2,4,8,12,13,14,15,16,1,2,4,8,9,10,11,12,13,14,15,16,...。可见从出现超时时拥塞窗口为 16 到恢复拥塞窗口大小为 16，需要的往返时间次数是11。注意，发现超时时，拥塞窗口从16变为1是立即进行的，不会间隔一个RTT。"}
{"ID": 4099, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定 TCP 报文段载荷是 1500B，最大分组存活时间是 120，那么使得 TCP 报文段的序列号不会循环回来而重叠，线路允许的最快速度是多大?(不考虑帧长限制。)", "Answer": "目标在120s内最多发送2^{32}B(序列号为32位)，即35791394B/s的载荷。TCP 报文段载荷是 1500B，因此可以发送23861个报文段。TCP开销是20B，IP开销是20B，以太网开销是26B(18B 的首部和尾部，7B的前同步码，1B的帧开始定界符)。这就意味着对于1500B的载荷，必须发送1566B。1566x8x23861=299Mb/s，因此允许的最快线路速率是299Mb/s。比这一速度更快时，就会冒在同一时间内不同的 TCP 报文段具有相同序号的风险。"}
{"ID": 4100, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个 TCP 连接使用 256kb/s 的链路，其端到端时延为 128ms。经测试发现吞吐率只有 128kb/s。问窗口是多少?忽略 PDU 封装的协议开销及接收方应答分组的发送时间(假定应答分组长度很小)", "Answer": "来回路程的时延128msx2=256ms。设窗口值为X(注意:单位为字节)。假定一次最大发送量等于窗口值，且发送时间等于256ms，那么每发送一次都得停下来期待再次得到下一个窗口的确认，以得到新的发送许可。这样，发送时间等于停止等待应的时间，结果测到的平均吞吐率就等于发送速率的一半，即128kb/s，8X/(128x2x1000)=256x0.001 X=256x1000x256x0.001/8=256x32=8192。所以，窗口值为 8192。"}
{"ID": 4101, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Transport Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定 TCP 最大报文段的长度是 1KB，拥塞窗口被置为 18KB，并且发生了超时事件。如果接着的 4 次迸发量传输都是成功的，那么该窗口将是多大?", "Answer": "在 TCP的拥塞控制算法中，除使用慢启动的接收窗口和拥塞窗口外，还使用第3个参数，即门槛值。发生超时的时候，该门槛值被设置成当前拥塞窗口值的一半即 9KB，而拥塞窗口则重置成一个最大报文段长。然后再使用慢启动的算法决定网络可以接受的进发量，一直增长到门槛值为止。从这一点开始，成功的传输线性地增加拥塞窗口，即每次进发传输后只增加一个最大报文段，而不是每个报文段传输后都增加一个最大报文段的窗口值。现在由于发生了超时，下一次传输将是1个最大报文段，然后是2个、4个和8个最大报文段，第四次发送成功，且门限为 9KB，所以在4次进发量传输后，拥塞窗口将增加为 9KB。"}
{"ID": 4102, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "一台具有单个 DNS 名称的机器可以有多个 IP 地址吗?为什么?", "Answer": "可以，IP地址由网络号和主机号两部分构成。如果一台机器有两个以太网卡，那么它可以同时连到两个不同的网络上(网络号不能相同，否则会发生冲突);如果是这样的话，那么它需要两个 IP地址。"}
{"ID": 4103, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "一台计算机可以有两个属于不同顶级域的 DNS 名字吗?如果可以，试举例说明。", "Answer": "可以，例如 www.baidu.com和 www.baidu.cn属于不同的顶级域(.com和.cn)，但它们可以有同样的 IP 地址。用户输入这两个不同的 DNS 名字，访问的都是同一台服务器。"}
{"ID": 4104, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "为什么要引入域名的概念?举例说明域名转换过程。域名服务器中的高速缓存的作用是什么?", "Answer": "IP 地址很难记忆，引入域名是为了便于人们记忆和识别。域名解析可以把域名转换成 IP 地址。域名转换过程是向本地域名服务器申请解析，如果本地域名服务器查不到，那么向根域名服务器进行查询。如果根域名服务器中也查不到，那么向根域名服务器中保存的顶级域名服务器和相应授权域名服务器进行查询，一定可以查找到。域名服务器中高速缓存的作用:将近期访问过的域名信息保存在高速缓存，再次访问时会从缓存中读取，不需要重新解析，这样就可以加快域名解析的响应速度。"}
{"ID": 4105, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件传输协议的主要工作过程是怎样的?主进程和从属进程各起什么作用?", "Answer": "FTP的主要工作过程如下:在进行文件传输时，FTP客户所发出的传送请求通过控制连接发送给服务器端的控制进程，并在整个会话期间一直保持打开，但控制连接不用来传送文件。服务器端的控制进程在接收到FTP 客户发送来的文件传输请求后，就创建数据传送进程和数据连接数据连接用来连接客户端和服务器端的数据传输进程，数据传送进程实际完成对文件的传送，在传送完毕后关闭“数据传送连接”，并结束运行。 FTP的服务器进程由两大部分组成:一个主进程，负责接收新的请求:若干从属进程，负责处理单个请求。"}
{"ID": 4106, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "为什么 FTP 要使用两个独立的连接，即控制连接和数据连接?", "Answer": "在 FTP的实现中，客户与服务器之间采用了两条传输连接，其中控制连接用于传输各种 FTP命令，而数据连接用于文件的传送。之所以这样设计，是因为使用两条独立的连接可使FTP变得更加简单、更容易实现、更有效率。同时在文件传输过程中，还可以利用控制连接控制传输过程如客户可以请求终止、暂停传输等。"}
{"ID": 4107, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "电子邮件系统使用 TCP 传送邮件，为什么有时会遇到邮件发送失败的情况? 为什么有时对方会收不到发送的邮件?", "Answer": "有时对方的邮件服务器不工作，邮件就发送不出去。对方的邮件服务器出故障也会使邮件丢失。有时网络非常拥塞，路由器丢弃大量的IP数据报，导致通信中断。"}
{"ID": 4108, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "MIME 与 SMTP 的关系是怎样的?", "Answer": "由于 SMTP存在着一些缺点和不足，通过 MIME 并非改变或取代 SMTP。MIME 继续使用RFC822格式,但增加了邮件主体的结构,并定义了传送非 ASCI 码的编码规则。也就是说,MIME邮件可在已有的电子邮件和协议下传送。"}
{"ID": 4109, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "主机A 想下载文件 ftp://ftp.abc.edu.cn/file，大致描述下载过程中主机和服务器的交互过程。", "Answer": "大致过程如下: ① 建立一个 TCP 连接到服务器 ftp.abc.edu.cn的21号端口，然后发送登录账号和密码。 ② 服务器返回登录成功信息后，主机 A 打开一个随机端口，并将该端口号发送给服务器。主机 A 发送读取文件命令，内容为 get fle，服务器使用 20号端口建立一个 TCP 连接到主机 A 的随机打开的端口。 ④服务器把文件内容通过第二个连接发送给主机 A，传输完毕后连接关闭。"}
{"ID": 4110, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面列出的是使用 TCP/IP 通信的两台主机 A 和 B 传送邮件的对话过程，请根据这个对话回答问题。 A: 220 beta.gov simple mail transfer service ready B: HELO alpha.edu A: 250 beta.gov B: MAIL FROM:smith@alpha.edu A: 250 mail accepted B: RCPT TO:jones@beta.gov A: 250 recipient accepted B: RCPT TO:green@beta.gov A: 550 no such user here B: RCPT TO:brown@beta.gov A: 250 recipient accepted B: DATA A: 354 start mail input; end with <CR><LF>.<CR><LF> B: Date:Fri 27 May 2011 14:16:21 BJ B: From:smith@alpha.edu B: … B: … B: A: 250 OK B: QUIT A: 221 beta.gov service closing transmission channel. 问题: 1) 邮件接收方和发送方机器的全名是什么? 发邮件的用户名是什么? 2) 发送方想把邮件发给几个用户? 它们的名字各是什么? 3) 哪些用户能收到该邮件? 4) 传送邮件所使用的传输层协议的名称是什么? 5) 为了接收邮件，接收方机器上等待连接的端口号是多少?", "Answer": "1)邮件接收方机器的全名是beta.gov，邮件发送方机器的全面是alpha.edu, 发邮件的用户名是 smith。 2)发送方想把该邮件发给三个用户，它们的名字分别是jones、green和 brown。 3)用户jones和 brown 能收到邮件，beta.gov上不存在用户 geen。 4)传送邮件所用的传输层协议称为TCP(传输控制协议)。 5)为了接收邮件，接收方服务器上等待连接的端口号是 25。"}
{"ID": 4111, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在浏览器中输入 http://google.com 并按回车，直到网站的首页显示在其浏览器中请问在此过程中，按照 TCP/IP 参考模型，从应用层到网络层都用到了哪些协议?", "Answer": "1) 应用层。HTTP:WWW访问协议:DNS:域名解析服务。 2)传输层。TCP:HTTP提供可靠的数据传输;UDP:DNS使用UDP传输。 3)网络层。IP:IP包传输和路由选择:ICMP:提供网络传输中的差错检测;ARP:将本机的默认网关 IP 地址映射成物理 MAC 地址。"}
{"ID": 4112, "Split": "Test", "Domain": "Computer Network", "SubDomain": "Application Layer", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在如下条件下，计算使用非持续方式和持续方式请求一个 Web 页面所需的时间: 1) 测试的 RTT 的平均值为 150ms，一个gif对象的平均发送时延为 2) 一个 web 页面中有 10 个 gif 图片，Web 页面的基本 HTML 文件: HTTP 请求报文，TCP 握手报文大小忽略不计。 3) TCP 三次握手的第三步中携带一个 HTTP 请求。 4) 使用非流水线方式。", "Answer": "每次进行 TCP 三次握手时，前两次握手消耗一个RTT=150ms，第3次握手的报文段捎带客户对 HTML,文件的请求，因此请求和接收基本 HTM,文件耗时一个 RTT=150ms(其大小忽略不 计时，发送时延为 0ms)。 在非持久连接方式下: 第一次建立 TCP 连接并传送html文件所需的时间为t_{html}=(150+150)ms=300ms;每次建立 TCP连接并传送一个gif文件所需的时间为t_{gif}=(150+150+35)ms=335ms;所以总时间t_{all}=t_{html}+t_{gif}x10=(300+335x10)ms=3650ms。在持久连接方式下: 只需要建立一次 TCP连接，然后传送 html文件和 10个 gif文件。 总时间t_{all}=t_{TCP}+t_{html}+t_{gif}x10=150+150+(150+35)x10=2150ms。"}
{"ID": 4113, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "用户可以通过()两种方式来使用计算机。", "A": "命令接口和函数", "B": "命令接口和系统调用", "C": "命令接口和文件管理", "D": "设备管理方式和系统调用", "Answer": "B"}
{"ID": 4114, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "为了方便用户直接或间接地控制自己的作业，操作系统向用户提供了命令接口，该接口又可进一步分为（）。", "A": "联机用户接口和脱机用户接口 ", "B": "程序接口和图形接口", "C": "联机用户接口和程序接口 ", "D": "脱机用户接口和图形接口", "Answer": "A"}
{"ID": 4115, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "分时系统的一个重要性能是系统的响应时间，对操作系统的()因素进行改进有利于改善系统的响应时间。", "A": "加大时间片", "B": "采用静态页式管理", "C": "优先级+非抢占式调度算法 ", "D": "代码可重入", "Answer": "C"}
{"ID": 4116, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在操作系统中，只能在核心态下运行的指令是()。", "A": "读时钟指令", "B": "置时钟指令", "C": "取数指令", "D": "寄存器清零", "Answer": "B"}
{"ID": 4117, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列选项中，()不是操作系统关心的问题。", "A": "管理计算机裸机", "B": "设计、提供用户程序与硬件系统的界面", "C": "管理计算机系统资源", "D": "高级程序设计语言的编译器", "Answer": "D"}
{"ID": 4118, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "操作系统的基本功能是()。", "A": "提供功能强大的网络管理工具", "B": "提供用户界面方使用户使用", "C": "提供方便的可视化编辑程序", "D": "控制和管理系统内的各种资源", "Answer": "D"}
{"ID": 4119, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "现代操作系统中最基本的两个特征是()", "A": "并发和不确定", "B": "并发和共享", "C": "共享和虚拟", "D": "虚拟和不确定", "Answer": "B"}
{"ID": 4120, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列关于并发性的叙述中，正确的是()。", "A": "并发性是指若干事件在同一时刻发生", "B": "并发性是指若干事件在不同时刻发生", "C": "并发性是指若干事件在同一时间间隔内发生", "D": "并发性是指若干事件在不同时间间隔内发生", "Answer": "C"}
{"ID": 4121, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "系统调用是由操作系统提供给用户的，它()。", "A": "直接通过键盘交互方式使用", "B": "只能通过用户程序间接使用", "C": "是命令接口中的命令", "D": "与系统的命令一样", "Answer": "B"}
{"ID": 4122, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "用户在程序中试图读某文件的第100个逻辑块，使用操作系统提供的()接口。", "A": "系统调用", "B": "键盘命令", "C": "原语", "D": "图形用户接口", "Answer": "A"}
{"ID": 4123, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "操作系统与用户通信接口通常不包括()。", "A": "shell", "B": "命令解释器", "C": "广义指令", "D": "缓存管理指令", "Answer": "D"}
{"ID": 4124, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "提高单机资源利用率的关键技术是()。", "A": "脱机技术", "B": "虚拟技术", "C": "交换技术", "D": "多道程序设计技术", "Answer": "D"}
{"ID": 4125, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "批处理系统的主要缺点是（）。", "A": "系统吞吐量小", "B": "CPU利用率不高", "C": "资源利用率低", "D": "无交互能力", "Answer": "D"}
{"ID": 4126, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列选项中，不属于多道程序设计的基本特征的是()。", "A": "制约性", "B": "间断性", "C": "顺序性", "D": "共享性", "Answer": "C"}
{"ID": 4127, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "操作系统的基本类型主要有()。", "A": "批处理操作系统、分时操作系统和多任务系统", "B": "批处理操作系统、分时操作系统和实时操作系统", "C": "单用户系统、多用户系统和批处理操作系统", "D": "实时操作系统、分时操作系统和多用户系统", "Answer": "B"}
{"ID": 4128, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "实时操作系统必须在()内处理来自外部的事件。", "A": "一个机器周期", "B": "被控制对象规定时间", "C": "周转时间", "D": "时间片", "Answer": "B"}
{"ID": 4129, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "()不是设计实时操作系统的主要追求目标。", "A": "安全可靠", "B": "资源利用率", "C": "及时响应", "D": "快速处理", "Answer": "B"}
{"ID": 4130, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "分时系统追求的目标是()。", "A": "充分利用I/O设备", "B": "比较快速响应用户", "C": "提高系统吞吐率", "D": "充分利用内存", "Answer": "B"}
{"ID": 4131, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在分时系统中，时间片一定时，()响应时间越长。", "A": "内存越多", "B": "内存越少", "C": "用户数越多", "D": "用户数越少", "Answer": "C"}
{"ID": 4132, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列操作系统的各个功能组成部分中，()可不需要硬件的支持。", "A": "进程调度", "B": "时钟管理", "C": "地址映射", "D": "中断系统", "Answer": "A"}
{"ID": 4133, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机区分核心态和用户态指令后，从核心态到用户态的转换是由操作系统程序执行后完成的，而用户态到核心态的转换则是由()完成的。", "A": "硬件", "B": "核心态程序", "C": "用户程序", "D": "中断处理程序", "Answer": "A"}
{"ID": 4134, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "“访管”指令()使用。", "A": "仅在用户态下", "B": "仅在核心态下", "C": "在规定时间内", "D": "在调度时间内", "Answer": "A"}
{"ID": 4135, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "用()设计的操作系统结构清晰且便于调试。", "A": "分层式构架", "B": "模块化构架", "C": "微内核构架", "D": "宏内核构架", "Answer": "A"}
{"ID": 4136, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "相对于微内核系统，()不属于大内核操作系统的缺点。", "A": "占用内存空间大", "B": "缺乏可扩展性而不方便移植", "C": "内核切换太慢", "D": "可靠性较低", "Answer": "C"}
{"ID": 4137, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列说法中，()不适合描述微内核操作系统。", "A": "内核足够小", "B": "功能分层设计", "C": "基于C/S模式", "D": "策略与机制分离", "Answer": "B"}
{"ID": 4138, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机操作系统的引导程序位于()中。", "A": "主板BIOS", "B": "片外 Cache", "C": "主存ROM区", "D": "硬盘", "Answer": "D"}
{"ID": 4139, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于操作系统的叙述中，错误的是()。", "A": "操作系统是管理资源的程序", "B": "操作系统是管理用户程序执行的程序", "C": "操作系统是能使系统资源提高效率的程序", "D": "操作系统是用来编程的程序", "Answer": "D", "Explanation": "操作系统是用来管理资源的程序，用户程序也是在操作系统的管理下完成的。配置了操作系统的机器与裸机相比，资源利用率大大提高。操作系统不能直接用来编程，D错误。"}
{"ID": 4140, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列()应用工作最好采用实时操作系统平台。Ⅰ. 航空订票 Ⅱ. 办公自动化 Ⅲ. 机床控制 Ⅳ. AutoCAD Ⅴ. 工资管理系统 Ⅵ. 股票交易系统", "A": "Ⅰ、Ⅱ和Ⅲ", "B": "Ⅰ、Ⅲ和Ⅳ", "C": "Ⅰ、Ⅴ和Ⅳ", "D": "Ⅰ、Ⅲ和Ⅵ", "Answer": "D", "Explanation": "实时操作系统主要应用在需要对外界输入立即做出反应的场合，不能有拖延，否则会产生严重后果。本题的选项中，航空订票系统需要实时处理票务，因为票额数据库的数量直接反映了航班的可订机位。机床控制也要实时，不然会出差错。股票交易行情随时在变，若不能实时交易会出现时间差，使交易出现偏差。"}
{"ID": 4141, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于操作系统的说法中，错误的是()。Ⅰ. 在通用操作系统管理下的计算机上运行程序，需要向操作系统预订运行时间 Ⅱ. 在通用操作系统管理下的计算机上运行程序，需要确定起始地址，并从这个地址开始执行 Ⅲ. 操作系统需要提供高级程序设计语言的编译器 Ⅳ. 管理计算机系统资源是操作系统关心的主要问题", "A": "Ⅰ、Ⅲ", "B": "Ⅱ、Ⅲ", "C": "Ⅰ、Ⅱ、Ⅲ、Ⅳ", "D": "以上答案都正确", "Answer": "A", "Explanation": "Ⅰ:通用操作系统使用时间片轮转调度算法，用户运行程序并不需要预先预订运行时间，因此Ⅰ项错误； Ⅱ:操作系统执行程序时，必须从起始地址开始执行，因此Ⅱ项正确;；Ⅲ:编译器是操作系统的上层软件，不是操作系统需要提供的功能，因此Ⅲ项错误; Ⅳ:操作系统是计算机资源的管理者，管理计算机系统资源是操作系统关心的主要问题，因此Ⅳ项正确。综合分析，Ⅰ和Ⅲ是错误项，因此选 A。"}
{"ID": 4142, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列说法中，正确的是()。Ⅰ. 批处理的主要缺点是需要大量内存 Ⅱ. 当计算机提供了核心态和用户态时，输入/输出指令必须在核心态下执行 Ⅲ. 操作系统中采用多道程序设计技术的最主要原因是提高CPU和外部设备的可靠性 Ⅳ. 操作系统中，通道技术是一种硬件技术", "A": "Ⅰ、Ⅱ", "B": "Ⅰ、Ⅲ", "C": "Ⅱ、Ⅳ", "D": "Ⅱ、Ⅲ、Ⅳ", "Answer": "C", "Explanation": "Ⅰ 错误:批处理的主要缺点是缺少交互性。批处理系统的主要缺点是常考点，读者对此要非常敏感。Ⅱ正确:输入/输出指令需要中断操作，中断必须在核心态下执行。Ⅲ错误:多道性是为了提高系统利用率和吞吐量而提出的。Ⅳ正确:I/O通道实际上是一种特殊的处理器，它具有执行I/O指令的能力，并通过执行通道程序来控制 I/O 操作。综上分析，Ⅱ、Ⅳ 正确。"}
{"ID": 4143, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于系统调用的说法中，正确的是()。Ⅰ. 用户程序设计时，使用系统调用命令,该命令经过编译后,形成若干参数和陷入(trap)指令 Ⅱ. 用户程序设计时，使用系统调用命令，该命令经过编译后，形成若干参数和屏蔽中断指令 Ⅲ. 系统调用功能是操作系统向用户程序提供的接口 Ⅳ. 用户及其应用程序和应用系统是通过系统调用提供的支持和服务来使用系统资源完成其操作的", "A": "Ⅰ、Ⅲ", "B": "Ⅱ、Ⅳ", "C": "Ⅰ、Ⅲ、Ⅳ", "D": "Ⅱ、Ⅲ、Ⅳ", "Answer": "C", "Explanation": "Ⅰ正确:系统调用需要触发trap 指令,如基于 x86 的 Linux 系统,该指令为 int 0x80 或 sysenter。Ⅱ是干扰项，程序设计无法形成屏蔽中断指令。Ⅲ正确:系统调用的概念。Ⅳ正确:操作系统是一层接口，对上层提供服务，对下层进行抽象。它通过系统调用向其上层的用户、应用程序和应用系统提供对系统资源的使用。"}
{"ID": 4144, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列选项中，必须在核心态下执行的指令是()。", "A": "从内存中取数", "B": "将运算结果装入内存", "C": "算术运算", "D": "输入/输出", "Answer": "D", "Explanation": "输入输出指令涉及中断操作，而中断处理是由系统内核负责的，工作在核心态。而A、B、C 选项均可通过使用汇编语言编程来实现，因此它们可在用户态下执行。当然，读者也可用前面提到的“水杯”例子思考如何排除A、B、C。操作系统管理内存时，管理的是内存中的数据放在哪里、哪里可以放数据、哪里不可以放数据(内存保护)、哪里空闲等问题，而内存中的数据是什么、怎么读和写，都不是核心态关心的。就好像操作系统管理的是杯子摆在哪里、哪些杯子中的水可以喝、哪些杯子中的水不能喝，而杯子中是水还是饮料、你是拿起杯子喝还是把吸管插进去吸，都不是操作系统关心的问题。“杯子”的例子可以帮助我们准确理解操作系统的任务，后续章节中的很多问题采用这个例子进行对比，就会十分清晰。"}
{"ID": 4145, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "CPU处于核心态时，它可以执行的指令是()。", "A": "只有特权指令 ", "B": "只有非特权指令", "C": "只有“访管”指令 ", "D": "除“访管”指令的全部指令", "Answer": "D", "Explanation": "访管指令在用户态下使用，是用户程序“自愿进管”的手段，用户态下不能执行特权指令。在核心态下，CPU 可以执行指令系统中的任何指令。"}
{"ID": 4146, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于分层式结构操作系统的说法中，()是错误的。", "A": "各层之间只能是单向依赖或单向调用", "B": "容易实现在系统中增加或替换一层而不影响其他层", "C": "具有非常灵活的依赖关系", "D": "系统效率较低", "Answer": "C", "Explanation": "单向依赖是分层式OS的特点。分层式OS中增加或替换一个层中的模块或整层时，只要不改变相应层间的接口，就不会影响其他层，因而易于扩充和维护。层次定义好后，相当于各层之间的依赖关系也就固定了，因此往往显得不够灵活，C错误。每执行一个功能，通常都要自上而下地穿越多层，增加了额外的开销，导致系统效率降低。"}
{"ID": 4147, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "相对于传统操作系统结构，采用微内核结构设计和实现操作系统有诸多好处，下列()是微内核结构的特点。Ⅰ.使系统更高效 Ⅱ.添加系统服务时，不必修改内核 Ⅲ.微内核结构没有单一内核稳定 Ⅳ.使系统更可靠", "A": "Ⅰ、Ⅲ、Ⅳ", "B": "Ⅰ、Ⅱ、Ⅳ", "C": "Ⅱ、Ⅳ", "D": "Ⅰ、Ⅳ", "Answer": "C", "Explanation": "微内核结构需要频繁地在管态和目态之间进行切换，操作系统的执行开销相对偏大，那些移出内核的操作系统代码根据分层的原则被划分成若干服务程序，它们的执行相互独立，交互则都借助于微内核进行通信，影响了系统的效率，因此1不是优势。由于内核的服务变少，且一般来说内核的服务越少内核越稳定，所以Ⅲ错误。而Ⅱ、Ⅳ正是微内核结构的优点。"}
{"ID": 4148, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于操作系统结构的说法中，正确的是()。Ⅰ.当前广泛使用的WindowsXP操作系统，采用的是分层式OS结构 Ⅱ.模块化的OS结构设计的基本原则是，每一层都仅使用其底层所提供的功能和服务，这样就使系统的调试和验证都变得容易 Ⅲ.由于微内核结构能有效支持多处理机运行，故非常适合于分布式系统环境 Ⅳ.采用微内核结构设计和实现操作系统具有诸多好处，如添加系统服务时，不必修改内核、使系统更高效。", "A": "Ⅰ和Ⅱ", "B": "Ⅰ和Ⅲ", "C": "Ⅲ", "D": "Ⅲ和Ⅳ", "Answer": "C", "Explanation": "Windows 是宏内核操作系统，Ⅰ错误。Ⅱ描述的是层次化构架的原则。在微内核构架中，客户和服务器之间、服务器和服务器之间的通信采用消息传递机制，这就使得微内核系统能很好地支持分布式系统，Ⅲ 正确。添加系统服务时不必修改内核，这就使得微内核构架的可扩展性和灵活性更强;微内核构架的主要问题是性能问题，“使系统更高效”显然错误。"}
{"ID": 4149, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于计算机操作系统引导，描述不正确的是()。", "A": "计算机的引导程序驻留在ROM中，开机后自动执行", "B": "引导程序先做关键部位的自检，并识别已连接的外设", "C": "引导程序会将硬盘中存储的操作系统全部加载到内存中", "D": "若计算机中安装了双系统，引导程序会与用户交互加载有关系统", "Answer": "C", "Explanation": "常驻内存的只是操作系统内核，其他部分仅在需要时才调入。"}
{"ID": 4150, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于VMware workstation虚拟机的说法中，错误的是()。", "A": "真实硬件不会直接执行虚拟机中的敏感指令", "B": "虚拟机中只能安装一种操作系统", "C": "虚拟机是运行在计算机中的一个应用程序", "D": "虚拟机文件封装在一个文件夹中，并存储在数据存储器中", "Answer": "B", "Explanation": "WMware workstation 虚拟机属于第二类虚拟机管理程序，如果真实硬件直接执行虚拟机中的敏感指令，那么该指令非法时可能会导致宿主操作系统崩溃，而这是不可能的，实际上是由第二类虚拟机管理程序模拟真实硬件环境。虚拟机看起来和真实物理计算机没什么两样，因此当然可以安装多个操作系统。WMware workstation 就是一个安装在计算机上的程序，在创建虚拟机时，会为该虚拟机创建一组文件，这些虚拟机文件都存储在主机的磁盘上。"}
{"ID": 4151, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个进程映像是()。", "A": "由协处理器执行的一个程序", "B": "一个独立的程序+数据集", "C": "PCB结构与程序和数据的组合", "D": "一个独立的程序", "Answer": "C"}
{"ID": 4152, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "系统进程所请求的一次I/O操作完成后，将使进程状态从()。", "A": "运行态变为就绪态", "B": "运行态变为阻塞态", "C": "就绪态变为运行态", "D": "阻塞态变为就绪态", "Answer": "D"}
{"ID": 4153, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "系统动态DLL库中的系统线程，被不同的进程所调用，它们是()的线程。", "A": "不同", "B": "相同", "C": "可能不同，也可能相同", "D": "不能被调用", "Answer": "B"}
{"ID": 4154, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "()优先级是在创建进程时确定的，确定之后在整个运行期间不再改变。", "A": "先来先服务", "B": "动态", "C": "短作业(进程)优先算法", "D": "静态", "Answer": "D"}
{"ID": 4155, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在进程调度算法中，对短进程不利的是()。", "A": "短进程优先调度算法", "B": "先来先服务调度算法", "C": "高响应比优先调度算法", "D": "多级反馈队列调度算法", "Answer": "B"}
{"ID": 4156, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "不需要信号量就能实现的功能是()。", "A": "进程同步", "B": "进程互斥", "C": "执行的前驱关系", "D": "进程的并发执行", "Answer": "D"}
{"ID": 4157, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "采用资源剥夺法可以解除死锁，还可以采用()方法解除死锁。", "A": "执行并行操作", "B": "撤销进程", "C": "拒绝分配新资源", "D": "修改信号量", "Answer": "B"}
{"ID": 4158, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "引入多道程序技术的前提条件之一是系统具有()。", "A": "多个CPU", "B": "多个终端", "C": "中断功能", "D": "分时功能", "Answer": "C"}
{"ID": 4159, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "进程之间交换数据不能通过()途径进行。", "A": "共享文件", "B": "消息传递", "C": "访问进程地址空间", "D": "访问共享存储区", "Answer": "C"}
{"ID": 4160, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "进程与程序的根本区别是()。", "A": "静态和动态特点", "B": "是不是被调入内存", "C": "是不是具有就绪、运行和等待三种状态", "D": "是不是占有处理器", "Answer": "A"}
{"ID": 4161, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "操作系统是根据()来对并发执行的进程进行控制和管理的。", "A": "进程的基本状态", "B": "进程控制块", "C": "多道程序设计", "D": "进程的优先权", "Answer": "B"}
{"ID": 4162, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个进程的基本状态可以从其他两种基本状态转变过去，这个基本的状态一定是（）。", "A": "执行状态", "B": "阻塞态", "C": "就绪态变为运行态", "D": "完成状态", "Answer": "C"}
{"ID": 4163, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "用信箱实现进程间互通信息的通信机制要有两个通信原语，它们是()。", "A": "发送原语和执行原语", "B": "就绪原语和执行原语", "C": "发送原语和接收原语", "D": "就绪原语和接收原语", "Answer": "C"}
{"ID": 4164, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "同一程序经过多次创建，运行在不同的数据集上，形成了()的进程。", "A": "不同", "B": "相同", "C": "同步", "D": "互斥", "Answer": "A"}
{"ID": 4165, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "进程创建完成后会进入一个序列，这个序列称为()。", "A": "阻塞队列", "B": "挂起序列", "C": "就绪队列", "D": "运行队列", "Answer": "C"}
{"ID": 4166, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对进程的管理和控制使用()。", "A": "指令", "B": "原语", "C": "信号量", "D": "信箱", "Answer": "B"}
{"ID": 4167, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在进程转换时，下列()转换是不可能发生的。", "A": "就绪态→运行态", "B": "运行态→就绪态", "C": "运行态→阻塞态", "D": "阻塞态→运行态", "Answer": "D"}
{"ID": 4168, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "()必会引起进程切换。", "A": "一个进程创建后，进入就绪态", "B": "一个进程从运行态变为就绪态", "C": "一个进程从阻塞态变为就绪态", "D": "以上答案都不对", "Answer": "B"}
{"ID": 4169, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "采用时间片轮转调度算法分配CPU时，当处于运行态的进程用完一个时间片后，它的状态是()状态。", "A": "阻塞", "B": "运行", "C": "就绪", "D": "消亡", "Answer": "C"}
{"ID": 4170, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "两个旅行社甲和乙为旅客到某航空公司订飞机票，形成互斥资源的是()。", "A": "旅行社", "B": "航空公司", "C": "飞机票", "D": "旅行社与航空公司", "Answer": "C"}
{"ID": 4171, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "临界区是指并发进程访问共享变量段的()。", "A": "管理信息", "B": "信息存储", "C": "数据", "D": "代码程序", "Answer": "D"}
{"ID": 4172, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下()不属于临界资源。", "A": "打印机", "B": "非共享数据", "C": "共享变量", "D": "共享缓冲区", "Answer": "B"}
{"ID": 4173, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下()属于临界资源。", "A": "磁盘存储介质", "B": "公用队列", "C": "私用数据", "D": "可重入的程序代码", "Answer": "B"}
{"ID": 4174, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "原语是()。", "A": "运行在用户态的过程", "B": "操作系统的内核", "C": "可中断的指令序列", "D": "不可分割的指令序列", "Answer": "D"}
{"ID": 4175, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "用P,V操作实现进程同步，信号量的初值为()。", "A": -1, "B": 0, "C": 1, "D": "由用户确定", "Answer": "D"}
{"ID": 4176, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "可以被多个进程在任意时刻共享的代码必须是()。", "A": "顺序代码", "B": "机器语言代码", "C": "不允许任何修改的代码", "D": "无转移指令代码", "Answer": "C"}
{"ID": 4177, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个进程因在互斥信号量mutex上执行V(mutex)操作而导致唤醒另一个进程时，执行V操作后mutex的值为()。", "A": "大于0", "B": "小于0", "C": "大于等于0", "D": "小于等于0", "Answer": "D"}
{"ID": 4178, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下述()选项不是管程的组成部分。", "A": "局限于管程的共享数据结构", "B": "对管程内数据结构进行操作的一组过程", "C": "管程外过程调用管程内数据结构的说明", "D": "对局限于管程的数据结构设置初始值的语句", "Answer": "C"}
{"ID": 4179, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "并发进程之间的关系是()。", "A": "无关的", "B": "相关的", "C": "可能相关的", "D": "可能是无关的，也可能是有交往的", "Answer": "D"}
{"ID": 4180, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "系统产生死锁的可能原因是()。", "A": "独占资源分配不当", "B": "系统资源不足", "C": "进程运行太快", "D": "CPU 内核太多", "Answer": "A"}
{"ID": 4181, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于线程的叙述中，正确的是()。", "A": "线程包含CPU现场，可以独立执行程序", "B": "每个线程有自己独立的地址空间", "C": "进程只能包含一个线程", "D": "线程之间的通信必须使用系统调用函数", "Answer": "A", "Explanation": "线程是处理机调度的基本单位，当然可以独立执行程序，A对;线程没有自己独立的地址空间，它共享其所属进程的空间，B错;进程可以创建多个线程，C错;与进程之间线程的通信可以直接通过它们共享的存储空间，D错。"}
{"ID": 4182, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面的叙述中，正确的是()。", "A": "进程获得处理器运行是通过调度得到的", "B": "优先级是进程调度的重要依据，一旦确定不能改动", "C": "在单处理器系统中，任何时刻都只有一个进程处于运行态", "D": "进程申请处理器而得不到满足时，其状态变为阻塞态", "Answer": "A", "Explanation": "选项B错在优先级分静态和动态两种，动态优先级是根据运行情况而随时调整的。选项C错在系统发生死锁时有可能进程全部都处于阻塞态，或无进程任务，CPU 空闲。选项D错在进程申请处理器得不到满足时就处于就绪态，等待处理器的调度。"}
{"ID": 4183, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "并发进程失去封闭性，是指()。", "A": "多个相对独立的进程以各自的速度向前推进", "B": "并发进程的执行结果与速度无关", "C": "并发进程执行时，在不同时刻发生的错误", "D": "并发进程共享变量，其执行结果与速度有关", "Answer": "D", "Explanation": "程序封闭性是指进程执行的结果只取决于进程本身，不受外界影响。也就是说，进程在执行过程中不管是不停顿地执行，还是走走停停，进程的执行速度都不会改变它的执行结果。失去封闭性后，不同速度下的执行结果不同。"}
{"ID": 4184, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "进程在处理器上执行时，()。", "A": "进程之间是无关的，具有封闭特性", "B": "进程之间都有交互性，相互依赖、相互制约，具有并发性", "C": "具有并发性，即同时执行的特性", "D": "进程之间可能是无关的，但也可能是有交互性的", "Answer": "D", "Explanation": "A和B都说得太绝对，进程之间有可能具有相关性，也有可能是相互独立的.C错在“同时”。"}
{"ID": 4185, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在多对一的线程模型中，当一个多线程进程中的某个线程被阻塞后，()。", "A": "该进程的其他线程仍可继续运行", "B": "整个进程都将阻塞", "C": "该阻塞线程将被撤销", "D": "该阻塞线程将永远不可能再执行", "Answer": "B", "Explanation": "在多对一的线程模型中，由于只有一个内核级线程，用户级线程的“多”对操作系统透明,因此操作系统内核只能感知到一个调度单位的存在。因此该进程的一个线程被阻塞后，该进程就被阻塞，进程的其他线程当然也都被阻塞。注意:作为对比，在一对一模型中将每个用户级线程都映射到一个内核级线程，所以当某个线程被阻塞时，不会导致整个进程被阻塞。"}
{"ID": 4186, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列几种关于进程的叙述，()最不符合操作系统对进程的理解。", "A": "进程是在多程序环境中的完整程序", "B": "进程可以由程序、数据和PCB描述", "C": "线程(Thread)是一种特殊的进程", "D": "进程是程序在一个数据集合上的运行过程，它是系统进行资源分配和调度的一个独立单元", "Answer": "A", "Explanation": "进程是一个独立的运行单位，也是操作系统进行资源分配和调度的基本单位，它包括PCB、程序和数据以及执行栈区，仅仅说进程是在多程序环境下的完整程序是不合适的，因为程序是静态的，它以文件形式存放于计算机硬盘内，而进程是动态的。"}
{"ID": 4187, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "支持多道程序设计的操作系统在运行过程中，不断地选择新进程运行来实现CPU的共享，但其中()不是引起操作系统选择新进程的直接原因。", "A": "运行进程的时间片用完", "B": "运行进程出错", "C": "运行进程要等待某一事件发生", "D": "有新进程被创建进入就绪态", "Answer": "D", "Explanation": "需要掌握不能进行进程调度与切换的情况(处理中断的过程、访问临界区、原子操作)，以及应该进行进程调度与切换的情况。运行的进程由于时间片用完、运行结束、需要等待事件的发生(如等待键盘响应)、出错、自我阻塞等，均可以激活调度程序进行重新调度，选择一个新的就绪进程投入运行。新进程加入就绪队列不是引起调度的直接原因,当CPU 正在运行其他进程时，该进程仍然需要等待。即使是在采用高优先级调度算法的系统中，一个最高优先级的进程进入就绪队列，也需要考虑是否允许抢占，当不允许抢占时，仍然需要等待。"}
{"ID": 4188, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "PCB是进程存在的唯一标志，下列()不属于PCB。", "A": "进程ID", "B": "CPU状态", "C": "堆栈指针", "D": "全局变量", "Answer": "D", "Explanation": "进程实体主要是代码、数据和PCB。因此，要清楚了解 PCB内所含的数据结构内容，主要有四大类:进程标志信息、进程控制信息、进程资源信息、CPU现场信息。由上述可知，全局变量与PCB无关，它只与用户代码有关。"}
{"ID": 4189, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在一个多道系统中，若就绪队列不空，就绪的进程数目越多，处理器的效率()。", "A": "越高", "B": "越低", "C": "不变", "D": "不确定", "Answer": "C", "Explanation": "由进程的状态图可以看出，进程的就绪数目越多，争夺CPU的进程就越多，但只要就绪队列不为空，CPU 就总是可以调度进程运行，保持繁忙。这与就绪进程的数目没有关系，除非就绪队列为空，此时CPU 进入等待态，导致CPU 的效率下降。"}
{"ID": 4190, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面的叙述中，正确的是()。", "A": "引入线程后，处理器只能在线程间切换", "B": "引入线程后，处理器仍在进程间切换", "C": "线程的切换，不会引起进程的切换", "D": "线程的切换，可能引起进程的切换", "Answer": "D", "Explanation": "在同一进程中，线程的切换不会引起进程的切换。当从一个进程中的线程切换到另一个进程中的线程时，才会引起进程的切换，因此A、B、C错误。"}
{"ID": 4191, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面的叙述中，正确的是()。", "A": "同一进程内的线程可并发执行，不同进程的线程只能串行执行", "B": "同一进程内的线程只能串行执行，不同进程的线程可并发执行", "C": "同一进程或不同进程内的线程都只能串行执行", "D": "同一进程或不同进程内的线程都可以并发执行", "Answer": "D", "Explanation": "在无线程的系统中，进程是资源调度和并发执行的基本单位。在引入线程的系统中，进程退化为资源分配的基本单位，而线程代替了进程被操作系统调度，因而线程可以并发执行。"}
{"ID": 4192, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在以下描述中，()并不是多线程系统的特长。", "A": "利用线程并行地执行矩阵乘法运算", "B": "Web服务器利用线程响应HTTP请求", "C": "键盘驱动程序为每个正在运行的应用配备一个线程，用以响应该应用的键盘输入", "D": "基于GUI的调试程序用不同的线程分别处理用户输入、计算和跟踪等操作", "Answer": "C", "Explanation": "整个系统只有一个键盘，而且键盘输入是人的操作，速度比较慢，完全可以使用一个线程来处理整个系统的键盘输入。"}
{"ID": 4193, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "两个合作进程(Cooperating Processes)无法利用()交换数据。", "A": "文件系统", "B": "共享内存", "C": "高级语言程序设计中的全局变量", "D": "消息传递系统", "Answer": "C", "Explanation": "不同的进程拥有不同的代码段和数据段，全局变量是对同一进程而言的，在不同的进程中是不同的变量，没有任何联系，所以不能用于交换数据。此题也可用排除法做，A、B、D均是课本上所讲的。管道是一种文件。"}
{"ID": 4194, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下可能导致一个进程从运行态变为就绪态的事件是()。", "A": "一次I/O操作结束", "B": "运行进程需做I/O操作", "C": "运行进程结束", "D": "出现了比现在进程优先级更高的进程", "Answer": "D", "Explanation": "进程处于运行态时，它必须已获得所需的资源，在运行结束后就撤销。只有在时间片到或出现了比现在进程优先级更高的进程时才转变成就绪态。选项A使进程从阻塞态到就绪态，选项B使进程从运行态到阻塞态，选项C使进程撤销。"}
{"ID": 4195, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "进程处于()时，它处于非阻塞态。", "A": "等待从键盘输入数据", "B": "等待协作进程的一个信号", "C": "等待操作系统分配CPU时间", "D": "等待网络数据进入内存", "Answer": "C", "Explanation": "进程有三种基本状态，处于阻塞态的进程由于某个事件不满足而等待。这样的事件一般是I/O操作，如键盘等，或是因互斥或同步数据引起的等待，如等待信号或等待进入互斥临界区代码段等，等待网络数据进入内存是为了进程同步。而等待CPU 调度的进程处于就绪态，只有它是非阻塞态。"}
{"ID": 4196, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个进程被唤醒，意味着()。", "A": "该进程可以重新竞争CPU", "B": "优先级变大", "C": "PCB移动到就绪队列之首", "D": "进程变为运行态", "Answer": "A", "Explanation": "当一个进程被唤醒时，这个进程就进入了就绪态，等待进程调度而占有CPU 运行。进程被唤醒在某种情形下优先级可以增大，但一般不会变为最大，而由固定的算法来计算。也不会在唤醒后位于就绪队列的队首，就绪队列是按照一定的规则赋予其位置的，如先来先服务，或者高优先级优先，或者短进程优先等，更不能直接占有处理器运行。"}
{"ID": 4197, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "进程创建时，不需要做的是()。", "A": "填写一个该进程的进程表项", "B": "分配该进程适当的内存", "C": "将该进程插入就绪队列", "D": "为该进程分配CPU", "Answer": "D", "Explanation": "进程创建原语完成的工作是:向系统申请一个空闲 PCB，为被创建进程分配必要的资源，然后将其PCB初始化，并将此PCB插入就绪队列，最后返回一个进程标志号。当调度程序为进程分配CPU后，进程开始运行。所以进程创建的过程中不会包含分配CPU 的过程，这不是进程创建者的工作，而是调度程序的工作。"}
{"ID": 4198, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列说法中，不正确的是()。", "A": "一个进程可以创建一个或多个线程", "B": "一个线程可以创建一个或多个线程", "C": "一个线程可以创建一个或多个进程", "D": "一个进程可以创建一个或多个进程", "Answer": "C", "Explanation": "进程可以创建进程或线程，线程也可以创建线程，但线程不能创建进程。"}
{"ID": 4199, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在内核级线程相对于用户级线程的优点的如下描述中，错误的是()", "A": "同一进程内的线程切换，系统开销小", "B": "当内核线程阻塞时，CPU将会调度同一进程中的其他内核线程执行", "C": "内核级线程的程序实体可以在内核态运行", "D": "对多处理器系统，核心可以同时调度同一进程的多个线程并行运行", "Answer": "A", "Explanation": "在内核级线程中，同一进程中的线程切换，需要从用户态转到核心态进行，系统开销较大,A错误。CPU 调度是在内核进行的，在内核级线程中，调度是在线程一级进行的，因此内核可以同时调度同一进程的多个线程在多CPU上并行运行(用户级线程则不行)，B正确、D正确。当进程中的内核级线程运行在内核态时，说明该进程也运行在内核态，C正确。"}
{"ID": 4200, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在用户级线程相对于内核级线程的优点的如下描述中，错误的是()", "A": "一个线程阻塞不影响另一个线程的运行", "B": "线程的调度不需要内核直接参与，控制简单", "C": "线程切换代价小", "D": "允许每个进程定制自己的调度算法，线程管理比较灵活", "Answer": "A", "Explanation": "进程中的某个用户级线程被阻塞，则整个进程也被阻塞，即进程中的其他用户级线程也被阻塞，A错误。用户级线程的调度是在用户空间进行的，节省了模式切换的开销，不同进程可以根据自身的需要，对自己的线程选择不同的调度算法，因此 B、C和 D都正确。"}
{"ID": 4201, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "时间片轮转调度算法是为了()。", "A": "多个用户能及时干预系统", "B": "使系统变得高效", "C": "优先级较高的进程得到及时响应", "D": "需要CPU时间最少的进程最先做", "Answer": "A", "Explanation": "时间片轮转的主要目的是，使得多个交互的用户能够得到及时响应，使得用户以为“独占”计算机的使用，因此它并没有偏好，也不会对特殊进程做特殊服务。时间片轮转增加了系统开销，所以不会使得系统高效运转，吞吐量和周转时间均不如批处理。但其较快速的响应时间使得用户能够与计算机进行交互，改善了人机环境，满足用户需求。"}
{"ID": 4202, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在单处理器的多进程系统中，进程什么时候占用处理器及决定占用时间的长短是由()决定的。", "A": "进程相应的代码长度", "B": "进程总共需要运行的时间", "C": "进程特点和进程调度策略", "D": "进程完成什么功能", "Answer": "C", "Explanation": "进程调度的时机与进程特点有关，如进程是CPU繁忙型还是I/O繁忙型、自身的优先级等。但仅有这些特点是不够的，能否得到调度还取决于进程调度策略，若采用优先级调度算法，则进程的优先级才起作用。至于占用处理器运行时间的长短，则要看进程自身，若进程是I/O繁忙型，运行过程中要频繁访问I/O端口，即可能会频繁放弃CPU，所以占用CPU的时间不会长，一旦放弃 CPU，则必须等待下次调度。若进程是CPU 繁忙型，则一旦占有CPU，就可能会运行很长时间，但运行时间还取决于进程调度策略，大部分情况下，交互式系统为改善用户的响应时间，大多数采用时间片轮转的算法，这种算法在进程占用CPU 达到一定时间后，会强制将其换下，以保证其他进程的 CPU 使用权。因此选 C。"}
{"ID": 4203, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "()有利于CPU繁忙型的作业，而不利于I/O繁忙型的作业。", "A": "时间片轮转调度算法", "B": "先来先服务调度算法", "C": "短作业(进程)优先算法", "D": "优先权调度算法", "Answer": "B", "Explanation": "FCFS调度算法比较有利于长作业，而不利于短作业。所谓CPU 繁忙型作业，是指该类作业需要大量的 CPU时间进行计算，而很少请求I/O操作，故采用FCFS可从容完成计算。I/O繁忙型作业是指CPU 处理时，需频繁地请求/O操作，导致操作完成后还要重新排队等待调度。所以CPU繁忙型作业更接近于长作业，若采用FCFS，则等待时间过长。时间片轮转法对于短作业和长作业的时间片都一样，所以地位也几乎一样。优先级调度有利于优先级高的进程，而优先级和作业时间长度是没有什么必然联系的。因此选 B。"}
{"ID": 4204, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面有关选择进程调度算法的准则中，不正确的是()。", "A": "尽快响应交互式用户的请求", "B": "尽量提高处理器利用率", "C": "尽可能提高系统吞吐量", "D": "适当增长进程就绪队列的等待时间", "Answer": "D", "Explanation": "在选择进程调度算法时应考虑以下几个准则:①公平:确保每个进程获得合理的CPU 份额;②有效:使CPU尽可能地忙碌；③响应时间:使交互用户的响应时间尽可能短；④周转时间:使批处理用户等待输出的时间尽可能短;⑤吞吐量:使单位时间处理的进程数尽可能最多。由此可见 D不正确。"}
{"ID": 4205, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "进程(线程)调度的时机有()。Ⅰ.运行的进程(线程)运行完毕 Ⅱ.运行的进程(线程)所需资源未准备好 Ⅲ.运行的进程(线程)的时间片用完 Ⅳ运行的进程(线程)自我阻塞 Ⅴ.运行的进程(线程)出现错误", "A": "Ⅱ、Ⅲ、Ⅳ和Ⅴ", "B": "Ⅰ和Ⅲ", "C": "Ⅱ、Ⅳ和Ⅴ", "D": "全部都是", "Answer": "D", "Explanation": "进程(线程)调度的时机包括:运行的进程(线程)运行完毕、运行的进程(线程)自我阻塞、运行的进程(线程)的时间片用完、运行的进程(线程)所需的资源没有准备好、运行的进程(线程)出现错误。以上时机都在CPU方式为不可抢占方式时引起进程(线程)调度。在CPU方式是可抢占方式时，就绪对列中的某个进程(线程)的优先级高于当前运行进程(线程)的优先级时，也会发生进程(线程)调度。故Ⅰ、Ⅱ、Ⅲ、Ⅳ和Ⅴ都正确。"}
{"ID": 4206, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "现在有三个同时到达的作业J_1,J_2和J_3，它们的执行时间分到是T_1,T_2,T_3,且T_1<T_2<T_3。系统按单道方式运行且采用短作业优先调度算法，则平均周转时间是()。", "A": "T_1+T_2+T_3 ", "B": "(3T_1+2T_2+T_3)/3", "C": "(T_1+T_2+T_3)/3 ", "D": "(T_1+2T_2+3T_3)/3", "Answer": "B", "Explanation": "系统采用短作业优先调度算法，作业的执行顺序为J_1,J_2,J_3，J_1的周转时间为T_1，J_2的周转时间为T_1+T_2,J_3的周转时间为T_1+T_2+T_3，则平均周转时间为(T_1+T_1+T_2+T_1 +T_2+T_3)/3 =(3T_1+2T_2+T_3)/3."}
{"ID": 4207, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "关于优先权大小的论述中，正确的是()。", "A": "计算型作业的优先权，应高于I/O型作业的优先权", "B": "用户进程的优先权，应高于系统进程的优先权", "C": "在动态优先权中，随着作业等待时间的增加，其优先权将随之下降", "D": "在动态优先权中，随着进程执行时间的增加，其优先权降低", "Answer": "D", "Explanation": "优先级算法中，I/O繁忙型作业要优于计算繁忙型作业，系统进程的优先权应高于用户进程的优先权。作业的优先权与长作业、短作业或系统资源要求的多少没有必然的关系。在动态优先权中，随着进程执行时间的增加其优先权随之降低，随着作业等待时间的增加其优先权相应上升。"}
{"ID": 4208, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "进程调度算法采用固定时间片轮转调度算法，当时间片过大时，就会使时间片轮转法算法转化为()调度算法。", "A": "高响应比优先", "B": "先来先服务", "C": "短进程优先", "D": "以上选项都不对", "Answer": "B", "Explanation": "时间片轮转调度算法在实际运行中也按先后顺序使用时间片，时间片过大时，我们可以认为其大于进程需要的运行时间，即转变为先来先服务调度算法。"}
{"ID": 4209, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设系统中所有进程同时到达，则使进程平均周转时间最短的是()调度算法。", "A": "先来先服务", "B": "短进程优先", "C": "时间片轮转", "D": "优先级", "Answer": "B", "Explanation": "短进程优先调度算法具有最短的平均周转时间。平均周转时间=各进程周转时间之和/进程数。因为每个进程的执行时间都是固定的，所以变化的是等待时间，只有短进程优先算法能最小化等待时间。"}
{"ID": 4210, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列说法中，正确的是()。Ⅰ.分时系统的时间片固定，因此用户数越多，响应时间越长 Ⅱ.UNIX是一个强大的多用户、多任务操作系统，支持多种处理器架构，按照操作系统分类，属于分时操作系统 Ⅲ.中断向量地址是中断服务例行程序的入口地址 Ⅳ.中断发生时，由硬件保护并更新程序计数器(PC)，而不是由软件完成，主要是为了提高处理速度  ", "A": "Ⅰ、Ⅱ", "B": "Ⅱ、Ⅲ", "C": "Ⅲ、Ⅳ", "D": "仅Ⅳ", "Answer": "A", "Explanation": "Ⅰ选项正确，分时系统中，响应时间与时间片和用户数成正比。Ⅱ选项正确。Ⅲ选项错误，中断向量本身是用于存放中断服务例行程序的入口地址，因此中断向量地址就应是该入口地址的地址。Ⅳ选项错误，中断由硬件保护并完成，主要是为了保证系统运行可靠、正确。提高处理速度也是一个好处，但不是主要目的。综上分析，Ⅲ、Ⅳ 选项错误。"}
{"ID": 4211, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列对临界区的论述中，正确的是()。", "A": "临界区是指进程中用于实现进程互斥的那段代码", "B": "临界区是指进程中用于实现进程同步的那段代码", "C": "临界区是指进程中用于实现进程通信的那段代码", "D": "临界区是指进程中用于访问临界资源的那段代码", "Answer": "D", "Explanation": "多个进程可以共享系统中的资源，一次仅允许一个进程使用的资源称为临界资源。访问临界资源的那段代码称为临界区。"}
{"ID": 4212, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下不是同步机制应遵循的准则的是()。", "A": "让权等待", "B": "空闲让进", "C": "忙则等待", "D": "无限等待", "Answer": "D", "Explanation": "同步机制的4个准则是空闲让进、忙则等待、让权等待和有限等待。"}
{"ID": 4213, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "进程A和进程B通过共享缓冲区协作完成数据处理，进程A负责产生数据并放入缓冲区，进程B从缓冲区读数据并输出。进程A和进程B之间的制约关系是()。", "A": "互斥关系", "B": "同步关系", "C": "互斥和同步关系", "D": "无制约关系", "Answer": "C", "Explanation": "并发进程因为共享资源而产生相互之间的制约关系，可以分为两类:①互斥关系，指进程之间因相互竞争使用独占型资源(互斥资源)所产生的制约关系;②同步关系，指进程之间为协同工作需要交换信息、相互等待而产生的制约关系。本题中两个进程之间的制约关系是同步关系，进程B必须在进程A将数据放入缓冲区后才能从缓冲区中读出数据。此外，共享的缓冲区一定是互斥访问的，所以它们也具有互斥关系。"}
{"ID": 4214, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在操作系统中，P,V操作是一种()。", "A": "机器指令", "B": "系统调用命令", "C": "作业控制命令", "D": "低级进程通信原语", "Answer": "D", "Explanation": "P、V操作是一种低级的进程通信原语，它是不能被中断的。"}
{"ID": 4215, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "用来实现进程同步与互斥的PV操作实际上是由()过程组成的.", "A": "一个可被中断的", "B": "一个不可被中断的", "C": "两个可被中断的", "D": "两个不可被中断的", "Answer": "D", "Explanation": "P操作和V操作都属于原语操作，不可被中断。"}
{"ID": 4216, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于两个并发进程，设互斥信号量为mutex(初值为1)，若mutex=0，则表示()。", "A": "没有进程进入临界区", "B": "有一个进程进入临界区", "C": "有一个进程进入临界区，另一个进程等待进入", "D": "有一个进程在等待进入", "Answer": "B", "Explanation": "mutex的初值为1，表示允许一个进程进入临界区，当有一个进程进入临界区且没有进程等待进入时，mutex减1，变为 0。|mutex|为等待进入的进程数.因此选 B。"}
{"ID": 4217, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "对于两个并发进程，设互斥信号量为mutex(初值为1)，若mutex=-1，则()。", "A": "表示没有进程进入临界区", "B": "表示有一个进程进入临界区", "C": "表示有一个进程进入临界区，另一个进程等待进入", "D": "表示有两个进程进入临界区", "Answer": "C", "Explanation": "当有一个进程进入临界区且有另一个进程等待进入临界区时，mutex=-1。mutex 小于0时，其绝对值等于等待进入临界区的进程数。"}
{"ID": 4218, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于管程的叙述中，错误的是()。", "A": "管程是进程同步工具，解决信号量机制大量同步操作分散的问题", "B": "管程每次只允许一个进程进入管程", "C": "管程中signal操作的作用和信号量机制中的V操作相同", "D": "管程是被进程调用的，管程是语法范围，无法创建和撤销", "Answer": "C", "Explanation": "管程的 signal操作与信号量机制中的V操作不同,信号量机制中的V操作一定会改变信号量的值S=S+1。而管程中的 signal操作是针对某个条件变量的，若不存在因该条件而阻塞的进程，则 signal不会产生任何影响。"}
{"ID": 4219, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于PV操作的说法中，正确的是()。Ⅰ. PV操作是一种系统调用命令 Ⅱ. PV操作是一种低级进程通信原语 Ⅲ. PV操作是由一个不可被中断的过程组成 Ⅳ.PV操作是由两个不可被中断的过程组成", "A": "Ⅰ、Ⅲ", "B": "Ⅱ、Ⅳ", "C": "Ⅰ、Ⅱ、Ⅳ", "D": "Ⅰ、Ⅳ", "Answer": "B", "Explanation": "PV操作是一种低级的进程通信原语，不是系统调用，因此Ⅱ正确;P操作和V操作都属于原子操作，所以PV 操作由两个不可被中断的过程组成，因此Ⅳ正确。"}
{"ID": 4220, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于临界区和临界资源的说法中，正确的是()。Ⅰ. 银行家算法可以用来解决临界区(CriticalSection)问题 Ⅱ. 临界区是指进程中用于实现进程互斥的那段代码 Ⅲ. 公用队列属于临界资源 Ⅳ. 私用数据属于临界资源 ", "A": "Ⅰ、Ⅱ", "B": "Ⅰ、Ⅳ", "C": "仅Ⅲ", "D": "以上答案都错误", "Answer": "C", "Explanation": "临界资源是指每次仅允许一个进程访问的资源。每个进程中访问临界资源的那段代码称为临界区。Ⅰ错误，银行家算法是避免死锁的算法。Ⅱ错误，每个进程中访问临界资源的那段代码称为临界区。Ⅲ正确，公用队列可供多个进程使用，但一次只可供一个程序使用。Ⅳ错误，私用数据仅供一个进程使用，不存在临界区问题。综上分析，正确答案为C。"}
{"ID": 4221, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "有一个计数信号量S: 1)假如若干进程对S进行28次P操作和18次V操作后，信号量S的值为0。 2)假如若干进程对信号量S进行了15次P操作和2次V操作。请问此时有多少个进程等待在信号量S的队列中?()", "A": 2, "B": 3, "C": 5, "D": 7, "Answer": "B", "Explanation": "对S进行了28次P操作和18次V操作，即S-28+18=0，得信号量的初值为10;然后对信号量S进行了15次P操作和2次V操作，即S-15+2=10-15+2=-3，S信号量的负值的绝对值表示等待队列中的进程数。所以有3个进程等待在信号量S的队列中。"}
{"ID": 4222, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若有4个进程共享同一程序段，每次允许了个进程进入该程序段，若用P,V操作作为同步机制，则信号量的取值范围是().", "A": "4,3,2,1,-1", "B": "2,1,0,-1,-2", "C": "3,2,1,0,-1", "D": "2,1,0,-2,-3", "Answer": "C", "Explanation": "由于每次允许三个进程进入该程序段，因此可能出现的情况是:没有进程进入，有一个进程进入，有两个进程进入，有三个进程进入，有三个进程进入并有一个在等待进入，因此这5种情况对应的信号量值为3,2,1,0,-1。"}
{"ID": 4223, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在9个生产者、6个消费者共享容量为8的缓冲器的生产者-消费者问题中，互斥使用缓冲器的信号量初始值为()。", "A": 1, "B": 6, "C": 8, "D": 9, "Answer": "A", "Explanation": "所谓互斥使用某临界资源，是指在同一时间段只允许一个进程使用此资源，所以互斥信号量的初值都为1"}
{"ID": 4224, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "有两个优先级相同的并发程序P_1和P_2，它们的执行过程如下所示。假设当前信号量s_1=0，s_2=0。当前的z=2，进程运行结束后，x,y和z的值分别是()。进程P1 \\n Y:=1; \\n Y:=y+2; \\n z:=y+1; \\n V(s1);  \\n P(s2);  \\n Y:=z+y; \\n … 进程P2x:=1x:=x+1; \\n P(s1);  \\n x:=x+y; \\n Z:=X+Z; \\n V(s2); \\n ...", "A": "5,9,9", "B": "5,9,4", "C": "5,12,9", "D": "5,12,4", "Answer": "C", "Explanation": "由于进程并发，因此进程的执行具有不确定性，在P_1,P_2执行到第一个P,V操作前，应该是相互无关的。现在考虑第一个对s_1的P,V 操作，由于进程P_2是P(s_1)操作，因此它必须等待P:执行完V(s_1)操作后才可继续运行,此时的x,y,z值分别是2,3,4,当进程P:执行完V(s_1)后便在P(s_2)上阻塞，此时P_2可以运行直到V(s_2)，此时的x,y,z值分别是5,3,9，进程P_1继续运行到结束，最终的x,y,z值分别为5,12,9。"}
{"ID": 4225, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列情况中，可能导致死锁的是()", "A": "进程释放资源", "B": "一个进程进入死循环", "C": "多个进程竞争资源出现了循环等待", "D": "多个进程竞争使用共享型的设备", "Answer": "C", "Explanation": "引起死锁的4个必要条件是:互斥、占有并等待、非剥夺和循环等待。本题中，出现了循环等待的现象，意味着可能会导致死锁。进程释放资源不会导致死锁，进程自己进入死循环只能产生“饥饿”，不涉及其他进程。共享型设备允许多个进程申请使用，因此不会造成死锁。再次提醒，死锁一定要有两个或两个以上的进程才会导致，而饥饿可能由一个进程导致。"}
{"ID": 4226, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一次分配所有资源的方法可以预防死锁的发生，它破坏死锁4个必要条件中的()。", "A": "互斥", "B": "占有并请求", "C": "非剥夺 ", "D": "循环等待", "Answer": "B", "Explanation": "发生死锁的4个必要条件:互斥、占有并请求、非剥夺和循环等待。一次分配所有资源的方法是当进程需要资源时，一次性提出所有的请求，若请求的所有资源均满足则分配，只要有一项不满足，就不分配任何资源，该进程阻塞，直到所有的资源空闲后，满足进程的所有需求时再分配。这种分配方式不会部分地占有资源，因此打破了死锁的4个必要条件之一，实现了对死锁的预防。但是，这种分配方式需要凑齐所有资源，因此当一个进程所需的资源较多时，资源的利用率会较低，甚至会造成进程“饥饿”。"}
{"ID": 4227, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "死锁的避免是根据()采取措施实现的，", "A": "配置足够的系统资源", "B": "使进程的推进顺序合理", "C": "破坏死锁的四个必要条件之一", "D": "防止系统进入不安全状态", "Answer": "D", "Explanation": "死锁避免是指在资源动态分配过程中用某些算法加以限制，防止系统进入不安全状态从而避免死锁的发生。选项B是避免死锁后的结果，而不是措施的原理。"}
{"ID": 4228, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "死锁预防是保证系统不进入死锁状态的静态策略，其解决办法是破坏产生死锁的四个必要条件之一。下列方法中破坏了“循环等待”条件的是()。", "A": "银行家算法", "B": "一次性分配策略", "C": "剥夺资源法", "D": "资源有序分配策略", "Answer": "D", "Explanation": "资源有序分配策略可以限制循环等待条件的发生。选项A判断是否为不安全状态;选项B破坏了占有请求条件;选项C破坏了非剥夺条件。"}
{"ID": 4229, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某系统中共有11台磁带机，X个进程共享此磁带机设备，每个进程最多请求使用3台，则系统必然不会死锁的最大X值是().", "A": 4, "B": 5, "C": 6, "D": 7, "Answer": "B", "Explanation": "考虑一下极端情况:每个进程已经分配了两台磁带机，那么其中任何一个进程只要再分配一台磁带机即可满足它的最大需求，该进程总能运行下去直到结束，然后将磁带机归还给系统再次分配给其他进程使用。因此，系统中只要满足2X+1=11这个条件即可认为系统不会死锁，解得X=5，也就是说，系统中最多可以并发5个这样的进程是不会死锁的。"}
{"ID": 4230, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "解除死锁通常不采用的方法是()。", "A": "终止一个死锁进程", "B": "终止所有死锁进程", "C": "从死锁进程处抢夺资源", "D": "从非死锁进程处抢夺资源", "Answer": "D", "Explanation": "解除死锁的方法有，①剥夺资源法:挂起某些死锁进程，并抢占它的资源，将这些资源分配给其他的死锁进程;②撤销进程法:强制撤销部分甚至全部死锁进程并剥夺这些进程的资源。"}
{"ID": 4231, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在下列死锁的解决方法中，属于死锁预防策略的是()。", "A": "银行家算法", "B": "资源有序分配算法中家园", "C": "死锁检测算法", "D": "资源分配图化简法", "Answer": "B", "Explanation": "其中，银行家算法为死锁避免算法，死锁检测算法和资源分配图化简法为死锁检测，根据排除法可以得出资源有序分配算法为死锁预防策略。"}
{"ID": 4232, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "三个进程共享四个同类资源，这些资源的分配与释放只能一次一个。已知每个进程最需要两个该类资源，则该系统()。", "A": "有些进程可能永远得不到该类资源", "B": "必然有死锁", "C": "进程请求该类资源必然能得到", "D": "必然是死锁", "Answer": "C", "Explanation": "不会发生死锁。因为每个进程都分得一个资源时，还有一个资源可以让任意一个进程满足，这样这个进程可以顺利运行完成进而释放它的资源。"}
{"ID": 4233, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下有关资源分配图的描述中，正确的是()。", "A": "有向边包括进程指向资源类的分配边和资源类指向进程申请边两类", "B": "矩形框表示进程，其中圆点表示申请同一类资源的各个进程", "C": "圆圈结点表示资源类", "D": "资源分配图是一个有向图，用于表示某时刻系统资源与进程之间的状态", "Answer": "D", "Explanation": "进程指向资源的有向边称为申请边，资源指向进程的有向边称为分配边，A选项张冠李戴;矩形框表示资源，其中的圆点表示资源的数目，选项B错;圆圈结点表示进程，选项C错;选项D的说法是正确的。 "}
{"ID": 4234, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "死锁的四个必要条件中，无法破坏的是().", "A": "环路等待资源", "B": "互斥使用资源", "C": "占有且等待资源", "D": "非抢夺式分配", "Answer": "B", "Explanation": "所谓破坏互斥使用资源，是指允许多个进程同时访问资源，但有些资源根本不能同时访问如打印机只能互斥使用。因此，破坏互斥条件而预防死锁的方法不太可行，而且在有的场合应该保护这种互斥性。其他三个条件都可以实现。"}
{"ID": 4235, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "死锁与安全状态的关系是()。", "A": "死锁状态有可能是安全状态", "B": "安全状态有可能成为死锁状态", "C": "不安全状态就是死锁状态", "D": "死锁状态一定是不安全状态", "Answer": "D", "Explanation": "并非所有不安全状态都是死锁状态，但当系统进入不安全状态后，便可能进入死锁状态;反之，只要系统处于安全状态，系统便可避免进入死锁状态;死锁状态必定是不安全状态。"}
{"ID": 4236, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某个系统采用下列资源分配策略。若一个进程提出资源请求得不到满足，而此时没有由于等待资源而被阻塞的进程,则自己就被阻塞。而当此时已有等待资源而被阻塞的进程，则检查所有由于等待资源而被阻塞的进程。若它们有申请进程所需要的资源，则将这些资源取出并分配给申请进程。这种分配策略会导致()。", "A": "死锁", "B": "颠簸", "C": "回退", "D": "饥饿", "Answer": "D", "Explanation": "某个进程主动释放资源不会导致死锁，因为破坏了请求并保持条件，选项A错。颠簸也就是抖动，这是请求分页系统中页面调度不当而导致的现象，是下一章讨论的问题，这里权且断定选项B是错的。回退是指从此时此刻的状态退回到一分钟之前的状态，假如一分钟之前拥有资源X，它有可能释放了资源X，那就不称回到一分钟之前的状态，也就不是回退，选项C错。由于进程过于“慷慨”，不断把自己己得到的资源送给别人，导致自己长期无法完成，所以是饥饿，选项D对。"}
{"ID": 4237, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "系统的资源分配图在下列情况下，无法判断是否处于死锁状态的有()。Ⅰ.出现了环路 Ⅱ.没有环路 Ⅲ.每种资源只有一个，并出现环路 Ⅳ.每个进程结点至少有一条请求边", "A": "Ⅰ、Ⅱ、Ⅲ、Ⅳ", "B": "Ⅰ、Ⅲ、Ⅳ", "C": "Ⅰ、Ⅳ", "D": "以上答案都不正确", "Answer": "C", "Explanation": "出现了环路，只是满足了循环等待的必要条件，而满足必要条件不一定会导致死锁，Ⅰ对;没有环路，破坏了循环等待条件，一定不会发生死锁，Ⅱ错;每种资源只有一个，又出现了环路，这是死锁的充分条件，可以确定是否有死锁，Ⅲ错;即使每个进程至少有一条请求边，若资源足够，则不会发生死锁，但若资源不充足，则有发生死锁的可能，Ⅳ对。综上所述，选C。"}
{"ID": 4238, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于死锁的说法中，正确的有()。Ⅰ.死锁状态一定是不安全状态 Ⅱ.产生死锁的根本原因是系统资源分配不足和进程推进顺序非法 Ⅲ.资源的有序分配策略可以破坏死锁的循环等待条件 Ⅳ.采用资源剥夺法可以解除死锁，还可以采用撤销进程方法解除死锁", "A": "Ⅰ、Ⅲ", "B": "Ⅱ", "C": "Ⅳ", "D": "四个说法都对", "Answer": "D", "Explanation": "Ⅰ正确。Ⅱ正确:这是产生死锁的两大原因。Ⅲ正确:在对资源进行有序分配时，进程间不可能出现环形链，即不会出现循环等待。Ⅳ正确:资源剥夺法允许一个进程强行剥夺其他进程占有的系统资源。而撤销进程强行释放一个进程已占有的系统资源，与资源剥夺法同理，都通过破坏死锁的“请求和保持”条件来解除死锁，所以选D。"}
{"ID": 4239, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下面关于存储管理的叙述中，正确的是()。", "A": "存储保护的目的是限制内存的分配", "B": "在内存为M、有N个用户的分时系统中，每个用户占用M/N的内存空间", "C": "在虚拟内存系统中，只要磁盘空间无限大，作业就能拥有任意大的编址空间", "D": "实现虚拟内存管理必须有相应硬件的支持", "Answer": "D"}
{"ID": 4240, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下面的存储管理方案中，()方式可以采用静态重定位。", "A": "固定分区", "B": "可变分区", "C": "页式", "D": "段式", "Answer": "A"}
{"ID": 4241, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "不会产生内部碎片的存储管理是()。", "A": "分页式存储管理", "B": "分段式存储管理", "C": "固定分区式存储管理", "D": "段页式存储管理", "Answer": "B"}
{"ID": 4242, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对重定位存储管理方式，应()。", "A": "在整个系统中设置一个重定位寄存器", "B": "为每道程序设置一个重定位寄存器", "C": "为每道程序设置两个重定位寄存器", "D": "为每道程序和数据都设置一个重定位寄存器", "Answer": "A"}
{"ID": 4243, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "把作业空间中使用的逻辑地址变为内存中的物理地址称为()。", "A": "加载", "B": "重定位", "C": "物理化", "D": "逻辑化", "Answer": "B"}
{"ID": 4244, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在段式分配中，CPU每次从内存中取一次数据需要()次访问内存。", "A": 1, "B": 3, "C": 2, "D": 4, "Answer": "C"}
{"ID": 4245, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "操作系统采用分页存储管理方式，要求()。", "A": "每个进程拥有一张页表，且进程的页表驻留在内存中", "B": "每个进程拥有一张页表，但只有执行进程的页表驻留在内存中", "C": "所有进程共享一张页表，以节约有限的内存空间，但页表必须驻留在内存中", "D": "所有进程共享一张页表，只有页表中当前使用的页面必须驻留在内存中，以最大限度地节省有限的内存空间", "Answer": "A"}
{"ID": 4246, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "虚拟存储技术是()。", "A": "补充内存物理空间的技术", "B": "补充内存逻辑空间的技术", "C": "补充外存空间的技术", "D": "扩充输入/输出缓冲区的技术", "Answer": "B"}
{"ID": 4247, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "为使虚存系统有效地发挥其预期的作用，所运行的程序应具有的特性是()。", "A": "该程序不应含有过多的I/O操作", "B": "该程序的大小不应超过实际的内存容量", "C": "该程序应具有较好的局部性", "D": "该程序的指令相关性不应过多", "Answer": "C"}
{"ID": 4248, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "请求分页存储管理的主要特点是()。", "A": "消除了页内零头", "B": "扩充了内存", "C": "便于动态链接", "D": "便于信息共享", "Answer": "B"}
{"ID": 4249, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "提供虚拟存储技术的存储管理方法有()。", "A": "动态分区存储管理", "B": "页式存储管理", "C": "请求段式存储管理", "D": "存储覆盖技术", "Answer": "C"}
{"ID": 4250, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在使用交换技术时，若一个进程正在()，则不能交换出主存。", "A": "创建", "B": "I/O操作", "C": "处于临界段", "D": "死锁", "Answer": "B"}
{"ID": 4251, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在存储管理中，采用覆盖与交换技术的目的是()。", "A": "节省主存空间", "B": "物理上扩充主存容量", "C": "提高CPU 效率", "D": "实现主存共享", "Answer": "A"}
{"ID": 4252, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "内存保护需要由()完成，以保证进程空间不被非法访问。", "A": "操作系统", "B": "硬件机构", "C": "操作系统和硬件机构合作", "D": "操作系统或者硬件机构独立完成", "Answer": "C"}
{"ID": 4253, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在可变分区管理中，采用拼接技术的目的是()。", "A": "合并空闲区", "B": "合并分配区", "C": "增加主存容量", "D": "便于地址转换", "Answer": "A"}
{"ID": 4254, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "分区管理中采用最佳适应分配算法时，把空闲区按()次序登记在空闲区表中。", "A": "长度递增", "B": "长度递减", "C": "地址递增", "D": "地址递减", "Answer": "A"}
{"ID": 4255, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "分页系统中的页面是为()。", "A": "用户所感知的", "B": "操作系统所感知的", "C": "编译系统所感知的", "D": "连接装配程序所感知的", "Answer": "B"}
{"ID": 4256, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "页式存储管理中，页表的始地址存放在()中", "A": "内存", "B": "存储页表", "C": "快表", "D": "寄存器", "Answer": "D"}
{"ID": 4257, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "采用段式存储管理时，一个程序如何分段是在()时决定的。", "A": "分配主存", "B": "用户编程", "C": "装作业", "D": "程序执行", "Answer": "B"}
{"ID": 4258, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下面的()方法有利于程序的动态链接。", "A": "分段存储管理", "B": "分页存储管理", "C": "可变式分区管理", "D": "固定式分区管理", "Answer": "A"}
{"ID": 4259, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "可重入程序是通过()方法来改善系统性能的。", "A": "改变时间片长度", "B": "改变用户数", "C": "提高对换速度", "D": "减少对换数量", "Answer": "D"}
{"ID": 4260, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "动态分区又称可变式分区，它是系统运行过程中()动态建立的。", "A": "在作业装入时", "B": "在作业创建时", "C": "在作业完成时", "D": "在作业未装入时", "Answer": "A"}
{"ID": 4261, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "存储管理的目的是()。", "A": "方便用户", "B": "提高内存利用率", "C": "方便用户和提高内存利用率", "D": "增加内存实际容量", "Answer": "C"}
{"ID": 4262, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对主存储器的访问，()。", "A": "以块(即页)或段为单位", "B": "以字节或字为单位", "C": "随存储器的管理方案不同而异", "D": "以用户的逻辑记录为单位", "Answer": "B"}
{"ID": 4263, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在分页存储管理中，主存的分配()", "A": "以物理块为单位进行", "B": "以作业的大小进行", "C": "以物理段进行", "D": "以逻辑记录大小进行", "Answer": "A"}
{"ID": 4264, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下不属于虚拟内存特征的是()。", "A": "一次性", "B": "多次性", "C": "对换性", "D": "离散性", "Answer": "A"}
{"ID": 4265, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "()是请求分页存储管理方式和基本分页存储管理方式的区别。", "A": "地址重定向", "B": "不必将作业全部装入内存", "C": "采用快表技术", "D": "不必将作业装入连续区域", "Answer": "B"}
{"ID": 4266, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "虚拟存储器的最大容量()。", "A": "为内外存容量之和", "B": "由计算机的地址结构决定", "C": "是任意的", "D": "由作业的地址空间决定", "Answer": "B"}
{"ID": 4267, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "虚拟存储管理系统的基础是程序的()理论。", "A": "动态性", "B": "虚拟性", "C": "局部性", "D": "全局性", "Answer": "C"}
{"ID": 4268, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "使用()方法可以实现虚拟存储。", "A": "分区合并", "B": "覆盖、交换", "C": "快表", "D": "段合并", "Answer": "B"}
{"ID": 4269, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "页式虚拟存储管理的主要特点是()。", "A": "不要求将作业装入主存的连续区域", "B": "不要求将作业同时全部装入主存的连续区域", "C": "不要求进行缺页中断处理", "D": "不要求进行页面置换", "Answer": "B"}
{"ID": 4270, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "段页式存储管理中，地址映射表是()。", "A": "每个进程一张段表，两张页表", "B": "每个进程的每个段一张段表，一张页表", "C": "每个进程一张段表，每个段一张页表", "D": "每个进程一张页表，每个段一张段表", "Answer": "C", "Explanation": "段页式系统中，进程首先划分为段，每段再进一步划分为页。"}
{"ID": 4271, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在可变分区分配方案中，某一进程完成后，系统回收其主存空间并与相邻空闲区合并，为此需修改空闲区表，造成空闲区数减1的情况是()。", "A": "无上邻空闲区也无下邻空闲区", "B": "有上邻空闲区但无下邻空闲区", "C": "有下邻空闲区但无上邻空闲区", "D": "有上邻空闲区也有下邻空闲区", "Answer": "D", "Explanation": "将上邻空闲区、下邻空闲区和回收区合并为一个空闲区，因此空闲区数反而减少了一个。而仅有上邻空闲区或下邻空闲区时，空闲区数并不减少。"}
{"ID": 4272, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "首次适应算法的空闲分区()。", "A": "按大小递减顺序连在一起", "B": "按大小递增顺序连在一起", "C": "按地址由小到大排列", "D": "按地址由大到小排列", "Answer": "C", "Explanation": "首次适应算法的空闲分区按地址递增的次序排列。"}
{"ID": 4273, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于虚拟存储器的论述中，正确的是()", "A": "作业在运行前，必须全部装入内存，且在运行过程中也一直驻留内存", "B": "作业在运行前，不必全部装入内存，且在运行过程中也不必一直驻留内存", "C": "作业在运行前，不必全部装入内存，但在运行过程中必须一直驻留内存", "D": "作业在运行前，必须全部装入内存，但在运行过程中不必一直驻留内存", "Answer": "B", "Explanation": "在非虚拟存储器中，作业必须全部装入内存且在运行过程中也一直驻留内存;在虚拟存储器中，作业不必全部装入内存且在运行过程中也不用一直驻留内存，这是虚拟存储器和非虚拟存储器的主要区别之一。"}
{"ID": 4274, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在页式存储管理中选择页面的大小，需要考虑下列()因素。Ⅰ. 页面大的好处是页表比较少 Ⅱ. 页面小的好处是可以减少由内碎片引起的内存浪费 Ⅲ. 影响磁盘访问时间的主要因素通常不是页面大小，所以使用时优先考虑较大的页面", "A": "Ⅰ和Ⅲ", "B": "Ⅱ和Ⅲ", "C": "Ⅰ和Ⅱ", "D": "Ⅰ、Ⅱ和Ⅲ", "Answer": "C", "Explanation": "页面大，用于管理页面的页表就少，但是页内碎片会比较大;页面小，用于管理页面的页表就大，但是页内碎片小。通过适当的计算可以获得较佳的页面大小和较小的系统开销。"}
{"ID": 4275, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某个操作系统对内存的管理采用页式存储管理方法，所划分的页面大小()。", "A": "要根据内存大小确定", "B": "必须相同", "C": "要根据CPU的地址结构确定", "D": "要依据外存和内存的大小确定", "Answer": "B", "Explanation": "页式管理中很重要的一个问题是页面大小如何确定。确定页面大小有很多因素，如进程的平均大小、页表占用的长度等。而一旦确定，所有的页面就是等长的(一般取2的整数幂倍)，以便易于系统管理。"}
{"ID": 4276, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在段页式分配中，CPU每次从内存中取一次数据需要()次访问内存。", "A": 1, "B": 3, "C": 2, "D": 4, "Answer": "B", "Explanation": "在段页式分配中，取一次数据时先从内存查找段表，再访问内存查找相应的页表，最后拼成物理地址后访问内存，共需要3次内存访问。"}
{"ID": 4277, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于页式存储的论述中，正确的是()。Ⅰ. 在页式存储管理中，若关闭TLB，则每当访问一条指令或存取一个操作数时都要访问2次内存 Ⅱ. 页式存储管理不会产生内部碎片 Ⅲ. 页式存储管理中的页面是为用户所感知的 Ⅳ. 页式存储方式可以采用静态重定位", "A": "Ⅰ、Ⅱ、Ⅳ", "B": "Ⅰ、Ⅳ", "C": "仅Ⅰ", "D": "全都正确", "Answer": "C", "Explanation": "Ⅰ正确:关闭TLB后，每当访问一条指令或存取一个操作数时都要先访问页表(内存中)，得到物理地址后，再访问一次内存进行相应操作。Ⅱ错误:记住，凡是分区固定的都会产生内部碎片，而无外部碎片。Ⅲ错误:页式存储管理对于用户是透明的。Ⅳ错误:静态重定位是在程序运行之前由装配程序完成的，必须分配其要求的全部连续内存空间。而页式存储管理方案是将程序离散地分成若干页(块)，从而可以将程序装入不连续的内存空间，显然静态重定位不能满足其要求。"}
{"ID": 4278, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "请求分页存储管理中，若把页面尺寸增大一倍而且可容纳的最大页数不变，则在程序顺序执行时缺页中断次数会()。", "A": "增加", "B": "减少", "C": "不变", "D": "可能增加也可能减少", "Answer": "B", "Explanation": "在请求分页存储器中，由于页面尺寸增大，存放程序需要的页帧数就会减少，因此缺页中断的次数也会减少。"}
{"ID": 4279, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "进程在执行中发生了缺页中断，经操作系统处理后，应让其执行()指令。", "A": "被中断的前一条", "B": "被中断的那一条", "C": "被中断的后一条", "D": "启动时的第一条", "Answer": "B", "Explanation": "缺页中断是访存指令引起的，说明所要访问的页面不在内存中，进行缺页中断处理并调入所要访问的页后，访存指令显然应该重新执行。"}
{"ID": 4280, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面关于请求页式系统的页面调度算法中，说法错误的是()。", "A": "一个好的页面调度算法应减少和避免抖动现象", "B": "FIFO算法实现简单，选择最先进入主存储器的页面调出", "C": "LRU算法基于局部性原理，首先调出最近一段时间内最长时间未被访问过的页面", "D": "CLOCK算法首先调出一段时间内被访问次数多的页面", "Answer": "D", "Explanation": "CLOCK算法选择将最近未使用的页面置换出去，因此又称NRU算法。"}
{"ID": 4281, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "考虑页面置换算法，系统有m个物理块供调度，初始时全空，页面引用串长度为p，包含了n个不同的页号，无论用什么算法，缺页次数不会少于()。", "A": "m", "B": "p", "C": "n", "D": "min(m,n)", "Answer": "C", "Explanation": "无论采用什么页面置换算法，每种页面第一次访问时不可能在内存中，必然发生缺页，所以缺页次数大于等于n。"}
{"ID": 4282, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设主存容量为1MB，外存容量为400MB，计算机系统的地址寄存器有32位，那么虚拟存储器的最大容量是()。", "A": "1MB", "B": "401MB", "C": "1MB+2^32MB", "D": "2^32B", "Answer": "D", "Explanation": "虚拟存储器的最大容量是由计算机的地址结构决定的，与主存容量和外存容量没有必然的联系，其虚拟地址空间为2^32B，"}
{"ID": 4283, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "导致LRU算法实现起来耗费高的原因是()。", "A": "需要硬件的特殊支持", "B": "需要特殊的中断处理程序", "C": "需要在页表中标明特殊的页类型", "D": "需要对所有的页进行排序", "Answer": "D", "Explanation": "LRU算法需要对所有页最近一次被访间的时间进行记录，查找时间最久的进行替换，这涉及排序，对置换算法而言，开销太大。为此需要在页表项中增加LRU位，选项A可看作是“耗费高”这一结果，选项D才是造成选项A的原因。"}
{"ID": 4284, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在虚拟存储器系统的页表项中，决定是否会发生页故障的是()。", "A": "合法位", "B": "修改位", "C": "页类型", "D": "保护码", "Answer": "A", "Explanation": "页表项中的合法位信息显示本页面是否在内存中，即决定了是否会发生页面故障。"}
{"ID": 4285, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在页面置换策略中，()策略可能引起抖动。", "A": "FIFO", "B": "LRU", "C": "没有一种", "D": "所有", "Answer": "D", "Explanation": "抖动是进程的页面置换过程中，频繁的页面调度(缺页中断)行为，所有的页面调度策略都不可能完全避免抖动。"}
{"ID": 4286, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "产生内存抖动的主要原因是()。", "A": "内存空间太小", "B": "CPU 运行速度太慢", "C": "CPU调度算法不合理", "D": "页面置换算法不合理", "Answer": "D", "Explanation": "内存抖动是指频繁地引起主存页面淘汰后又立即调入，调入后又很快淘汰的现象。这是由页面置换算法不合理引起的一种现象，是页面置换算法应当尽量避免的。"}
{"ID": 4287, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在页面置换算法中，存在Belady现象的算法是()。", "A": "最佳页面置换算法(OPT)", "B": "先进先出置换算法(FIFO)", "C": "最近最久未使用算法(LRU)", "D": "最近未使用算法(NRU)", "Answer": "B", "Explanation": "FIFO是队列类算法，有Belady现象;选项C、D均为堆栈类算法，理论上可以证明不会出现Belady现象。"}
{"ID": 4288, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在虚拟分页存储管理系统中，若进程访问的页面不在主存中，且主存中没有可用的空闲帧时，系统正确的处理顺序为()。", "A": "决定淘汰页→页面调出→缺页中断→页面调入", "B": "决定淘汰页→页面调入→缺页中断→页面调出", "C": "缺页中断→决定淘汰页→页面调出→页面调入", "D": "缺页中断→决定淘汰页→页面调入→页面调出", "Answer": "C", "Explanation": "根据缺页中断的处理流程，产生缺页中断后，首先去内存寻找空闲物理块，若内存没有空闲物理块，则使用页面置换算法决定淘汰页面，然后调出该淘汰页面，最后再调入该进程欲访问的页面。整个流程可归纳为缺页中断→决定淘汰页→页面调出→页面调入。"}
{"ID": 4289, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知系统为32位实地址，采用48位虚拟地址，页面大小为4KB，页表项大小为8B。假设系统使用纯页式存储，则要采用()级页表，页内偏移()位。", "A": "3，12", "B": "3，14", "C": "4，12", "D": "4，14", "Answer": "C", "Explanation": "页面大小为4KB，因此页内偏移为12位。系统采用48位虚拟址，因此虚页号48-12=36位。采用多级页表时，最高级页表项不能超出一页大小:每页能容纳的页表项数为4KB/8B=512=2^9，36/9=4，因此应采用4级页表，最高级页表项正好占据一页空间，所以本题选择C。"}
{"ID": 4290, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列说法中，正确的是()。Ⅰ. 先进先出(FIFO)页面置换算法会产生Belady现象 Ⅱ. 最近最少使用(LRU)页面置换算法会产生Belady现象 Ⅲ. 在进程运行时，若其工作集页面都在虚拟存储器内，则能够使该进程有效地运行,否则会出现频繁的页面调入/调出现象 Ⅳ.在进程运行时，若其工作集页面都在主存储器内，则能够使该进程有效地运行，否则会出现频繁的页面调入/调出现象", "A": "Ⅰ、Ⅲ", "B": "Ⅰ、Ⅳ", "C": "Ⅱ、Ⅲ", "D": "Ⅱ、Ⅳ", "Answer": "B", "Explanation": "FIFO算法可能产生Belady现象，例如页面走向为1,2,3,4,1,2,5,1,2,3,4,5时，当分配3帧时产生9次缺页中断,分配4帧时产生10次缺页中断,Ⅰ正确。最近最少使用法不会产生Belady现象，Ⅱ错误。若页面在内存中，则不会产生缺页中断，即不会出现页面的调入/调出，而不是虚拟存储器(包括作为虚拟内存那部分硬盘)，故Ⅲ错误、Ⅳ正确。"}
{"ID": 4291, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "测得某个采用按需调页策略的计算机系统的部分状态数据为:CPU利用率为20%，用于交换空间的磁盘利用率为97.7%，其他设备的利用率为5%。由此判断系统出现异常，这种情况下()能提高系统性能。", "A": "安装一个更快的硬盘", "B": "通过扩大硬盘容量增加交换空间", "C": "增加运行进程数", "D": "加内存条来增加物理空间容量", "Answer": "D", "Explanation": "用于交换空间的磁盘利用率已达97.7%，其他设备的利用率为5%，CPU的利用率为20%，说明在任务作业不多的情况下交换操作非常频繁，因此判断物理内存严重短缺。"}
{"ID": 4292, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定有一个请求分页存储管理系统，测得系统各相关设备的利用率为:CPU的利用率为10%，磁盘交换区的利用率为99.7%，其他/O设备的利用率为5%。下面()措施将可能改进CPU的利用率。Ⅰ.增大内存的容量 Ⅱ.增大磁盘交换区的容量 Ⅲ.减少多道程序的度数 Ⅳ. 增加多道程序的度数 Ⅴ. 使用更快速的磁盘交换区 Ⅵ. 使用更快速的CPU", "A": "Ⅰ、Ⅱ、Ⅲ、Ⅳ", "B": "Ⅰ、Ⅲ", "C": "Ⅱ、Ⅲ、Ⅴ", "D": "Ⅱ、Ⅳ", "Answer": "B", "Explanation": "Ⅰ正确:增大内存的容量。增大内存可使每个程序得到更多的页框，能减少缺页率，进而减少换入/换出过程，可提高CPU 的利用率。II 错误:增大磁盘交换区的容量。因为系统实际已处于频繁的换入/换出过程中，不是因为磁盘交换区容量不够，因此增大磁盘交换区的容量无用。Ⅲ正确:减少多道程序的度数。可以提高 CPU 的利用率，因为从给定的条件知道磁盘交换区的利用率为99.7%，说明系统现在已经处于频繁的换入/换出过程中，可减少主存中的程序。Ⅳ 错误:增加多道程序的度数。系统处于频繁的换入/换出过程中，再增加主存中的用户进程数，只能导致系统的换入/换出更频繁，使性能更差。Ⅴ 错误:使用更快速的磁盘交换区。因为系统现在处于频繁的换入/换出过程中，即使采用更快的磁盘交换区，其换入/换出频率也不会改变，因此没用。Ⅵ 错误:使用更快速的 CPU。系统处于频繁的换入/换出过程中，CPU 处于空闲状态，利用率不高，提高CPU的速度无济于事。综上分析: Ⅰ、Ⅲ可以改进CPU 的利用率。"}
{"ID": 4293, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "目录文件存放的信息是()。", "A": "某一文件存放的数据信息", "B": "某一文件的文件目录", "C": "该目录中所有数据文件目录", "D": "该目录中所有子目录文件和数据文件的目录", "Answer": "D"}
{"ID": 4294, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "若多个进程共享同一个文件F，则下列叙述中，正确的是（）", "A": "各进程只能用“读”方式打开文件F", "B": "在系统打开文件表中仅有一个表项包含F的属性", "C": "各进程的用户打开文件表中关于F的表项内容相同", "D": "进程关闭F时，系统删除F在系统打开文件表中的表项", "Answer": "A"}
{"ID": 4295, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "对一个文件的访问，常由()共同限制。", "A": "用户访问权限和文件属性", "B": "用户访问权限和用户优先级", "C": "优先级和文件属性", "D": "文件属性和口令", "Answer": "A"}
{"ID": 4296, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件的逻辑结构是为了方便()而设计的，", "A": "存储介质特性", "B": "操作系统的管理方式", "C": "主存容量", "D": "用户", "Answer": "D"}
{"ID": 4297, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个文件存在在磁带中时，通常采用（）。", "A": "临时存放方法", "B": "连续、离散存放方法", "C": "离散存放方法", "D": "连续存放方法", "Answer": "D"}
{"ID": 4298, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "目录的作用在于实现以下哪个功能？", "A": "文件的按位置存取", "B": "文件的按内容存取", "C": "文件的按名存取", "D": "文件的按大小存取", "Answer": "C"}
{"ID": 4299, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件结构包括逻辑结构与物理结构。逻辑结构是指：", "A": "用户组织数据的结构形式，数据组织形式来自需求。", "B": "操作系统组织物理数据块的结构形式。", "C": "文件的名称、扩展名和路径的组织形式。", "D": "文件在存储介质上的物理位置和存储方式的组织形式。", "Answer": "A"}
{"ID": 4300, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "物理文件的组织方式是由()确定的。", "A": "应用程序", "B": "主存容量", "C": "外存容量", "D": "操作系统", "Answer": "D"}
{"ID": 4301, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "若文件系统中有两个文件重名，则不应采用()。", "A": "单级目录结构", "B": "两级目录结构", "C": "树形目录结构", "D": "多级目录结构", "Answer": "A"}
{"ID": 4302, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在操作系统中，通常将输入输出设备称为：", "A": "外部设备", "B": "特别文件", "C": "虚拟设备", "D": "基础部件", "Answer": "A"}
{"ID": 4303, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "从用户的观点看，操作系统中引入文件系统的目的是()。", "A": "保护用户数据", "B": "实现对文件的按名存取", "C": "实现虚拟存储", "D": "保存用户和系统文档及数据", "Answer": "B"}
{"ID": 4304, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "UNIX操作系统中，输入/输出设备视为()。", "A": "普通文件", "B": "目录文件", "C": "索引文件", "D": "特殊文件", "Answer": "D"}
{"ID": 4305, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "打开文件操作的主要工作是()。", "A": "把指定文件的目录复制到内存指定的区域", "B": "把指定文件复制到内存指定的区域", "C": "在指定文件所在的存储介质上找到指定文件的目录", "D": "在内存寻找指定的文件", "Answer": "A"}
{"ID": 4306, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "FAT32的文件目录项不包括()。", "A": "文件名", "B": "文件访问权限说明", "C": "文件控制块的物理位置", "D": "文件所在的物理位置", "Answer": "C"}
{"ID": 4307, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "有些操作系统中将文件描述信息从目录项中分离出来，这样做的好处是()。", "A": "减少读文件时的I/O信息量", "B": "减少写文件时的I/O信息量", "C": "减少查找文件时的I/O信息量", "D": "减少复制文件时的I/O信息量", "Answer": "C"}
{"ID": 4308, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列说法中，()属于文件的逻辑结构的范畴。", "A": "连续文件", "B": "系统文件", "C": "链接文件", "D": "流式文件", "Answer": "D"}
{"ID": 4309, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "用磁带做文件存储介质时，文件只能组织成()。", "A": "顺序文件", "B": "链接文件", "C": "索引文件", "D": "目录文件", "Answer": "A"}
{"ID": 4310, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下不适合直接存取的外存分配方式是().", "A": "连续分配", "B": "链接分配", "C": "索引分配", "D": "以上答案都适合", "Answer": "B"}
{"ID": 4311, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件系统中若文件的物理结构采用连续结构，则FCB中有关文件的物理位置的信息应包括() Ⅰ.首块地址 Ⅱ.文件长度 Ⅲ.索引表地址", "A": "仅Ⅰ", "B": "Ⅰ、Ⅱ", "C": "Ⅱ、Ⅲ", "D": "Ⅰ、Ⅲ", "Answer": "B"}
{"ID": 4312, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件系统为每个文件创建一张()，存放文件数据块的磁盘存放位置。", "A": "打开文件表", "B": "位图", "C": "索引表", "D": "空闲盘块链表", "Answer": "C"}
{"ID": 4313, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个文件的相对路径名是从()开始，逐步沿着各级子目录追溯，最后到指定文件的整个通路上所有子目录名组成的一个字符串。", "A": "当前目录", "B": "根目录", "C": "多级目录", "D": "二级目录", "Answer": "A"}
{"ID": 4314, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件系统采用多级目录结构的目的是()。", "A": "减少系统开销", "B": "节省存储空间", "C": "解决命名冲突", "D": "缩短传送时间", "Answer": "C"}
{"ID": 4315, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列选项中，()不是Linux实现虚拟文件系统VFS所定义的对象类型。", "A": "超级块(superblock)对象", "B": "目录项(inode)对象", "C": "文件(file)对象", "D": "数据(data)对象", "Answer": "D"}
{"ID": 4316, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在文件系统中，以下不属于文件保护的方法是()。", "A": "口令", "B": "存取控制", "C": "用户权限表", "D": "读写之后使用关闭命令", "Answer": "D", "Explanation": "在文件系统中，口令、存取控制和用户权限表都是常用的文件保护方法。"}
{"ID": 4317, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于索引表的叙述中，()是正确的。", "A": "索引表中每条记录的索引项可以有多个", "B": "对索引文件存取时，必须先查找索引表", "C": "索引表中含有索引文件的数据及其物理地址", "D": "建立索引的目的之一是减少存储空间", "Answer": "B", "Explanation": "索引文件由逻辑文件和索引表组成，对索引文件存取时，必须先查找索引表。索引项只包含每条记录的长度和在逻辑文件中的起始位置。因为每条记录都要有一个索引项，因此提高了存储代价。"}
{"ID": 4318, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在以下文件的物理结构中，不利于文件长度动态增长的是()。", "A": "连续结构", "B": "链接结构", "C": "索引结构", "D": "散列结构", "Answer": "A", "Explanation": "要求有连续的存储空间，所以必须事先知道文件的大小，然后根据其大小在存储空间中找出一块大小足够的存储区。如果文件动态地增长，那么会使文件所占的空间越来越大，即使事先知道文件的最终大小，在采用预分配的存储空间的方法时，也是很低效的，它会使大量的存储空间长期闲置。"}
{"ID": 4319, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设有一个记录文件，采用链接分配方式，逻辑记录的固定长度为100B，在磁盘上存储时采用记录成组分解技术。盘块长度为512B。若该文件的目录项已经读入内存，则对第22个逻辑记录完成修改后，共启动了磁盘()次。", "A": 3, "B": 4, "C": 5, "D": 6, "Answer": "D", "Explanation": "第22个逻辑记录存放在第5个物理块中(22x100/512=4，余152)，由于文件采用的物理结构是链接文件，因此需要从目录项所指的第一个物理块开始读取，共启动磁盘5次。修改后还需要写回操作，由于写回时已获得该块的物理地址，只需启动磁盘1次，因此共需启动磁盘6次。"}
{"ID": 4320, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面关于索引文件的叙述中，正确的是()。", "A": "索引文件中，索引表的每个表项中含有相应记录的关键字和存放该记录的物理地址", "B": "顺序文件进行检索时，首先从FCB中读出文件的第一个盘块号;而对索引文件进行检索时，应先从FCB中读出文件索引块的开始地址", "C": "对于一个具有三级索引的文件，存取一条记录通常要访问三次磁盘", "D": "文件较大时，无论是进行顺序存取还是进行随机存取，通常索引文件方式都最快", "Answer": "B", "Explanation": "索引表的表项中含有相应记录的关键字和存放该记录的逻辑地址;三级索引需要访问4次磁盘;随机存取时索引文件速度快，顺序存取时顺序文件速度快。"}
{"ID": 4321, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个文件系统中，其FCB占64B，一个盘块大小为1KB，采用一级目录。假定文件目录中有3200个目录项。则查找一个文件平均需要()次访问磁盘。", "A": 50, "B": 54, "C": 100, "D": 200, "Answer": "C", "Explanation": "3200个目录项占用的盘块数为3200x64B/1KB=200个。因为一级目录平均访盘次数为1/2盘块数(顺序查找目录表中的所有目录项，每个目录项为一个FCB)，所以平均的访问磁盘次数为200/2=100次。"}
{"ID": 4322, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列关于目录检索的论述中，正确的是()。", "A": "由于散列法具有较快的检索速度，因此现代操作系统中都用它来替代传统的顺序检索方法", "B": "在利用顺序检索法时，对树形目录应采用文件的路径名，且应从根目录开始逐级检索", "C": "在利用顺序检索法时，只要路径名的一个分量名未找到，就应停止查找", "D": "利用顺序检索法查找完成后，即可得到文件的物理地址", "Answer": "C", "Explanation": "实现用户对文件的按名存取，系统先利用用户提供的文件名形成检索路径,对目录进行检索。在顺序检索中，路径名的一个分量未找到，说明路径名中的某个目录或文件不存在，不需要继续检索，C 正确。目录的查询方式有两种:顺序检索法和 Hash 法，通常采用顺序检索法，A 错误。在树形目录中，为了加快文件检索速度，可设置当前目录，于是文件路径可以从当前目录开始查找，B错误。在顺序检索法查找完成后，得到的是文件的逻辑地址，D错误。"}
{"ID": 4323, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面的说法中，错误的是()。Ⅰ.一个文件在同一系统中、不同的存储介质上的复制文件，应采用同一种物理结构 Ⅱ.对一个文件的访问，常由用户访问权限和用户优先级共同限制 Ⅲ. 文件系统采用树形目录结构后，对于不同用户的文件，其文件名应该不同 Ⅳ.为防止系统故障造成系统内文件受损，常采用存取控制矩阵方法保护文件", "A": "Ⅱ", "B": "Ⅰ、Ⅲ", "C": "Ⅰ、Ⅲ、Ⅳ", "D": "全选", "Answer": "D", "Explanation": "文件在磁带上通常采用连续存放方法，在硬盘上通常不采用连续存放方法，在内存上采用随机存放方法，Ⅰ错误。对文件的访问控制，常由用户访问权限和文件属性共同限制，Ⅱ错误。在树形目录结构中，对于不同用户的文件，文件名可以不同也可以相同，III错误。防止文件受损常采用备份的方法，而存取控制矩阵方法用于多用户之间的存取权限保护，Ⅳ 错误。"}
{"ID": 4324, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "若用8个字(字长32位)组成的位示图管理内存，假定用户归还一个块号为100的内存块时，它对应位示图的位置为()。", "A": "字号为3，位号为5", "B": "字号为4，位号为4", "C": "字号为3，位号为4", "D": "字号为4，位号为5", "Answer": "B", "Explanation": "先求出块号100所在的行号，1~32在行号1中，33~64在行号2中，65~96在行号3中，97~128在行号4中，所以块号100在行号4中:然后求出块号100在行号4中的哪列，行号4的第1列是块号97，以此类推，块号100在行号4中的第4列。另解，行号row和列号col分别为row=(100-1)DIV32+1=4，col=(100-1) MOD32+1= 4，即字号为4，位号也为 4。注意，如果注明行号和列号从0开始，那么答案是不同的。"}
{"ID": 4325, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "缓冲技术中的缓冲池在()中。", "A": "主存", "B": "外存", "C": "ROM", "D": "寄存器", "Answer": "A"}
{"ID": 4326, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在SPOOLing系统中，用户进程实际分配到的是()。", "A": "用户所要求的外设", "B": "外存区，即虚拟设备", "C": "设备的一部分存储区", "D": "设备的一部分空间", "Answer": "B"}
{"ID": 4327, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "虚拟设备是指()。", "A": "允许用户使用比系统中具有的物理设备更多的设备", "B": "允许用户以标准化方式来使用物理设备", "C": "把一个物理设备变换成多个对应的逻辑设备", "D": "允许用户程序不必全部装入主存便可使用系统中的设备", "Answer": "C"}
{"ID": 4328, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "为了便于上层软件的编制，设备控制器通常需要提供()。", "A": "控制寄存器、状态寄存器和控制命令", "B": "I/O地址寄存器、工作方式状态寄存器和控制命令", "C": "中断寄存器、控制寄存器和控制命令", "D": "控制寄存器、编程空间和控制逻辑寄存器", "Answer": "A"}
{"ID": 4329, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在设备管理中，设备映射表(DMT)的作用是()。", "A": "管理物理设备", "B": "管理逻辑设备", "C": "实现输入/输出", "D": "建立逻辑设备与物理设备的对应关系", "Answer": "D"}
{"ID": 4330, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "DMA方式是在()之间建立一条直接数据通路。", "A": "I/O设备和主存", "B": "两个I/O设备", "C": "I/O设备和 CPU", "D": "CPU和主存", "Answer": "A"}
{"ID": 4331, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "通道又称I/O处理机，它用于实现()之间的信息传输。", "A": "内存与外设", "B": "CPU与外设", "C": "内存与外存", "D": "CPU与外存", "Answer": "A"}
{"ID": 4332, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在操作系统中，()指的是一种硬件机制。", "A": "通道技术", "B": "缓冲池", "C": "SPOOLing技术", "D": "内存覆盖技术", "Answer": "A"}
{"ID": 4333, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机系统中，不属于DMA控制器的是()。", "A": "命令/状态寄存器", "B": "内存地址寄存器", "C": "数据寄存器", "D": "堆栈指针寄存器", "Answer": "D"}
{"ID": 4334, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "()用作连接大量的低速或中速I/O设备。", "A": "数据选择通道", "B": "字节多路通道", "C": "数据多路通道", "D": "I/O处理机", "Answer": "B"}
{"ID": 4335, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在下列问题中，()不是设备分配中应考虑的问题。", "A": "及时性", "B": "设备的固有属性", "C": "设备独立性", "D": "安全性", "Answer": "A"}
{"ID": 4336, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "有关设备管理的叙述中，不正确的是()。", "A": "通道是处理输入/输出的软件", "B": "所有设备的启动工作都由系统统一来做", "C": "来自通道的I/O中断事件由设备管理负责处理", "D": "编制好的通道程序是存放在主存中的", "Answer": "A"}
{"ID": 4337, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个计算机系统配置了2台绘图机和3台打印机，为了正确驱动这些设备，系统应该提供()个设备驱动程序。", "A": 5, "B": 3, "C": 2, "D": 1, "Answer": "C"}
{"ID": 4338, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "设备的独立性是指()。", "A": "设备独立于计算机系统", "B": "系统对设备的管理是独立的", "C": "用户编程时使用的设备与实际使用的设备无关", "D": "每台设备都有一个唯一的编号", "Answer": "C"}
{"ID": 4339, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "为了使并发进程能有效地进行输入和输出，最好采用()结构的缓冲技术，", "A": "缓冲池", "B": "循环缓冲", "C": "单缓冲", "D": "双缓冲", "Answer": "A"}
{"ID": 4340, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "若I/O所花费的时间比CPU的处理时间短得多，则缓冲区()。", "A": "最有效 ", "B": "几乎无效", "C": "均衡 ", "D": "以上答案都不对", "Answer": "B"}
{"ID": 4341, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "缓冲区管理着重要考虑的问题是().", "A": "选择缓冲区的大小", "B": "决定缓冲区的数量", "C": "实现进程访问缓冲区的同步", "D": "限制进程的数量", "Answer": "C"}
{"ID": 4342, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "以下()不属于设备管理数据结构，", "A": "PCB", "B": "DCT", "C": "COCT", "D": "CHCT", "Answer": "A"}
{"ID": 4343, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列()不是设备的分配方式", "A": "独享分配", "B": "共享分配", "C": "虚拟分配", "D": "分区分配", "Answer": "D"}
{"ID": 4344, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下面设备中属于共享设备的是().", "A": "打印机", "B": "磁带机", "C": "磁盘", "D": "磁带机和磁盘", "Answer": "C"}
{"ID": 4345, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "虚拟设备是靠()技术来实现的", "A": "通道", "B": "缓冲", "C": "SPOOLing", "D": "控制器", "Answer": "C"}
{"ID": 4346, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在采用SPOOLing技术的系统中，用户的打印结果首先被送到()。", "A": "磁盘固定区域", "B": "内存固定区域", "C": "终端", "D": "打印机", "Answer": "A"}
{"ID": 4347, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "采用SPOOLing技术的计算机系统，外围计算机需要()。", "A": "一台", "B": "多台", "C": "至少一台", "D": "0台", "Answer": "D"}
{"ID": 4348, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下面关于SPOOLing的叙述中，不正确的是()。", "A": "SPOOLing系统中不需要独占设备", "B": "SPOOLing系统加快了作业执行的速度", "C": "SPOOLing系统使独占设备变成共享设备", "D": "SPOOLing系统提高了独占设备的利用率", "Answer": "A"}
{"ID": 4349, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "()是操作系统中采用的以空间换取时间的技术", "A": "SPOOLing技术", "B": "虚拟存储技术", "C": "覆盖与交换技术", "D": "通道技术", "Answer": "A"}
{"ID": 4350, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在采用SPOOLing技术的系统中，用户的打印数据首先被送到()。", "A": "磁盘固定区域", "B": "内存固定区域", "C": "终端", "D": "打印机", "Answer": "A"}
{"ID": 4351, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "磁盘是可共享设备，但在每个时刻()作业启动它。", "A": "可以由任意多个", "B": "能限定多个", "C": "至少能由一个", "D": "至多能由一个", "Answer": "D"}
{"ID": 4352, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "既可以随机访问又可顺序访问的有()。Ⅰ.光盘 Ⅱ. 磁带 Ⅲ.U盘 Ⅳ.磁盘", "A": "Ⅱ、Ⅲ、Ⅳ", "B": "Ⅰ、Ⅲ、Ⅳ", "C": "Ⅲ、Ⅳ", "D": "仅Ⅳ", "Answer": "B"}
{"ID": 4353, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "磁盘调度的目的是缩短()时间。", "A": "找道", "B": "延迟", "C": "传送", "D": "启动", "Answer": "A"}
{"ID": 4354, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "磁盘上的文件以()为单位读/写。", "A": "块", "B": "记录", "C": "柱面", "D": "磁道", "Answer": "A"}
{"ID": 4355, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "在磁盘中读取数据的下列时间中，影响最大的是()。", "A": "处理时间", "B": "延迟时间", "C": "传送时间", "D": "寻找时间", "Answer": "D"}
{"ID": 4356, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "硬盘的操作系统引导扇区产生在()。", "A": "对硬盘进行分区时", "B": "对硬盘进行低级格式化时", "C": "硬盘出厂时自带", "D": "对硬盘进行高级格式化时", "Answer": "D"}
{"ID": 4357, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "设磁盘的转速为3000转/分，盘面划分为10个扇区，则读取一个扇区的时间为()。", "A": "20ms", "B": "5ms", "C": "2ms", "D": "1ms", "Answer": "C"}
{"ID": 4358, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Knowledge", "Language": "Chinese", "Question": "下列关于固态硬盘(SSD)的说法中，错误的是()。", "A": "基于闪存的存储技术", "B": "随机读写性能明显高于磁盘", "C": "随机写比较慢", "D": "不易磨损", "Answer": "D"}
{"ID": 4359, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下关于设备属性的叙述中，正确的是()。", "A": "字符设备的基本特征是可寻址到字节，即能指定输入的源地址或输出的目标地址", "B": "共享设备必须是可寻址的和可随机访问的设备", "C": "共享设备是指同一时间内允许多个进程同时访问的设备", "D": "在分配共享设备和独占设备时都可能引起进程死锁", "Answer": "B", "Explanation": "可寻址是块设备的基本特征，A选项不正确;共享设备是指一段时间内允许多个进程同时访问的设备，因此C 选项不正确。分配共享设备是不会引起进程死锁的，D 选项不正确。"}
{"ID": 4360, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "关于通道、设备控制器和设备之间的关系，以下叙述中正确的是()。", "A": "设备控制器和通道可以分别控制设备", "B": "对于同一组输入/输出命令，设备控制器、通道和设备可以并行工作", "C": "通道控制设备控制器、设备控制器控制设备工作", "D": "以上答案都不对", "Answer": "C", "Explanation": "三者的控制关系是层层递进的，只有C选项正确。"}
{"ID": 4361, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "I/O中断是CPU与通道协调工作的一种手段，所以在()时，便要产生中断。", "A": "CPU执行“启动I/O”指令而被通道拒绝接收", "B": "通道接收了CPU的启动请求", "C": "通道完成了通道程序的执行", "D": "通道在执行通道程序的过程中", "Answer": "C", "Explanation": "CPU启动通道时不管启动成功与否，通道都要回答CPU，通道在执行通道程序(用来传送数据)的过程中，CPU与通道并行，通道完成通道程序的执行时，便发I/O中断向 CPU 报告。"}
{"ID": 4362, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "将系统调用参数翻译成设备操作命令的工作由()完成。", "A": "用户层I/O", "B": "设备无关的操作系统软件", "C": "中断处理", "D": "设备驱动程序", "Answer": "B", "Explanation": "系统调用是操作系统提供给用户程序的通用接口，不会因为具体设备的不同而改变。而设备驱动程序负责执行操作系统发出的I/O命令，它因设备不同而不同。"}
{"ID": 4363, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个典型的文本打印页面有50行，每行80个字符，假定一台标准的打印机每分钟能打印6页，向打印机的输出寄存器中写一个字符的时间很短，可忽略不计。若每打印一个字符都需要花费50μs的中断处理时间(包括所有服务)，使用中断驱动I/O方式运行这台打印机，中断的系统开销占CPU的百分比为()。", "A": 0.02, "B": 0.05, "C": 0.2, "D": 0.5, "Answer": "A", "Explanation": "这台打印机每分钟打印50x80x6=24000个字符，即每秒打印400个字符。每个字符打印中断需要占用CPU 时间50μs，所以每秒用于中断的系统开销为400x50μs=20ms。若使用中断驱动I/O，则 CPU 剩余的 980ms可用于其他处理，中断的开销占CPU的2%。因此，使用中断驱动I/O方式运行这台打印机是有意义的。"}
{"ID": 4364, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "引入高速缓冲的主要目的是()。", "A": "提高CPU的利用率", "B": "提高I/O设备的利用率", "C": "改善CPU与IO设备速度不匹配的问题", "D": "节省内存", "Answer": "C", "Explanation": "CPU与I/O设备执行速度通常是不对等的，前者快、后者慢，通过高速缓冲技术来改善两者不匹配的问题。"}
{"ID": 4365, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "设从磁盘将一块数据传送到缓冲区所用的时间为80μs，将缓冲区中的数据传送到用户区所用的时间为40μs，CPU处理一块数据所用的时间为30μs。若有多块数据需要处理，并采用单缓冲区传送某磁盘数据，则处理一块数据所用的总时间为()。", "A": "120μs", "B": "110μs", "C": "150μs", "D": "70μs", "Answer": "A", "Explanation": "采用单缓冲区传送数据时，设备与处理机对缓冲区的操作是串行的，当进行第i次读磁盘数据送至缓冲区时，系统再同时读出用户区中第i-1次数据进行计算，此两项操作可以并行，并与数据从缓冲区传送到用户区的操作串行进行，所以系统处理一块数据所用的总时间为max(80μs,30μs)+40μs = 120μs。"}
{"ID": 4366, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "某操作系统采用双缓冲区传送磁盘上的数据。设从磁盘将数据传送到缓冲区所用的时间为T_1，将缓冲区中的数据传送到用户区所用的时间为T_2(假设T_2远小于T_1),CPU处理数据所用的时间为T_3，则处理该数据，系统所用的总时间为()。", "A": "T_1+T_2+T_3", "B": "max(T_2,T_3)+T_1", "C": "max(T_1,T_3)+T_2", "D": "max(T_1,T_3)", "Answer": "D", "Explanation": "处理该数据所用的总时间，即可以默认初始状态缓冲区1已将数据传送到用户区。然后分情况讨论:若T_3>T_1，即CPU 处理数据块比数据传送慢，意味着I/O设备可连续输入，磁盘将数据传送到缓冲区，再传送到用户区，与CPU处理数据可视为并行处理，时间的花费取决于CPU最大花费时间，则系统所用总时间为T_3。若T_3<T_1，即CPU处理数据比数据传送快，此时CPU不必等待I/O设备，磁盘将数据传送到缓冲区，与缓冲区中数据传送到用户区及CPU数据处理可视为并行执行，则花费时间取决于磁盘将数据传送到缓冲区所用时间T_1。所以选 D。"}
{"ID": 4367, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "考虑单用户计算机上的下列/O操作，需要使用缓冲技术的是()。Ⅰ. 图形用户界面下使用鼠标 Ⅱ. 多任务操作系统下的磁带驱动器(假设没有设备预分配) Ⅲ. 包含用户文件的磁盘驱动器 Ⅳ. 使用存储器映射I/O，直接和总线相连的图形卡", "A": "Ⅰ、Ⅲ", "B": "Ⅱ、Ⅳ", "C": "Ⅱ、Ⅲ、Ⅳ", "D": "全选", "Answer": "D", "Explanation": "在鼠标移动时，若有高优先级的操作产生，为了记录鼠标活动的情况，必须使用缓冲技术，Ⅰ正确。由于磁盘驱动器和目标或源 /O设备间的吞吐量不同，必须采用缓冲技术，Ⅱ正确。为了能使数据从用户作业空间传送到磁盘或从磁盘传送到用户作业空间,必须采用缓冲技术,Ⅲ正确。为了便于多幅图形的存取及提高性能，缓冲技术是可以采用的，特别是在显示当前一幅图形又要得到下一幅图形时，应采用双缓冲技术，Ⅳ正确。综上所述，本题正确答案为D。"}
{"ID": 4368, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "采用假脱机技术，将磁盘的一部分作为公共缓冲区以代替打印机，用户对打印机的操作实际上是对磁盘的存储操作，用以代替打印机的部分由()完成。", "A": "独占设备", "B": "共享设备", "C": "虚拟设备", "D": "一般物理设备", "Answer": "C", "Explanation": "打印机是独享设备，利用SPOOLing技术可将打印机改造为可供多个用户共享的虚拟设备。"}
{"ID": 4369, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下面关于独占设备和共享设备的说法中，不正确的是()。", "A": "打印机、扫描仪等属于独占设备", "B": "对独占设备往往采用静态分配方式", "C": "共享设备是指一个作业尚未撤离，另一个作业即可使用，但每个时刻只有一个作业使用", "D": "对共享设备往往采用静态分配方式", "Answer": "D", "Explanation": "独占设备采用静态分配方式，而共享设备采用动态分配方式。"}
{"ID": 4370, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "在下列有关旋转延迟的叙述中，不正确的是()。", "A": "旋转延迟的大小与磁盘调度算法无关", "B": "旋转延迟的大小取决于磁盘空闲空间的分配程序", "C": "旋转延迟的大小与文件的物理结构有关", "D": "扇区数据的处理时间对旋转延迟的影响较大", "Answer": "D", "Explanation": "磁盘调度算法是为了减少寻找时间。扇区数据的处理时间主要影响传输时间。选项B、C均与旋转延迟有关，文件的物理结构与磁盘空间的分配方式相对应，包括连续分配、链接分配和索引分配。连续分配的磁盘中，文件的物理地址连续;而链接分配方式的磁盘中，文件的物理地址不连续，因此与旋转延迟都有关。"}
{"ID": 4371, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "下列算法中，用于磁盘调度的是()。", "A": "时间片轮转调度算法", "B": "LRU算法", "C": "最短寻找时间优先算法", "D": "优先级高者优先算法", "Answer": "C", "Explanation": "选项A是进程调度算法;选项B是页面淘汰算法;选项D可以用于进程调度和作业调度。只有选项C是磁盘调度算法。"}
{"ID": 4372, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "以下算法中，()可能出现“饥饿”现象。", "A": "电梯调度", "B": "最短寻找时间优先", "C": "循环扫描算法", "D": "先来先服务", "Answer": "B", "Explanation": "最短寻找时间优先算法中，当新的距离磁头比较近的磁盘访问请求不断被满足时，可能会导致较远的磁盘访问请求被无限延迟，从而导致“饥饿”现象。"}
{"ID": 4373, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个磁盘的转速为7200转/分，每个磁道有160个扇区，每扇区有512B，那么理想情况下，其数据传输率为()。", "A": "7200x160KB/s", "B": "7200KB/s", "C": "9600KB/s", "D": "19200KB/s", "Answer": "C", "Explanation": "磁盘的转速为7200转/分=120转/秒，转一圈经过160个扇区，每个扇区为512B，所以数据传输率=120x160x512/1024KB/s=9600KB/s。"}
{"ID": 4374, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Multiple-choice", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定磁带的记录密度为400字符/英寸(1in=0.0254m)，每条逻辑记录为80字符，块间隙为0.4英寸，现有3000个逻辑记录需要存储，存储这些记录需要长度为()的磁带，磁带利用率是()。", "A": "1500英寸，33.3%", "B": "1500英寸，43.5%", "C": "1800英寸，33.3%", "D": "1800英寸，43.5%", "Answer": "C", "Explanation": "一个逻辑记录所占的磁带长度为80/400=0.2英寸,因此存储3000条逻辑记录需要的磁带长度为(0.2+0.4)x3000=1800英寸，利用率为0.2/(0.2+0.4)=33.3%。"}
{"ID": 4375, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "操作系统是对硬件进行管理的软件。", "Answer": false}
{"ID": 4376, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "操作系统应该管理的资源包括内存、处理器和外部设备等，而源程序不是操作系统应该管理的资源。", "Answer": true}
{"ID": 4377, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "操作系统关心的问题是设计，并提供用户程序与硬件系统的界面。", "Answer": false}
{"ID": 4378, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "操作系统的基本功能是提供用户界面方使用户使用。", "Answer": false}
{"ID": 4379, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "现代操作系统中最基本的两个特征是并发和共享。", "Answer": true}
{"ID": 4380, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "操作系统提供给编程人员的接口是库函数。", "Answer": false}
{"ID": 4381, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "多道程序设计的基本特征包括并发性、共享性、不确定性和制约性，但不属于这些特征之一的是制约性。", "Answer": false}
{"ID": 4382, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "批处理系统的主要缺点是缺乏交互能力。", "Answer": true}
{"ID": 4383, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "多道程序设计的基本特征包括并发性、独立性、互斥性和共享性，其中共享性不属于多道程序设计的基本特征。", "Answer": false}
{"ID": 4384, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "分时系统追求的目标是比较快速响应用户。", "Answer": true}
{"ID": 4385, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "计算机区分核心态和用户态指令后，从核心态到用户态的转换是由操作系统程序执行后完成的，而用户态到核心态的转换则是由硬件完成的。", "Answer": true}
{"ID": 4386, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "CPU处于核心态时，它可以执行的指令是只有“访管”指令。", "Answer": false}
{"ID": 4387, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "BIOS的任务是检查分区表是否正确，确定哪个分区为活动分区，并在程序结束时将该分区的启动程(操作系统引导扇区)调入内存加以执行。", "Answer": false}
{"ID": 4388, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "外存是操作系统不应该管理的资源。", "Answer": false}
{"ID": 4389, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "用户可以通过命令接口和函数两种方式来使用计算机。", "Answer": false}
{"ID": 4390, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "操作系统向用户提供了命令接口，该接口可进一步分为脱机用户接口和图形接口，以方便用户直接或间接地控制自己的作业。", "Answer": false}
{"ID": 4391, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "多道程序设计的基本特征包括并发性、共享性和互斥性，但不包括顺序性。", "Answer": true}
{"ID": 4392, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "中断处理是操作系统必须提供的功能。", "Answer": true}
{"ID": 4393, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在操作系统中，只能在核心态下运行的指令是取数指令。", "Answer": false}
{"ID": 4394, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "分时系统的一个重要性能是系统的响应时间，对操作系统的优先级和非抢占式调度算法这两个因素进行改进有利于改善系统的响应时间。", "Answer": true, "Explanation": "采用优先级+非抢占式调度算法，既可让重要的作业/进程通过高优先级尽快获得系统响应,又可保证次要的作用/进程在非抢占式调度下不会迟迟得不到系统响应,这样兼顾的设计有利于改善系统的响应时间。加大时间片会延迟系统响应时间:静态页式管理和代码可重入与系统响应时间无关."}
{"ID": 4395, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在分时系统中，为了使多个进程能够及时与系统交互，最关键的问题是能在短时间内，使所有就绪进程都能运行。当就绪进程数为100时，为保证响应时间不超过2s，此时的时间片最大应为20ms。", "Answer": true, "Explanation": "响应时间不超过2s，即在2s内必须响应所有进程。所以时间片最大为2s/100=20ms。"}
{"ID": 4396, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在中断发生后，进入中断处理的程序属于操作系统程序。", "Answer": true, "Explanation": "当中断或异常发生时，通过硬件实现将运行在用户态的CPU 立即转入核心态。中断发生时，若被中断的是用户程序，则系统将从目态转入管态，在管态下进行中断的处理;若被中断的是低级中断，则仍然保持在管态，而用户程序只能在目态下运行，因此进入中断处理的程序只能是OS程序。中断程序本身可能是用户程序，但是进入中断的处理程序一定是OS程序。"}
{"ID": 4397, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "进程与程序的根本区别是静态和动态特点。", "Answer": true}
{"ID": 4398, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在任何时刻，一个进程的状态变化不一定会引起另一个进程的状态变化。", "Answer": true}
{"ID": 4399, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个进程的基本状态可以从其他两种基本状态转变过去，这个基本的状态一定是阻塞态。", "Answer": false}
{"ID": 4400, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "PCB是进程存在的唯一标志，全局变量不属于PCB。", "Answer": true}
{"ID": 4401, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在基于GUI的调试程序中，多线程系统并不是其特长，因为它用不同的线程分别处理用户输入、计算和跟踪等操作。", "Answer": false}
{"ID": 4402, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "两个合作进程无法利用消息传递系统来交换数据。", "Answer": false}
{"ID": 4403, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个进程从运行态变为就绪态必会引起进程切换。", "Answer": true}
{"ID": 4404, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "进程处于等待协作进程的一个信号时，它处于非阻塞态。", "Answer": false}
{"ID": 4405, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在单处理器的多进程系统中，进程什么时候占用处理器及决定占用时间的长短是由进程相应的代码长度决定的。", "Answer": false}
{"ID": 4406, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "时间片轮转调度算法有利于CPU繁忙型的作业，而不利于I/O繁忙型的作业。", "Answer": false}
{"ID": 4407, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "先来先服务调度算法是绝对可抢占的。", "Answer": false}
{"ID": 4408, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "P操作可能导致新进程创建。", "Answer": false}
{"ID": 4409, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "死锁的四个必要条件中，无法破坏的是互斥使用资源。", "Answer": true}
{"ID": 4410, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "不安全状态就是死锁状态。", "Answer": false}
{"ID": 4411, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在死锁检测时检查的是资源有向图。", "Answer": true}
{"ID": 4412, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "死锁定理是用于处理死锁的检测方法。", "Answer": true}
{"ID": 4413, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个进程映像是PCB结构与程序和数据的组合。", "Answer": true}
{"ID": 4414, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在任何时刻，一个进程的状态变化必定引起另一个进程的状态变化。", "Answer": false}
{"ID": 4415, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在单处理器系统中，若同时存在10个进程，则处于就绪队列中的进程最多有10个。", "Answer": false}
{"ID": 4416, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "系统进程所请求的一次I/O操作完成后，将使进程状态从阻塞态变为就绪态。", "Answer": true}
{"ID": 4417, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "系统动态DLL库中的系统线程，被不同的进程所调用，它们是相同的线程。", "Answer": true}
{"ID": 4418, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个计算机系统中，进程的最大数目主要受到用户数目限制。", "Answer": false}
{"ID": 4419, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "分时操作系统通常采用短作业优先调度算法来为用户服务。", "Answer": false}
{"ID": 4420, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在操作系统中，要对并发进程进行同步的原因是因为进程必须在有限的时间内完成。", "Answer": false}
{"ID": 4421, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "程序定义了共享数据结构和各种进程在该数据结构上的全部操作。", "Answer": false}
{"ID": 4422, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "用V操作唤醒一个等待进程时，被唤醒进程变为就绪态。", "Answer": true}
{"ID": 4423, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个系统中共有5个并发进程涉及某个相同的变量A，变量A的相关临界区是由5个临界区构成的。", "Answer": true}
{"ID": 4424, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "信箱通信是一种直接通信方式。", "Answer": false}
{"ID": 4425, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "某系统中有三个并发进程都需要四个同类资源，因此该系统必然不会发生死锁的最少资源是10。", "Answer": true}
{"ID": 4426, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "引入多道程序技术的前提条件之一是系统具有分时功能。", "Answer": false}
{"ID": 4427, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "引入线程可提高程序并发执行的程度，从而进一步提高系统效率。", "Answer": true, "Explanation": "线程是进程内一个相对独立的执行单元，但不能脱离进程单独运行，只能在进程中运行。引入线程是为了减少程序执行时的时空开销。一个进程可包含一个或多个线程。"}
{"ID": 4428, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "当时间片到时，进程从执行状态转变为就绪态。", "Answer": true, "Explanation": "当进程的时间片到时，进程由运行态转变为就绪态，等待下一个时间片的到来。"}
{"ID": 4429, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "为了使平均周转时间最小，应该先执行运行时间较短的作业。因此，最小平均周转时间的执行顺序是执行作业1（2h）、作业3（3h）、作业2（5h），即作业1、作业3、作业2的顺序。", "Answer": true, "Explanation": "在同一台处理器上以单道方式运行时，要想获得最短的平均周转时间，用短作业优先调度算法会有较好的效果。就本题目而言:A选项的平均周转时间=(2+7+10)/3h=19/3h;B 选项的平均周转时间=(3+8+10)/3h=7h。C选项的平均周转时间=(5+7+10)3h=22/3h;D选项的平均周转时间=(2+5+10)/3h=17/3h。"}
{"ID": 4430, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "时间片轮转调度算法是绝对可抢占的。", "Answer": true, "Explanation": "时间片轮转算法是按固定的时间配额来运行的，时间一到，不管是否完成，当前的进程必须撤下，调度新的进程，因此它是由时间配额决定的、是绝对可抢占的。而优先级算法和短进程优先算法都可分为抢占式和不可抢占式。"}
{"ID": 4431, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "平均周转时间为14的调度算法是优先级调度。", "Answer": false, "Explanation": "这5个批处理作业采用短作业优先调度算法时，平均周转时间=[2+(2+4)+(2+4+6)+(2+4+6+8)+(2+4+6+8+10)]/5=14。这道题主要考查读者对各种优先调度算法的认识。若按照18 题中的方法求解，则可能要花费一定的时间，但这是值得的，因为可以起到熟练基本方法的效果。在考试中很少会遇到操作量和计算量如此大的题目，所以读者不用担心。"}
{"ID": 4432, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在进程调度算法中，对短进程不利的是先来先服务调度算法。", "Answer": true, "Explanation": "先来先服务调度算法中，若一个长进程(作业)先到达系统，则会使后面的许多短进程(作业)等待很长的时间，因此对短进程(作业)不利。"}
{"ID": 4433, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "进程同步不需要信号量就能实现。", "Answer": false, "Explanation": "在多道程序技术中，信号量机制是一种有效实现进程同步和互斥的工具。进程执行的前趋关系实质上是指进程的同步关系。除此之外，只有进程的并发执行不需要信号量来控制，因此正确答案为 D。"}
{"ID": 4434, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "使用PV操作同步机制时，信号量S的取值范围是2、1、0和-1。", "Answer": true, "Explanation": "因为每次允许两个进程进入该程序段，信号量最大值取2。至多有三个进程申请，则信号量最小为-1，所以信号量可以取2,1,0,-1。"}
{"ID": 4435, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个进程在获得资源后，只能在使用完资源后由自己释放，这属于死锁必要条件的不剥夺条件。", "Answer": true, "Explanation": "一个进程在获得资源后，只能在使用完资源后由自己释放，即它的资源不能被系统剥夺，答案为C选项。"}
{"ID": 4436, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在存储管理中，采用覆盖与交换技术的目的是实现主存共享。", "Answer": false}
{"ID": 4437, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "段页式存储管理中，地址映射表是每个进程一张页表，每个段一张段表。", "Answer": false}
{"ID": 4438, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "采用分页或分段管理后，提供给用户的物理地址空间一样大。", "Answer": false}
{"ID": 4439, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "对外存对换区的管理应以提高换入、换出速度为主要目标。", "Answer": true}
{"ID": 4440, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "某个操作系统对内存的管理采用页式存储管理方法，所划分的页面大小必须相同。", "Answer": true}
{"ID": 4441, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "不适合多道程序设计系统的存储管理方式是可变式分区分配。", "Answer": false}
{"ID": 4442, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在分段存储管理方式中，以段为单位，每段是一个连续存储区。", "Answer": true}
{"ID": 4443, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "虚拟存储器的最大容量取决于作业的地址空间。", "Answer": false}
{"ID": 4444, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在页面置换策略中，FIFO策略可能引起抖动。", "Answer": false}
{"ID": 4445, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "虚拟存储管理系统的基础是程序的虚拟性理论。", "Answer": false}
{"ID": 4446, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "页式虚拟存储管理的主要特点是不要求将作业同时全部装入主存的连续区域。", "Answer": true}
{"ID": 4447, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "不会产生内部碎片的存储管理是分段式存储管理。", "Answer": true}
{"ID": 4448, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "对重定位存储管理方式，应在整个系统中设置一个重定位寄存器。", "Answer": true}
{"ID": 4449, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "对外存对换区的管理应以提高系统吞吐量为主要目标。", "Answer": false}
{"ID": 4450, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在分段存储管理方式中，每段是等长的。", "Answer": false}
{"ID": 4451, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "虚拟存储技术是一种补充外存空间的技术。", "Answer": false}
{"ID": 4452, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "请求分页存储管理的主要特点是扩充了内存。", "Answer": true}
{"ID": 4453, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "虚拟存储技术的存储管理方法包括请求段式存储管理。", "Answer": true}
{"ID": 4454, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "实现虚拟内存管理必须有相应硬件的支持。", "Answer": true, "Explanation": "选项A、B显然错误，选项C中编址空间的大小取决于硬件的访存能力，一般由地址总线宽度决定。选项D中虚拟内存的管理需要由相关的硬件和软件支持，有请求分页页表机制、缺页中断机构、地址变换机构等。"}
{"ID": 4455, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "页式存储管理方案中，可以采用静态重定位。", "Answer": false, "Explanation": "固定分区方式中，作业装入后位置不再改变，可以采用静态重定位。其余三种管理方案均可能在运行过程中改变程序位置，静态重定位不能满足其要求。"}
{"ID": 4456, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "单用户连续分配是一种存储管理方式，不适合多道程序设计系统。", "Answer": true, "Explanation": "单用户连续分配管理方式只适用于单用户、单任务的操作系统，不适用于多道程序设计。"}
{"ID": 4457, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "操作系统采用分页存储管理方式时，要求每个进程拥有一张页表，且进程的页表驻留在内存中。", "Answer": true, "Explanation": "在多个进程并发执行时，所有进程的页表大多数驻留在内存中，在系统中只设置一个页表寄存器(PTR)，它存放页表在内存中的始址和长度。平时，进程未执行时，页表的始址和页表长度存放在本进程的PCB中，当调度到某进程时，才将这两个数据装入页表寄存器中。每个进程都有一个单独的逻辑地址，有一张属于自己的页表。"}
{"ID": 4458, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "为使虚存系统有效地发挥其预期的作用，所运行的程序应具有的特性是该程序的指令相关性不应过多。", "Answer": false, "Explanation": "虚拟存储技术基于程序的局部性原理。局部性越好，虚拟存储系统越能更好地发挥作用。"}
{"ID": 4459, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "在请求分页存储管理中，若采用FIFO页面淘汰算法，则当可供分配的页帧数增加时，缺页中断的次数增加。", "Answer": false, "Explanation": "请求分页存储管理中，若采用FIFO页面淘汰算法，可能会产生当驻留集增大时页故障数不减反增的Belady异常。然而，还有另外一种情况。例如，页面序列为1,2,3,1,2,3，当页帧数为2时产生6次缺页中断，当页帧数为3时产生3次缺页中断。所以在请求分页存储管理中,若采用FIFO页面淘汰算法，则当可供分配的页帧数增加时，缺页中断的次数可能增加，也可能减少。"}
{"ID": 4460, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "某虚拟存储器系统采用页式内存管理，使用LRU页面替换算法，考虑页面访问地址序列18178272183821317137。假定内存容量为4个页面，开始时是空的，则页面失效次数是6。", "Answer": true, "Explanation": "分别在访问第1个、第2个、第4个、第6个、第11个、第17个页面时产生中断，共产生6次中断."}
{"ID": 4461, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "FAT32的文件目录项不包括文件控制块的物理位置。", "Answer": true}
{"ID": 4462, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件转储是操作系统为保证未经文件拥有者授权任何其他用户不能使用该文件所提供的解决方法。", "Answer": false}
{"ID": 4463, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "从用户的观点看，操作系统引入文件系统的目的是保存用户和系统文档及数据。", "Answer": false}
{"ID": 4464, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "索引文件由逻辑文件和索引表组成。", "Answer": true}
{"ID": 4465, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "建立索引的目的之一是减少存储空间。", "Answer": false}
{"ID": 4466, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件系统中若文件的物理结构采用连续结构，则FCB中有关文件的物理位置的信息应包括首块地址和索引表地址。", "Answer": true}
{"ID": 4467, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件的符号名与物理地址之间的转换是通过文件目录来实现的。", "Answer": true}
{"ID": 4468, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "逻辑文件可以分为流式文件和记录式文件。", "Answer": true}
{"ID": 4469, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件的结构就是文件的组织形式，从实现观点出发，文件在外存上的存放组织形式称为文件的逻辑结构。", "Answer": true}
{"ID": 4470, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "逻辑文件的组织形式取决于操作系统的管理方式。", "Answer": false}
{"ID": 4471, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在UNIX操作系统中，文件的索引结构放在目录项。", "Answer": false}
{"ID": 4472, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "位示图可用于文件目录的查找。", "Answer": false}
{"ID": 4473, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件的存储空间管理实质上是对文件控制块的组织和管理。", "Answer": false}
{"ID": 4474, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "该目录存放的信息是该目录中所有子目录文件和数据文件的目录。", "Answer": true}
{"ID": 4475, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "为了保证未经文件拥有者授权，任何其他用户不能使用该文件，操作系统提供的解决方法是文件保密。", "Answer": false}
{"ID": 4476, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "对一个文件的访问，常由用户访问权限和文件属性共同限制。", "Answer": true}
{"ID": 4477, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件的逻辑结构是为了方便用户而设计的。", "Answer": true}
{"ID": 4478, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "若文件系统中有两个文件重名，则不应采用多级目录结构。", "Answer": false}
{"ID": 4479, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "从用户的观点看，操作系统中引入文件系统的目的是保存用户和系统文档及数据。", "Answer": false}
{"ID": 4480, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "位示图可用于磁盘空间的管理。", "Answer": true}
{"ID": 4481, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "加密保护机制的灵活性更好，相比于访问控制机制。", "Answer": false, "Explanation": "相对于加密保护机制，访问控制机制的安全性较差。因为访问控制的级别和保护力度较小,因此它的灵活性相对较高。若访问控制不由系统实现，则系统本身的安全性就无法保证。加密机制若由系统实现，则加密方法将无法扩展。"}
{"ID": 4482, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "文件系统采用两级索引分配方式，每个磁盘块的大小为1KB，每个盘块号占4B，因此在该系统中，单个文件的最大长度是32MB。", "Answer": false, "Explanation": "每个磁盘块中最多有1KB/4B=256个索引项，则两级索引分配方式下单个文件的最大长度为256x256x1KB=64MB。"}
{"ID": 4483, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Assertion", "Tag": "Reasoning", "Language": "Chinese", "Question": "要存取文件的第1569逻辑字节处的信息，则应该访问80号磁盘块。", "Answer": true, "Explanation": "因为1569=512x3+33，故要访问字节位于第4个磁盘块上，对应的物理磁盘块号为80。"}
{"ID": 4484, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "磁盘设备的I/O控制主要采取字节方式。", "Answer": false}
{"ID": 4485, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "通道又称I/O处理机，它用于实现CPU与外设之间的信息传输。", "Answer": false}
{"ID": 4486, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在CPU执行“启动I/O”指令而被通道拒绝接收时，便要产生中断。", "Answer": false}
{"ID": 4487, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "缓冲区管理着重要考虑的问题是实现进程访问缓冲区的同步。", "Answer": true}
{"ID": 4488, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "磁带机属于共享设备。", "Answer": false}
{"ID": 4489, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "虚拟设备是靠SPOOLing技术来实现的。", "Answer": true}
{"ID": 4490, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在采用SPOOLing技术的系统中，用户的打印结果首先被送到内存固定区域。", "Answer": false}
{"ID": 4491, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "SPOOLing系统由预输入程序、井管理程序和输出程序组成。", "Answer": false}
{"ID": 4492, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在采用SPOOLing技术的系统中，用户的打印数据首先被送到磁盘固定区域。", "Answer": true}
{"ID": 4493, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "光盘和磁带既可以随机访问又可顺序访问。", "Answer": false}
{"ID": 4494, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "固态硬盘(SSD)不易磨损。", "Answer": false}
{"ID": 4495, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在设备控制器中用于实现设备控制功能的是设备控制器与处理器的接口。", "Answer": false}
{"ID": 4496, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "缓冲技术中的缓冲池在寄存器中。", "Answer": false}
{"ID": 4497, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "SPOOLing技术的主要目的是提高CPU和设备交换信息的速度。", "Answer": false}
{"ID": 4498, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Assertion", "Tag": "Knowledge", "Language": "Chinese", "Question": "在SPOOLing系统中，用户进程实际分配到的是外存区，即虚拟设备。", "Answer": true}
{"ID": 4499, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "用户在程序中试图读某文件的第100个逻辑块，使用操作系统提供的()接口。", "Answer": "系统调用"}
{"ID": 4500, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "操作系统与用户通信接口通常不包括()。", "Answer": "缓存管理指令"}
{"ID": 4501, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在中断发生后，进入中断处理的程序属于()。", "Answer": "操作系统程序"}
{"ID": 4502, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在操作系统中，只能在核心态下执行的指令是()。", "Answer": "广义指令"}
{"ID": 4503, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "操作系统是对（）进行管理的软件。", "Answer": "计算机资源"}
{"ID": 4504, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "操作系统提供给编程人员的接口是()。", "Answer": "系统调用"}
{"ID": 4505, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "处理器执行的指令被分为两类，其中有一类称为特权指令，它只允许()使用。", "Answer": "操作系统"}
{"ID": 4506, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "当CPU执行操作系统代码时，处理器处于()。", "Answer": "核心态"}
{"ID": 4507, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "()程序可执行特权指令。", "Answer": "操作系统"}
{"ID": 4508, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "检查分区表是否正确，确定哪个分区为活动分区，并在程序结束时将该分区的启动程(操作系统引导扇区)调入内存加以执行，这是()的任务。", "Answer": "MBR"}
{"ID": 4509, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "用户程序在用户态下要使用特权指令引起的中断属于()。", "Answer": "访管中断", "Explanation": "因操作系统不允许用户直接执行某些“危险性高”的指令，因此用户态运行这些指令的结果会转成操作系统的核心态去运行。这个过程就是访管中断。"}
{"ID": 4510, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "进程创建完成后会进入一个序列，这个序列称为()。", "Answer": "就绪队列"}
{"ID": 4511, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "对进程的管理和控制使用()。", "Answer": "原语"}
{"ID": 4512, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "分时操作系统通常采用()调度算法来为用户服务。", "Answer": "时间片轮转"}
{"ID": 4513, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "()定义了共享数据结构和各种进程在该数据结构上的全部操作。", "Answer": "管程"}
{"ID": 4514, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "P操作可能导致()。", "Answer": "进程阻塞"}
{"ID": 4515, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在用信号量机制实现互斥时，互斥信号量的初值为()。", "Answer": "1"}
{"ID": 4516, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "一个进程映像由程序、数据及PCB组成，其中()必须用可重入编码编写。", "Answer": "共享程序段"}
{"ID": 4517, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个作业8:00到达系统，估计运行时间为1h。若10:00开始执行该作业，其响应比是()。", "Answer": "3", "Explanation": "响应比=响应时间/要求服务时间 = (等待时间+要求服务时间) / 要求服务时间 = (2+1)/1=3"}
{"ID": 4518, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "若一个信号量的初值为3，经过多次PV操作后当前值为-1，这表示等待进入临界区的进程数是()。", "Answer": "1", "Explanation": "信号量是一个特殊的整型变量，只有初始化和PV操作才能改变其值。通常，信号量分为互斥量和资源量，互斥量的初值一般为1，表示临界区只允许一个进程进入，从而实现互斥。当互斥量等于0时，表示临界区已有一个进程进入，临界区外尚无进程等待;当互斥量小于0时，表示临界区中有一个进程，互斥量的绝对值表示在临界区外等待进入的进程数。同理，资源信号量的初值可以是任意整数，表示可用的资源数，当资源量小于0时，表示所有资源已全部用完，而且还有进程正在等待使用该资源，等待的进程数就是资源量的绝对值。"}
{"ID": 4519, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "死锁定理是用于处理死锁的()方法。", "Answer": "检测死锁", "Explanation": "死锁定理是用于检测死锁的方法。"}
{"ID": 4520, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在可变分区管理中，采用拼接技术的目的是()。", "Answer": "合并空闲区"}
{"ID": 4521, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在段页式分配中，CPU每次从内存中取一次数据需要()次访问内存。", "Answer": "3"}
{"ID": 4522, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "操作系统实现()存储管理的代价最小。", "Answer": "分区"}
{"ID": 4523, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "把作业空间中使用的逻辑地址变为内存中的物理地址称为()。", "Answer": "重定位"}
{"ID": 4524, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "()存储管理方式提供一维地址结构，", "Answer": "分页"}
{"ID": 4525, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在请求分页存储管理的页表中增加了若干项信息，其中修改位和访问位供()参考。", "Answer": "置换算法"}
{"ID": 4526, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在计算机系统中，快表用于()。", "Answer": "地址变换"}
{"ID": 4527, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "UNIX操作系统中，输入/输出设备视为()。", "Answer": "特殊文件"}
{"ID": 4528, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "用磁带做文件存储介质时，文件只能组织成()。", "Answer": "顺序文件"}
{"ID": 4529, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件系统为每个文件创建一张()，存放文件数据块的磁盘存放位置。", "Answer": "索引表"}
{"ID": 4530, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件系统为每个文件建立了一个指示逻辑记录和物理块之间的对应关系的表，这个表文件是：()", "Answer": "索引表"}
{"ID": 4531, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "为了对文件系统中的文件进行安全管理，任何一个用户在进入系统时都必须进行注册，这一级安全管理是()。", "Answer": "系统级"}
{"ID": 4532, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "索引文件由逻辑文件和()组成，", "Answer": "索引表"}
{"ID": 4533, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "物理文件的组织方式是由()确定的。", "Answer": "操作系统"}
{"ID": 4534, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "UNIX操作系统中，文件的索引结构放在()。", "Answer": "索引结点"}
{"ID": 4535, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "文件的存储空间管理实质上是对()的组织和管理。", "Answer": "外存空闲区"}
{"ID": 4536, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "有一个顺序文件含有10000条记录，平均查找的记录数为5000个，采用索引顺序文件结构，则最好情况下平均只需查找()次记录，", "Answer": "100", "Explanation": "最好的情况是有（根号下10000）=100组，每组有100条记录，因此顺序查找时平均查找记录个数=50+50=100。"}
{"ID": 4537, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Fill-in-the-blank", "Tag": "Reasoning", "Language": "Chinese", "Question": "在磁盘上，最容易导致存储碎片发生的物理文件结构是()。", "Answer": "顺序存放", "Explanation": "顺序文件占用连续的磁盘空间，容易导致存储碎片(外部碎片)的发生。"}
{"ID": 4538, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在设备控制器中用于实现设备控制功能的是()。", "Answer": "I/O 逻辑"}
{"ID": 4539, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "在操作系统中，()指的是一种硬件机制。", "Answer": "通道技术"}
{"ID": 4540, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "若I/O设备与存储设备进行数据交换不经过CPU来完成，则这种数据交换方式是()。", "Answer": "DMA方"}
{"ID": 4541, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Fill-in-the-blank", "Tag": "Knowledge", "Language": "Chinese", "Question": "将系统中的每台设备按某种原则统一进行编号，这些编号作为区分硬件和识别设备的代号，该编号称为设备的()。", "Answer": "绝对号"}
{"ID": 4542, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "说明库函数与系统调用的区别和联系。", "Answer": "库函数是语言或应用程序的一部分，可以运行在用户空间中。而系统调用是操作系统的一部分，是内核为用户提供的程序接口，运行在内核空间中，而且许多库函数都会使用系统调用来实现功能。未使用系统调用的库函数，其执行效率通常要比系统调用的高。因为使用系统调用时，需要上下文的切换及状态的转换(由用户态转向核心态)。"}
{"ID": 4543, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "批处理操作系统、分时操作系统和实时操作系统各有什么特点?", "Answer": "1)批处理操作系统的用户脱机使用计算机，作业是成批处理的，系统内多道程序并发执行,交互能力差。 2)分时操作系统可让多个用户同时使用计算机，人机交互性较强，具有每个用户独立使用计算机的独占性，系统响应及时。 3)实时操作系统能对控制对象做出及时反应，可靠性高，响应及时，但资源利用率低。"}
{"ID": 4544, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "处理器为什么要区分核心态和用户态两种操作方式?在什么情况下进行两种方式的切换?", "Answer": "区分执行态的主要目的是保护系统程序。用户态到核心态的转换发生在中断产生时，而核心态到用户态的转换则发生在中断返回用户程序时。"}
{"ID": 4545, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "为什么说直到出现中断和通道技术后，多道程序概念才变得有用?", "Answer": "多道程序并发执行是指有的程序正在CPU上执行，而另一些程序正在I/O设备上进行传输,即通过CPU操作与外设传输在时间上的重叠必须有中断和通道技术的支持，原因如下:1)通道是一种控制一台或多台外部设备的硬件机构，它一旦被启动就独立于CPU运行，因而做到了输入/输出操作与CPU 并行工作。但早期CPU与通道的联络方法是由 CPU 向通道发出询问指令来了解通道工作是否完成的。若未完成，则主机就循环询问直到通道工作结束为止。因此，这种询问方式是无法真正做到 CPU与I/O设备并行工作的。2)在硬件上引入了中断技术。所谓中断，就是在输入/输出结束时，或硬件发生某种故障时，由相应的硬件(即中断机构)向CPU发出信号，这时CPU 立即停下工作而转向处理中断请求，待处理完中断后再继续原来的工作。因此，通道技术和中断技术结合起来就可实现CPU与IO设备并行工作，即CPU 启动通道传输数据后便去执行其他程序的计算工作，而通道则进行输入/输出操作;当通道工作结束时，再通过中断机构向CPU发出中断请求，CPU则暂停正在执行的操作，对出现的中断进行处理，处理完后再继续原来的工作。这样，就真正做到了CPU与I/O设备并行工作。此时，多道程序的概念才变为现实。"}
{"ID": 4546, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "有两个程序，程序A依次使用CPU 计10s、设备甲计5s、CPU计5s、设备乙计10s、CPU计10s;程序B依次使用设备甲计10s、CPU计10s、设备乙计5s、CPU计5s、设备乙计10s。在单道程序环境下先执行程序A再执行程序B，CPU的利用率是多少?在多道程序环境下，CPU利用率是多少?", "Answer": "单道环境下，CPU 的运行时间为(10+5+10)s+(10+5)s=40s，两个程序运行的总时间为40s+40s=80s，因此利用率是40/80=50%。多道环境下,CPU运行时间为40s,两个程序运行总时间为45s,因此利用率为40/45=88.9%。"}
{"ID": 4547, "Split": "Test", "Domain": "Operating System", "SubDomain": "Overview", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "设某计算机系统有一个CPU、一台输入设备、一台打印机。现有两个进程同时进入就绪态，且进程A先得到CPU 运行，进程B后运行。进程A的运行轨迹为:计算50ms,打印信息100ms，再计算50ms，打印信息100ms，结束。进程B的运行轨迹为:计算50ms，输入数据80ms，再计算100ms，结束。画出它们的时序关系图(可用甘特图)，并说明:1)开始运行后，CPU有无空闲等待?若有，在哪段时间内等待?计算CPU 的利用率。 2)进程A运行时有无等待现象?若有，在何时发生等待现象? 3)进程B运行时有无等待现象?若有，在何时发生等待现象?", "Answer": "1)CPU在100~150ms时间段内空闲，利用率为250/300 = 83.3%。 2)进程A为无等待现象。 3)进程B为有等待现象，0~50ms，180~200ms。"}
{"ID": 4548, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "进程和程序之间可以形成一对一、一对多、多对一、多对多的关系，请分别举例说明在什么情况下会形成这样的关系。", "Answer": "从进程的概念、进程与程序之间的关系来考虑问题的解答。进程是程序的执行过程，进程代表执行中的程序，因此进程与程序的差别就隐含在“执行”之中。程序是静态的指令集合，进程是程序的动态执行过程。静态的程序除占用磁盘空间外，不需要其他系统资源，只有执行中的进程才需要分配内存、CPU等系统资源。进程的定义说明了两点:1)进程与程序相关，进程包含了程序。程序是进程的核心内容，没有程序就没有进程。2)进程不仅仅是程序，还包含程序在执行过程中使用的全部资源。没有资源，程序就无法执行，因此进程是程序执行的载体。运行一个程序时，操作系统首先要创建一个进程，为进程分配内存等资源，然后加入进程队列中执行。对单个进程在某个时刻而言，一个进程只能执行一个程序，进程与程序之间是一对一的关系。但对整个系统中的进程集合及进程的生命周期而言，进程与程序之间可以形成一对一、多对一、一对多、多对多的关系。具体解答如下。执行一条命令或运行一个应用程序时，进程和程序之间形成一对一的关系。进程在执行过程中可以加载执行不同的应用程序，从而形成一对多的关系;以不同的参数或数据多次执行同一个应用程序时，形成多对一的关系;并发地执行不同的应用程序时，形成多对多的关系。"}
{"ID": 4549, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "父进程创建子进程和主程序调用子程序有何不同?", "Answer": "父进程创建子进程后，父进程与子进程同时执行(并发)。主程序调用子程序后，主程序暂停在调用点，子程序开始执行，直到子程序返回，主程序才开始执行。"}
{"ID": 4550, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "什么是多线程?多线程与多任务有什么区别?", "Answer": "多线程是指在一个程序中可以定义多个线程并同时运行它们，每个线程可以执行不同的任务。多线程与多任务的区别:多任务是针对操作系统而言的，代表操作系统可以同时执行的程序个数;多线程是针对一个程序而言的，代表一个程序可以同时执行的线程个数，而每个线程可以完成不同的任务。操作系统内核中，有一组程序专门用于完成对进程的控制，这些原语至少需要包括创建新进程原语、阻塞进程原语、唤醒进程原语、终止进程原语等操作。系统服务对用户开放，即用户可以通过相应的接口来使用它们。"}
{"ID": 4551, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "若系统中没有运行进程，是否一定没有就绪进程?为什么?", "Answer": "是。若系统中未运行进程，则系统很快会选择一个就绪进程运行。只有就绪队列中无进程时，CPU才可能处于空闲状态。"}
{"ID": 4552, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "若系统中既没有运行进程，又没有就绪进程，系统中是否就没有进程?为什么?", "Answer": "不一定。因为系统中的所有进程可能都处于等待态，可能处于死锁状态，也有可能因为等待的事件未发生而进入循环等待态。"}
{"ID": 4553, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "在采用优先级进程调度时，运行进程是否一定是系统中优先级最高的进程?", "Answer": "不一定。因为高优先级的进程有可能正处在等待队列中，进程调度会从就绪队列中选择一个进程占用 CPU，这个被选中的进程可能优先级较低。"}
{"ID": 4554, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "现代操作系统一般都提供多进程(或称多任务)运行环境，为支持多进程的并发执行，系统必须建立哪些关于进程的数据结构?", "Answer": "为支持多进程的并发执行，系统为每个进程建立了一个数据结构:进程控制块(PCB),用于进程的管理和控制。PCB中记录了有关进程的一些描述信息和控制信息，包括进程标识符、进程当前的状态、优先级、进程放弃CPU时的现场信息，以及指示组成进程的程序和数据在存储器中存放位置的信息、资源使用信息、进程各种队列的连接指针和反映进程之间的隶属关系的信息等。"}
{"ID": 4555, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "现代操作系统一般都提供多进程(或称多任务)运行环境，为支持进程状态的变迁，系统至少应提供哪些进程控制原语?", "Answer": "在进程的整个生命周期中，会经历多种状态。进程控制的主要职能是对系统中所有进程实施有效地管理，它具有创建新进程、撤销已有进程、实现进程的状态转换等功能。在操作系统内核中，有一组程序专门用于完成对进程的控制，这些原语至少需要包括创建新进程原语、阻塞进程原语、唤醒进程原语、终止进程原语等操作。系统服务对用户开放，也就是说用户可以通过相应的接口来使用它们。"}
{"ID": 4556, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "现代操作系统一般都提供多进程(或称多任务)运行环境，执行每个进程控制原语时，进程状态发生什么变化?相应的数据结构发生什么变化?", "Answer": "进程创建原语:从PCB集合中申请一个空白的PCB，将调用者参数(如进程外部标识符、初始CPU状态、进程优先数、初始内存及申请资源清单等)添入该PCB，设置记账数据。置新进程为“就绪”态。终止进程原语:用于终止完成的进程，回收其所占资源。包括消去其资源描述块，消去进程的 PCB。阻塞原语:将进程从运行态变为阻塞态。进程被插入等待事件的队列，同时修改 PCB 中相应的表项，如进程状态和等待队列指针等。唤醒原语:将进程从阻塞态变为就绪态。进程从阻塞队列中移出，插入就绪队列，等待调度，同时修改PCB中相应的表项，如进程状态等。"}
{"ID": 4557, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "为什么说多级反馈队列调度算法能较好地满足各类用户的需要?", "Answer": "多级反馈队列调度算法能较好地满足各种类型用户的需要。对终端型作业用户而言，由于它们提交的作业大多属于交互型作业，作业通常比较短小，系统只要能使这些作业在第1级队列所规定的时间片内完成，便可使终端型作业用户感到满意;对于短批处理作业用户而言，它们的作业开始时像终端型作业一样，若仅在第1级队列中执行一个时间片即可完成，便可获得与终端型作业一样的响应时间，对于稍长的作业，通常也只需要在第2级队列和第3级队列中各执行一个时间片即可完成，其周转时间仍然较短;对于长批处理作业用户而言，它们的长作业将依次在第1,2,.,n级队列中运行，然后按时间片轮转方式运行，用户不必担心其作业长期得不到处理。"}
{"ID": 4558, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "何谓管程?", "Answer": "当共孕资源用共享数据结构表示时，资源管理程序可用对该数据结构进行操作的一组过程来表示，如资源的请求和释放过程request 和 release。把这样一组相关的数据结构和过程一并归为管程。Hansan为管程所下的定义是:“一个管程定义了一个数据结构和能为并发进程所执行(在该数据结构上)的一组操作，这组操作能同步进程和改变管程中的数据。”"}
{"ID": 4559, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "说明引入管程的必要性。", "Answer": "管程的引入是为了解决临界区分散所带来的管理和控制问题。在没有管程之前，对临界区的访问分散在各个进程之中，不易发现和纠正分散在用户程序中的不正确使用P,V操作等问题。管程将这些分散在各进程中的临界区集中起来，并加以控制和管理，管程一次只允许一个进程进入管程内，从而既便于系统管理共享资源，又能保证互斥。"}
{"ID": 4560, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "设某计算机系统有一个CPU、一台输入设备、一台打印机。现有两个进程同时进入就绪态，且进程A先得到CPU 运行，进程B后运行。进程A的运行轨迹为:计算50ms,打印信息100ms，再计算50ms，打印信息100ms，结束。进程B的运行轨迹为:计算50ms，输入数据80ms，再计算100ms，结束。开始运行后，CPU有无空闲等待?若有，在哪段时间内等待?计算CPU 的利用率。", "Answer": "有，在100~150ms等待，利用率=[300-(150-100)]/300x100%=83.3%。"}
{"ID": 4561, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "设某计算机系统有一个CPU、一台输入设备、一台打印机。现有两个进程同时进入就绪态，且进程A先得到CPU 运行，进程B后运行。进程A的运行轨迹为:计算50ms,打印信息100ms，再计算50ms，打印信息100ms，结束。进程B的运行轨迹为:计算50ms，输入数据80ms，再计算100ms，结束。进程A运行时有无等待现象?若有，在什么时候发生等待现象?", "Answer": "无。"}
{"ID": 4562, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "设某计算机系统有一个CPU、一台输入设备、一台打印机。现有两个进程同时进入就绪态，且进程A先得到CPU 运行，进程B后运行。进程A的运行轨迹为:计算50ms,打印信息100ms，再计算50ms，打印信息100ms，结束。进程B的运行轨迹为:计算50ms，输入数据80ms，再计算100ms，结束。进程B运行时有无等待现象?若有，在什么时候发生等待现象?", "Answer": "有，在0~50ms、180~200ms时发生等待现象。"}
{"ID": 4563, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "有一个CPU和两台外设D_1,D_2，且在能够实现抢占式优先级调度算法的多道程序环境中，同时进入优先级由高到低的P_1,P_2,P_3三个作业，每个作业的处理顺序和使用资源的时间如下: P_1: D_2 (30ms), CPU (10ms), D_1(30ms), CPU(10ms);P_2:D_1(20ms),CPU (20ms)， D_2(40ms); P_3: CPU (30ms)，D_1(20ms)假设忽略不计其他辅助操作的时间,每个作业的周转时间T_1,T_2,T_3分别为多少?CPU和D_1,的利用率各是多少?", "Answer": "作业P_1的优先级最高，周转时间等于运行时间, T_180ms;作业P_2的等待时间为10ms，运行时间为80ms,周转时间T_2=(10+80)ms=90ms;作业P_3,的等待时间为40ms,运行时间为 50ms,因此周转时间 T_3=90ms。    三个作业从进入系统到全部运行结束，时间为 90ms。CPU与外设都是独占设备，运行时间分别为各作业的使用时间之和。CPU运行时间为[(10+10)+20+30]ms=70ms，D:为(30+20+20)ms=70ms，D,为(30+40)ms=70ms，因此利用率均为70/90=77.8%。"}
{"ID": 4564, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "设系统中有下述解决死锁的方法:1)银行家算法。2)检测死锁，终止处于死锁状态的进程，释放该进程占有的资源。3)资源预分配。简述哪种办法允许最大的并发性，即哪种办法允许更多的进程无等待地向前推进。请按“并发性”从大到小对上述三种办法排序。", "Answer": "死锁在系统中不可能完全消灭，但我们要尽可能地减少死锁的发生。对死锁的处理有4种方法:忽略、检测与恢复、避免和预防，每种方法对死锁的处理从宽到严，同时系统并发性由大到小。这里银行家算法属于避免死锁，资源预分配属于预防死锁。死锁检测方法可以获得最大的并发性。并发性排序:死锁检测方法、银行家算法、资源预分配法。"}
{"ID": 4565, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某银行计算机系统要实现一个电子转账系统，基本业务流程是:首先对转出方和转入方的账户进行加锁，然后进行转账业务，最后对转出方和转入方的账户进行解锁。若不采取任何措施，系统会不会发生死锁?为什么?请设计一个能够避免死锁的办法。", "Answer": "系统会死锁。因为对两个账户进行加锁操作是可以分割进行的，若此时有两个用户同时进行转账，P先对账户A进行加锁，再申请账户B:Pz先对账户B进行加锁，再申请账户A，此时产生死锁。解决的办法是:可以采用资源顺序分配法对A、B账户进行编号，用户转账时只能按照编号由小到大进行加锁;也可采用资源预分配法，要求用户在使用资源前将所有资源一次性申请到。"}
{"ID": 4566, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "有三个进程P_1，P_2和P_3并发工作。进程 P_1需要资源 S_3和资源S_1;进程P_2需要资源S__2和资源 S_1;进程P_3需要资源 S_3和资源S_2。问:若对资源分配不加限制，会发生什么情况?为什么?", "Answer": "可能会发生死锁。满足发生死锁的 4 大条件，例如，P_1 占有 S_1 申请 S_3，P_2 占有 S_2 申请S_1，P_3占有 S_3申请S_2."}
{"ID": 4567, "Split": "Test", "Domain": "Operating System", "SubDomain": "Processes and Threads", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "有三个进程P_1，P_2和P_3并发工作。进程 P_1需要资源 S_3和资源S_1;进程P_2需要资源S__2和资源 S_1;进程P_3需要资源 S_3和资源S_2。问:为保证进程正确运行，应采用怎样的分配策略?列出所有可能的方法。", "Answer": "可有以下几种答案:A.采用静态分配:由于执行前已获得所需的全部资源，因此不会出现占有资源又等待别的资源的现象(或不会出现循环等待资源的现象)。B.采用按序分配:不会出现循环等待资源的现象。C.采用银行家算法:因为在分配时，保证了系统处于安全状态。"}
{"ID": 4568, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "动态分区与固定分区分配方式相比，是否解决了碎片问题?", "Answer": "动态分区和固定分区分配方式相比，内存空间的利用率要高一些。但是，总会存在一些分散的较小空闲分区，即外部碎片，它们存在于已分配的分区之间，不能充分利用。可以采用拼接技术加以解决。固定分区分配方式存在内部碎片，而无外部碎片;动态分区分配方式存在外部碎片，无内部碎片。"}
{"ID": 4569, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "覆盖技术与虚拟存储技术有何本质上的不同?", "Answer": "覆盖技术与虚拟存储技术最本质的不同在于，覆盖程序段的最大长度要受内存容量大小的限制，而虚拟存储器中程序的最大长度不受内存容量的限制，只受计算机地址结构的限制。另外，覆盖技术中的覆盖段由程序员设计，且要求覆盖段中的各个覆盖具有相对独立性，不存在直接联系或相互交叉访问;而虚拟存储技术对用户的程序段没有这种要求。"}
{"ID": 4570, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "交换技术与虚拟存储技术中使用的调入/调出技术有何相同与不同之处?", "Answer": "交换技术就是把暂时不用的某个程序及数据从内存移到外存中，以便腾出必要的内存空间，或把指定的程序或数据从外存读到内存中的一种内存扩充技术。交换技术与虚存中使用的调入/调出技术的主要相同点是，都要在内存与外存之间交换信息。交换技术与虚存中使用的调入/调出技术的主要区别是:交换技术调入/调出整个进程，因此一个进程的大小要受内存容量大小的限制;而虚存中使用的调入/调出技术在内存和外存之间来回传递的是页面或分段，而不是整个进程，从而使得进程的地址映射具有更大的灵活性，且允许进程的大小比可用的内存空间大。"}
{"ID": 4571, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某操作系统采用段式管理，用户区主存为512KB，空闲块链入空块表，分配时截取空块的前半部分(小地址部分)。初始时全部空闲。执行申请、释放操作序列reg(300KB)，reg(100KB),release(300KB),reg(150KB),reg(50KB),reg(90KB)后: 采用最先适配，空块表中有哪些空块?(指出大小及始址)", "Answer": "第一块:始址290K，大小10KB:第二块:始址400K，大小112KB。"}
{"ID": 4572, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某操作系统采用段式管理，用户区主存为512KB，空闲块链入空块表，分配时截取空块的前半部分(小地址部分)。初始时全部空闲。执行申请、释放操作序列reg(300KB)，reg(100KB),release(300KB),reg(150KB),reg(50KB),reg(90KB)后:采用最佳适配，空块表中有哪些空块?(指出大小及始址)", "Answer": "内存中的空块为:第一块:始址240K，大小60KB;第二块:超始地址 450K，大小62KB。"}
{"ID": 4573, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某一页式系统，其页表存放在主存中: 若对主存的一次存取需1.5us，问实现一次页面访问时存取时间是多少?", "Answer": "页表在主存时，实现一次存取需要访问主存两次:第一次是访问页表，获得所需访问数据所在页面的物理地址;第二次才是根据这个物理地址存取数据。因为页表在主存，所以CPU必须访问主存两次，即实现一次页面访问的存取时间是1.5x2=3μs"}
{"ID": 4574, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某一页式系统，其页表存放在主存中: 若系统有快表且其平均命中率为85%，而页表项在快表中的查找时间可忽略不计，试问此时的存取时间为多少?", "Answer": "页表在主存时，实现一次存取需要访问主存两次:第一次是访问页表，获得所需访问数据所在页面的物理地址;第二次才是根据这个物理地址存取数据。系统增加快表后，在快表中找到页表项的概率为85%，所以实现一次页面访问的存取时间为0.85x(0+1.5)+(1-0.85)x2x1.5=1.725μs"}
{"ID": 4575, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在页式、段式和段页式存储管理中，当访问一条指令或数据时，各需要访问内存几次?", "Answer": "在页式存储管理中，访问指令或数据时，首先要访问内存中的页表，查找到指令或数据所在页面对应的页表项，然后根据页表项查找访问指令或数据所在的内存页面。需要访问内存2次。段式存储管理同理，需要访问内存2次。段页式存储管理，首先要访问内存中的段表，然后访问内存中的页表，最后访问指令或数据所在的内存页面，需要访问内存3次。对于比较复杂的情况，如多级页表，若页表划分为N级，则需要访问内存N+1次。若系统中有快表，则在快表命中时，只需要访问内存1次。"}
{"ID": 4576, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在页式虚存管理系统中，假定驻留集为m个页帧(初始所有页帧均为空)，在长为p的引用串中具有n个不同页号(n>m)，对于FIFO、LRU两种页面置换算法，试给出页故障数的上限和下限，说明理由并举例说明。", "Answer": "发生页故障的原因是，当前访问的页不在主存，需要将该页调入主存。此时不管主存中是否已满(已满则先调出一页)，都要发生一次页故障，即无论怎样安排，n个不同的页号在首次进入主存时必须要发生一次页故障，总共发生n次，这是页故障数的下限。虽然不同的页号数为n小于等于总长度p(访问串可能会有一些页重复出现)，但驻留集m<n，所以可能会有某些页进入主存后又被调出主存，当再次访问时又发生一次页故障的现象，即有些页可能会出现多次页故障。最差的情况是每访问一个页号时，该页都不在主存中，这样共发生p次故障。因此，对于FIFO、LRU 置换算法，页故障数的上限均为 p，下限均为n。例如，当m=3,p =12,n=4时，有访问串111223334444，则页故障数为4，这是下限n的情况。又如，有访问串123412341234，则页故障数为12，这是上限p的情况。"}
{"ID": 4577, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知系统为32位实地址，采用48位虚拟地址，页面大小为4KB，页表项大小为8B，每段最大为 4GB。假设系统使用纯页式存储，则要采用多少级页表?页内偏移多少位?", "Answer": "页面大小为4KB，因此页内偏移为12位。系统采用48位虚拟地址，因此虚页号为48-12=36位。采用多级页表时，最高级页表项不能超出一页大小;每页能容纳的页表项数为4KB/8B=512=2^9，36/9=4，因此应采用4级页表，最高级页表项正好占据一页空间。"}
{"ID": 4578, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "已知系统为32位实地址，采用48位虚拟地址，页面大小为4KB，页表项大小为8B，每段最大为 4GB。假设系统采用一级页表，TLB命中率为98%，TLB访问时间为10ns，内存访问时间为100ns,并假设当TLB访问失败时才开始访问内存，问平均页面访问时间是多少?", "Answer": "系统进行页面访问操作时，首先读取页面对应的页表项，有 98%的概率可以在TLB 中直接读取到，然后进行地址转换，访问内存读取页面;若TLB未命中，则要通过一次内存访问来读取页表项。页面平均访问时间为98%*(10+100)+(1-98%)*(10+100+100)=112ns"}
{"ID": 4579, "Split": "Test", "Domain": "Operating System", "SubDomain": "Memory Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在页式虚拟管理的页面替换算法中，对于任何给定的驻留集大小，在什么样的访问串情况下，FIFO与LRU替换算法一样(即被替换的页面和缺页情况完全一样)?", "Answer": "由于驻留集大小任意，现要求两种算法的替换页面和缺页悄况完全一样,就意味着要求FIFO与LRU的置换选择一致。FIFO替换最早进入主存的页面，LRU 替换上次访问以来最久未被访问的页面，这两个页面一致。就是说，最先进入主存的页面在此次缺页之前不能再被访问，这样该页面也就同时是最久未被访问的页面。例如，合法驻留集大小为4时，对访问串1,2,3,4,1,2,5，当5号页面调入主存时，应在1,2,3,4页中选择一个替换，FIFO选择1，LRU 选择3。原因在于1号页面虽然最先进入主存，但由于其进入主存后又被再次访问，所以它不是最久未被访问的页面。若去掉对1号页面的第二次访问，则 FIFO与 LRU 的替换选择就会相同。同理，当5号页面调入主存后，若再访问新的 6号页面，则2号页面会遇到同样的问题。因此，以此类推，访问串中的所有页面号都应不同，但要注意到，连续访问相同页面时不影响后面的替换选择，所以对访问串的要求是:不连续的页面号均不相同。"}
{"ID": 4580, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "简述文件的外存分配中，连续分配、链接分配和索引分配各自的主要优缺点。", "Answer": "连续分配方式的优点是可以随机访问(磁盘)，访问速度快;缺点是要求有连续的存储空间，容易产生碎片，降低磁盘空间利用率，并且不利于文件的增长扩充。链接分配方式的优点是不要求连续的存储空间，能更有效地利用磁盘空间，并且有利于扩充文件;缺点是只适合顺序访问，不适合随机访问;另外，链接指针占用一定的空间，降低了存储效率，可靠性也差。索引分配方式的优点是既支持顺序访问又支持随机访问，查找效率高，便于文件删除;缺点是索引表会占用一定的存储空间。"}
{"ID": 4581, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "对文件的目录结构回答以下问题:若一个共享文件可以被用户随意删除或修改，会有什么问题?", "Answer": "将有可能导致共享该文件的其他用户无文件可用，或使用了不想使用的文件，导致发生错误。"}
{"ID": 4582, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定磁盘块的大小为1KB，对于540MB的硬盘，其文件分配表(FAT)最少需要占用多少存储空间?", "Answer": "对于540MB的硬盘，硬盘总块数为540MB/1KB=540K个。因为540K刚好小于2^20，所以文件分配表的每个表目可用20位，即20/8=2.5B，这样FAT占用的存储空间大小为 2.5Bx540K=1350KB。"}
{"ID": 4583, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某文件系统采用多级索引的方式组织文件的数据存放，假定在文件的i_node中设有13个地址项，其中直接索引10项，一次间接索引项1项，二次间接索引项1项，三次间接索引项1项。数据块的大小为4KB，磁盘地址用4B表示，试问:这个文件系统允许的最大文件长度是多少?", "Answer": "物理块大小为 4KB，数据大小为 4B，则每个物理块可存储的地址数为4KB/4B=1024。最大文件的物理块数可达10+1024+1024^2+1024^3，每个物理块大小为4KB，因此总长度为(10+1024+1024^2+1024^3)x4KB=40KB+4MB+4GB+4TB。这个文件系统允许的最大文件长度是4TB+4GB+4MB+40KB，约为4TB。"}
{"ID": 4584, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某文件系统采用多级索引的方式组织文件的数据存放，假定在文件的i_node中设有13个地址项，其中直接索引10项，一次间接索引项1项，二次间接索引项1项，三次间接索引项1项。数据块的大小为4KB，磁盘地址用4B表示，试问:一个2GB大小的文件，在这个文件系统中实际占用多少空间?", "Answer": "占用空间分为文件实际大小和索引项大小，文件大小为2GB，需要使用到二次间接索引项。该文件占用2GB/4KB =512x1024个数据块。一次间接索引项使用1个间接索引块，二次间接索引项使用1+[(512x1024-10-1024)/10247]≈512个间接索引块(最左的1表示二次间址块)，所以间接索引块所占空间大小为(1+512)x4KB=2MB+4KB。另外每个文件使用的i_node数据结构占13x4B=52B,因此该文件实际占用磁盘空间大小为 2GB+2MB+4KB+52B。 "}
{"ID": 4585, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "文件采用多重索引结构搜索文件内容。设块长为512B，每个块号长2B，若不考虑逻辑块号在物理块中所占的位置，分别计算二级索引和三级索引时可寻址的文件最大长度。", "Answer": "由于块长为512B，每个块号长2B，因此一个一级索引表可容纳256个磁盘块地址。同样，一个二级索引表可容纳256个磁盘块地址，一个三级索引表也可容纳256个磁盘块地址。所以采用二级索引时，可寻址的文件最大长度是 256x256x512=32MB。采用三级索引时，可寻址的文件最大长度是 256x256x256x512=8GB"}
{"ID": 4586, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "设某文件系统采用两级目录的结构，主目录中有10个子目录，每个子目录中有10个目录项。在同样多目录的情况下，若采用单级目录结构，所需平均检索目录项数是两级目录结构平均检索目录项数的多少倍?", "Answer": "依题意，文件系统中共有10x10=100个目录，若采用单级目录结构，目录表中有100个目录项，在检索一个文件时，平均检索的目录项数=目录项/2 =50。采用两级目录结构时，主目录有10个目录项，每个子目录均有10个目录项，每级平均检索5个目录项，即检索一个文件时平均检索10个目录项，所以采用单级目录结构所需检索目录项数是两级目录结构检索目录项数的50/10=5倍。"}
{"ID": 4587, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定一个盘组共有100个柱面，每个柱面上有16个磁道，每个磁道分成4个扇区。整个磁盘空间共有多少个存储块?", "Answer": "整个磁盘空间的存储块数目为4x16x100=6400个。"}
{"ID": 4588, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定一个盘组共有100个柱面，每个柱面上有16个磁道，每个磁道分成4个扇区。若用字长32位的单元来构造位示图，共需要多少个字?", "Answer": "位示图应为6400个位，如果用字长为32位(即n=32)的单元来构造位示图，那么需要6400/32=200个字。"}
{"ID": 4589, "Split": "Test", "Domain": "Operating System", "SubDomain": "File Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定一个盘组共有100个柱面，每个柱面上有16个磁道，每个磁道分成4个扇区。位示图中第18个字的第16位对应的块号是多少?", "Answer": "位示图中第18个字的第16位(即i=18,j=16)对应的块号为32x(18-1)+16=560。"}
{"ID": 4590, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "DMA方式与中断控制方式的主要区别是什么?", "Answer": "DMA控制方式与中断控制方式的主要区别如下:1)中断控制方式在每个数据传送完成后中断CPU，而DMA控制方式则在所要求传送的一批数据全部传送结束时中断CPU。2)中断控制方式的数据传送在中断处理时由CPU控制完成，而DMA控制方式则在DMA控制器的控制下完成。不过，在DMA控制方式中，数据传送的方向、存放数据的内存始址及传送数据的长度等仍然由CPU控制。3)DMA方式以存储器为核心，中断控制方式以CPU为核心。因此DMA方式能与CPU并行工作。4)DMA方式传输批量的数据，中断控制方式的传输则以字节为单位。"}
{"ID": 4591, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "DMA方式与通道方式的主要区别是什么?", "Answer": "在DMA 控制方式中，在DMA控制器控制下设备和主存之间可以成批地进行数据交换而不用CPU干预，这样既减轻了CPU的负担，又大大提高了IO数据传送的速度。通道控制方式与DMA控制方式类似，也是一种以内存为中心实现设备与内存直接交换数据的控制方式。不过在通道控制方式中，CPU只需发出启动指令，指出通道相应的操作和I/O设备，该指令就可以启动通道并使通道从内存中调出相应的通道程序执行。与DMA控制方式相比，通道控制方式所需的CPU干预更少，并且一个通道可以控制多台设备，进一步减轻了CPU的负担。另外，对通道来说，可以使用一些指令灵活改变通道程序，这一点DMA控制方式无法做到。"}
{"ID": 4592, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "用于设备分配的数据结构有哪些?", "Answer": "用于设备分配的数据结构有系统设备表(SDT)、设备控制表(DCT)、控制器控制表(COCT)和通道控制表(CHCT)。"}
{"ID": 4593, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Open-ended", "Tag": "Knowledge", "Language": "Chinese", "Question": "用于设备分配的数据结构之间的关系是什么?", "Answer": "SDT 整个系统中只有一张，它记录系统中全部设备的情况，是系统范围的数据结构。每个设备有一张DCT，系统为每个设备配置一张DCT，以记录本设备的情况。每个控制器有一张COCT,系统为每个控制器都设置一张用于记录本控制器情况的COCT。系统为每个通道配置一张CHCT,以记录通道情况。SDT中每个表目有一个指向DCT的指针,DCT中的每个表目有一个指向COCT的指针，COCT 中有一个CHCT指针，CHCT 中有一个COCT指针。"}
{"ID": 4594, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在32位100MHz的单总线计算机系统中(10ns一个周期)，磁盘控制器使用DMA以40MB/s的速率从存储器中读出数据或向存储器写入数据。假设计算机在没有被周期挪用的情况下，在每个循环周期中读取并执行一个32位的指令。这样做，磁盘控制器使指令的执行速度降低了多少?", "Answer": "在32位单总线的系统中，磁盘控制器使用 DMA传输数据的速率为 40MB/s，即每100ns传输4B(32位)的数据。控制器每读取10个指令就挪用一个周期。因此，磁盘控制器使指令的执行速度降低了10%。"}
{"ID": 4595, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某计算机系统中，时钟中断处理程序每次执行时间为2ms(包括进程切换开销)，若时钟中断频率为60Hz，问CPU用于时钟中断处理的时间比率为多少?", "Answer": "时钟中断频率为60Hz，因此中断周期为1/60s，每个时钟周期中用于中断处理的时间为2ms,因此比率为0.002/(1/60)12%。"}
{"ID": 4596, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "考虑56kb/s调制解调器的性能，驱动程序输出一个字符后就阻塞，当一个字符打印完毕后，产生一个中断通知阻塞的驱动程序，输出下一个字符，然后阻塞。若发消息、输出一个字符和阻塞的时间总和为0.1ms，则由于处理调制解调器而占用的CPU时间比率是多少?假设每个字符有一个开始位和一个结束位，共占10位。", "Answer": "因为一个字符占10位，因此在56kb/s的速率下，每秒传送56000/10=5600个字符，即产生5600次中断。每次中断需 0.1ms,因此处理调制解调器占用的 CPU 时间共为5600x0.1ms=560ms,占 56%的 CPU 时间。"}
{"ID": 4597, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "一个串行线能以最大50000B/s的速度接收输入。数据平均输入速率是20000B/s。若用轮询来处理输入，不管是否有输入数据，轮询例程都需要3μs来执行。在下一个字节到达之前未从控制器中取走的字节将丢失。那么最大的安全的轮询时间间隔是多少?", "Answer": "串行线接收数据的最大速度为50000B/s，即每20μs接收1B，而轮询例程需3μs来执行，因此最大的安全轮询时间间隔是17μs。"}
{"ID": 4598, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在某系统中，从磁盘将一块数据输入缓冲区需要花费的时间为T，CPU对一块数据进行处理的时间为C，将缓冲区的数据传送到用户区所花的时间为M，那么在单缓冲情况下，系统处理大量数据时，一块数据的处理时间为多少?", "Answer": "在单缓冲的情况下，应先从磁盘把一块数据输入缓冲区，所花费的时间为T;然后由操作系统将缓冲区的数据传送到用户区，所花的时间为M;接下来便由CPU 对这一块数据进行计算，计算时间为C。由于CPU的计算操作与磁盘的数据输入操作可以并行，因此一块数据的处理时间为 max(C,T)+M。"}
{"ID": 4599, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "在某系统中，从磁盘将一块数据输入缓冲区需要花费的时间为T，CPU对一块数据进行处理的时间为C，将缓冲区的数据传送到用户区所花的时间为M，那么在双缓冲情况下，系统处理大量数据时，一块数据的处理时间为多少?", "Answer": "在双缓冲的情况下，初始时两个缓冲区都是空的。应先从磁盘把一块数据输入第一个缓冲区，当装满第一个缓冲区后，操作系统可将第一个缓冲区的数据传送到用户区并对第一块数据进行计算，与此同时可将磁盘输入数据送入第二个缓冲区;当计算完成后，若第二个缓冲区已装满数据，则又可以将第二个缓冲区中的数据传送至用户区并对第二块数据进行计算，与此同时可将磁盘输入数据送入第一个缓冲区，如此反复交替使用两个缓冲区。CPU 处理一个缓冲区中的数据的耗时为C+M，而准备好另一个缓冲区内的数据的耗时为T。因此，当C+M>T时，CPU刚处理完一个缓冲区的数据，另一个缓冲区的数据就已经准备好了，就可以紧接着处理下一块数据，因此平均来看，每处理一块数据耗时为C+M。而当C+M<T时，CPU处理完一个缓冲区的数据，另一个缓冲区的数据还没准备好，因此每隔T的时间，才可以开始处理下一块数据，平均来看处理一块数据耗时为T。综上，采用双缓冲区，处理一块数据平均耗时为 max(C+M,T）。"}
{"ID": 4600, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "假定有一个磁盘组共有100个柱面，每个柱面有8个磁道，每个磁道划分成8个扇区。现有一个5000条逻辑记录的文件，逻辑记录的大小与扇区大小相等，该文件以顺序结构被存放在磁盘组上，柱面、磁道、扇区均从0开始编址，逻辑记录的编号从0开始，文件信息从0柱面、0磁道、0扇区开始存放。试问，该文件编号为3468的逻辑记录应存放在哪个柱面的第几个磁道的第几个扇区上?", "Answer": "该磁盘有8个盘面，一个柱面大小为8x864个扇区，即64条逻辑记录。由于所有磁头是固定在一起的，因此在存放数据时，先存满扇区，后存满磁道，再存满柱面。编号为3468的逻辑记录对应的柱面号为3468/64=54:对应的磁道号为(3468 MOD 64)DIV 8=1;对应的扇区号为(3468 MOD 64) MOD 8=4。"}
{"ID": 4601, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "假设磁盘的每个磁道分成9个块，现在一个文件有A,B,……,I共9条记录，每条记录的大小与块的大小相等，设磁盘转速为27ms/转，每读出一块后需要2ms的处理时间。若忽略其他辅助时间，且一开始磁头在即将要读A记录的位置，试问:若将这些记录顺序存放在一个磁道上，则顺序读取该文件要多少时间?", "Answer": "磁盘转速为27ms/转，每个磁道存放9条记录，因此读出1条记录的时间为27/9=3ms。读出并处理记录A需要5ms，此时磁头已转到记录B的中间，因此为了读出记录B，必须再转接近一圈(从记录B的中间到记录B)。后续8条记录的读取及处理与此类似，但最后一条记录的读取与处理只需5ms。于是，处理9条记录的总时间为 8x(27+3)+(3+2)=245ms"}
{"ID": 4602, "Split": "Test", "Domain": "Operating System", "SubDomain": "Input/Output Management", "Format": "Open-ended", "Tag": "Reasoning", "Language": "Chinese", "Question": "某软盘有40个磁道，磁头从一个磁道移至相邻磁道需要6ms。文件在磁盘上非连续存放，逻辑上相邻数据块的平均距离为13磁道，每块的旋转延迟时间及传输时间分别为100ms和25ms，问读取一个100块的文件需要多少时间?若系统对磁盘进行了整理，让同一文件的磁盘块尽可能靠拢，从而使逻辑上相邻数据块的平均距离降为2磁道，这时读取一个100块的文件需要多少时间？", "Answer": "磁盘整理前，逻辑上相邻数据块的平均距离为13磁道，读一块数据需要的时间为 13x6+ 100+25=203ms。因此，读取一个100块的文件需要的时间为 203x100=20300ms。磁盘整理后，逻辑上相邻数据块的平均距离为2磁道，读一块数据需要的时间为2x6+100+25=137ms。因此，读取一个100块的文件需要的时间为 137x100=13700ms。"}
